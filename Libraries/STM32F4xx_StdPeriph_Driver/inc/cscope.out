cscope 15 $HOME/STM32F4xx_DSP_StdPeriph_Lib_V1.4.0/Libraries/STM32F4xx_StdPeriph_Driver/inc               0000292545
	@misc.h

30 #i‚de‡
__MISC_H


31 
	#__MISC_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

56 
uöt8_t
 
NVIC_IRQCh™√l
;

61 
uöt8_t
 
NVIC_IRQCh™√lPªem±i⁄Pri‹ôy
;

66 
uöt8_t
 
NVIC_IRQCh™√lSubPri‹ôy
;

71 
Fun˘i⁄ÆSèã
 
NVIC_IRQCh™√lCmd
;

74 } 
	tNVIC_InôTy≥Def
;

86 
	#NVIC_Ve˘Tab_RAM
 ((
uöt32_t
)0x20000000)

	)

87 
	#NVIC_Ve˘Tab_FLASH
 ((
uöt32_t
)0x08000000)

	)

88 
	#IS_NVIC_VECTTAB
(
VECTTAB
Ë(((VECTTABË=
NVIC_Ve˘Tab_RAM
Ë|| \

	)

89 ((
VECTTAB
Ë=
NVIC_Ve˘Tab_FLASH
))

98 
	#NVIC_LP_SEVONPEND
 ((
uöt8_t
)0x10)

	)

99 
	#NVIC_LP_SLEEPDEEP
 ((
uöt8_t
)0x04)

	)

100 
	#NVIC_LP_SLEEPONEXIT
 ((
uöt8_t
)0x02)

	)

101 
	#IS_NVIC_LP
(
LP
Ë(((LPË=
NVIC_LP_SEVONPEND
Ë|| \

	)

102 ((
LP
Ë=
NVIC_LP_SLEEPDEEP
) || \

103 ((
LP
Ë=
NVIC_LP_SLEEPONEXIT
))

112 
	#NVIC_Pri‹ôyGroup_0
 ((
uöt32_t
)0x700Ë

	)

114 
	#NVIC_Pri‹ôyGroup_1
 ((
uöt32_t
)0x600Ë

	)

116 
	#NVIC_Pri‹ôyGroup_2
 ((
uöt32_t
)0x500Ë

	)

118 
	#NVIC_Pri‹ôyGroup_3
 ((
uöt32_t
)0x400Ë

	)

120 
	#NVIC_Pri‹ôyGroup_4
 ((
uöt32_t
)0x300Ë

	)

123 
	#IS_NVIC_PRIORITY_GROUP
(
GROUP
Ë(((GROUPË=
NVIC_Pri‹ôyGroup_0
Ë|| \

	)

124 ((
GROUP
Ë=
NVIC_Pri‹ôyGroup_1
) || \

125 ((
GROUP
Ë=
NVIC_Pri‹ôyGroup_2
) || \

126 ((
GROUP
Ë=
NVIC_Pri‹ôyGroup_3
) || \

127 ((
GROUP
Ë=
NVIC_Pri‹ôyGroup_4
))

129 
	#IS_NVIC_PREEMPTION_PRIORITY
(
PRIORITY
Ë((PRIORITYË< 0x10)

	)

131 
	#IS_NVIC_SUB_PRIORITY
(
PRIORITY
Ë((PRIORITYË< 0x10)

	)

133 
	#IS_NVIC_OFFSET
(
OFFSET
Ë((OFFSETË< 0x000FFFFF)

	)

143 
	#SysTick_CLKSour˚_HCLK_Div8
 ((
uöt32_t
)0xFFFFFFFB)

	)

144 
	#SysTick_CLKSour˚_HCLK
 ((
uöt32_t
)0x00000004)

	)

145 
	#IS_SYSTICK_CLK_SOURCE
(
SOURCE
Ë(((SOURCEË=
SysTick_CLKSour˚_HCLK
Ë|| \

	)

146 ((
SOURCE
Ë=
SysTick_CLKSour˚_HCLK_Div8
))

158 
NVIC_Pri‹ôyGroupC⁄fig
(
uöt32_t
 
NVIC_Pri‹ôyGroup
);

159 
NVIC_Inô
(
NVIC_InôTy≥Def
* 
NVIC_InôSåu˘
);

160 
NVIC_SëVe˘‹TabÀ
(
uöt32_t
 
NVIC_Ve˘Tab
, uöt32_à
Off£t
);

161 
NVIC_Sy°emLPC⁄fig
(
uöt8_t
 
LowPowîMode
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

162 
SysTick_CLKSour˚C⁄fig
(
uöt32_t
 
SysTick_CLKSour˚
);

164 #ifde‡
__˝lu•lus


	@stm32f4xx_adc.h

30 #i‚de‡
__STM32F4xx_ADC_H


31 
	#__STM32F4xx_ADC_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

55 
uöt32_t
 
ADC_Resﬁuti⁄
;

57 
Fun˘i⁄ÆSèã
 
ADC_SˇnC⁄vMode
;

61 
Fun˘i⁄ÆSèã
 
ADC_C⁄töuousC⁄vMode
;

64 
uöt32_t
 
ADC_Exã∫ÆTrigC⁄vEdge
;

68 
uöt32_t
 
ADC_Exã∫ÆTrigC⁄v
;

72 
uöt32_t
 
ADC_D©aAlign
;

75 
uöt8_t
 
ADC_NbrOfC⁄vîsi⁄
;

79 }
	tADC_InôTy≥Def
;

86 
uöt32_t
 
ADC_Mode
;

89 
uöt32_t
 
ADC_PªsˇÀr
;

92 
uöt32_t
 
ADC_DMAAc˚ssMode
;

96 
uöt32_t
 
ADC_TwoSam∂ögDñay
;

100 }
	tADC_Comm⁄InôTy≥Def
;

108 
	#IS_ADC_ALL_PERIPH
(
PERIPH
Ë(((PERIPHË=
ADC1
Ë|| \

	)

109 ((
PERIPH
Ë=
ADC2
) || \

110 ((
PERIPH
Ë=
ADC3
))

115 
	#ADC_Mode_Indïídít
 ((
uöt32_t
)0x00000000)

	)

116 
	#ADC_DuÆMode_RegSimu…_InjecSimu…
 ((
uöt32_t
)0x00000001)

	)

117 
	#ADC_DuÆMode_RegSimu…_A…îTrig
 ((
uöt32_t
)0x00000002)

	)

118 
	#ADC_DuÆMode_InjecSimu…
 ((
uöt32_t
)0x00000005)

	)

119 
	#ADC_DuÆMode_RegSimu…
 ((
uöt32_t
)0x00000006)

	)

120 
	#ADC_DuÆMode_I¡îl
 ((
uöt32_t
)0x00000007)

	)

121 
	#ADC_DuÆMode_A…îTrig
 ((
uöt32_t
)0x00000009)

	)

122 
	#ADC_TrùÀMode_RegSimu…_InjecSimu…
 ((
uöt32_t
)0x00000011)

	)

123 
	#ADC_TrùÀMode_RegSimu…_A…îTrig
 ((
uöt32_t
)0x00000012)

	)

124 
	#ADC_TrùÀMode_InjecSimu…
 ((
uöt32_t
)0x00000015)

	)

125 
	#ADC_TrùÀMode_RegSimu…
 ((
uöt32_t
)0x00000016)

	)

126 
	#ADC_TrùÀMode_I¡îl
 ((
uöt32_t
)0x00000017)

	)

127 
	#ADC_TrùÀMode_A…îTrig
 ((
uöt32_t
)0x00000019)

	)

128 
	#IS_ADC_MODE
(
MODE
Ë(((MODEË=
ADC_Mode_Indïídít
Ë|| \

	)

129 ((
MODE
Ë=
ADC_DuÆMode_RegSimu…_InjecSimu…
) || \

130 ((
MODE
Ë=
ADC_DuÆMode_RegSimu…_A…îTrig
) || \

131 ((
MODE
Ë=
ADC_DuÆMode_InjecSimu…
) || \

132 ((
MODE
Ë=
ADC_DuÆMode_RegSimu…
) || \

133 ((
MODE
Ë=
ADC_DuÆMode_I¡îl
) || \

134 ((
MODE
Ë=
ADC_DuÆMode_A…îTrig
) || \

135 ((
MODE
Ë=
ADC_TrùÀMode_RegSimu…_InjecSimu…
) || \

136 ((
MODE
Ë=
ADC_TrùÀMode_RegSimu…_A…îTrig
) || \

137 ((
MODE
Ë=
ADC_TrùÀMode_InjecSimu…
) || \

138 ((
MODE
Ë=
ADC_TrùÀMode_RegSimu…
) || \

139 ((
MODE
Ë=
ADC_TrùÀMode_I¡îl
) || \

140 ((
MODE
Ë=
ADC_TrùÀMode_A…îTrig
))

149 
	#ADC_PªsˇÀr_Div2
 ((
uöt32_t
)0x00000000)

	)

150 
	#ADC_PªsˇÀr_Div4
 ((
uöt32_t
)0x00010000)

	)

151 
	#ADC_PªsˇÀr_Div6
 ((
uöt32_t
)0x00020000)

	)

152 
	#ADC_PªsˇÀr_Div8
 ((
uöt32_t
)0x00030000)

	)

153 
	#IS_ADC_PRESCALER
(
PRESCALER
Ë(((PRESCALERË=
ADC_PªsˇÀr_Div2
Ë|| \

	)

154 ((
PRESCALER
Ë=
ADC_PªsˇÀr_Div4
) || \

155 ((
PRESCALER
Ë=
ADC_PªsˇÀr_Div6
) || \

156 ((
PRESCALER
Ë=
ADC_PªsˇÀr_Div8
))

165 
	#ADC_DMAAc˚ssMode_DißbÀd
 ((
uöt32_t
)0x00000000Ë

	)

166 
	#ADC_DMAAc˚ssMode_1
 ((
uöt32_t
)0x00004000Ë

	)

167 
	#ADC_DMAAc˚ssMode_2
 ((
uöt32_t
)0x00008000Ë

	)

168 
	#ADC_DMAAc˚ssMode_3
 ((
uöt32_t
)0x0000C000Ë

	)

169 
	#IS_ADC_DMA_ACCESS_MODE
(
MODE
Ë(((MODEË=
ADC_DMAAc˚ssMode_DißbÀd
Ë|| \

	)

170 ((
MODE
Ë=
ADC_DMAAc˚ssMode_1
) || \

171 ((
MODE
Ë=
ADC_DMAAc˚ssMode_2
) || \

172 ((
MODE
Ë=
ADC_DMAAc˚ssMode_3
))

182 
	#ADC_TwoSam∂ögDñay_5Cy˛es
 ((
uöt32_t
)0x00000000)

	)

183 
	#ADC_TwoSam∂ögDñay_6Cy˛es
 ((
uöt32_t
)0x00000100)

	)

184 
	#ADC_TwoSam∂ögDñay_7Cy˛es
 ((
uöt32_t
)0x00000200)

	)

185 
	#ADC_TwoSam∂ögDñay_8Cy˛es
 ((
uöt32_t
)0x00000300)

	)

186 
	#ADC_TwoSam∂ögDñay_9Cy˛es
 ((
uöt32_t
)0x00000400)

	)

187 
	#ADC_TwoSam∂ögDñay_10Cy˛es
 ((
uöt32_t
)0x00000500)

	)

188 
	#ADC_TwoSam∂ögDñay_11Cy˛es
 ((
uöt32_t
)0x00000600)

	)

189 
	#ADC_TwoSam∂ögDñay_12Cy˛es
 ((
uöt32_t
)0x00000700)

	)

190 
	#ADC_TwoSam∂ögDñay_13Cy˛es
 ((
uöt32_t
)0x00000800)

	)

191 
	#ADC_TwoSam∂ögDñay_14Cy˛es
 ((
uöt32_t
)0x00000900)

	)

192 
	#ADC_TwoSam∂ögDñay_15Cy˛es
 ((
uöt32_t
)0x00000A00)

	)

193 
	#ADC_TwoSam∂ögDñay_16Cy˛es
 ((
uöt32_t
)0x00000B00)

	)

194 
	#ADC_TwoSam∂ögDñay_17Cy˛es
 ((
uöt32_t
)0x00000C00)

	)

195 
	#ADC_TwoSam∂ögDñay_18Cy˛es
 ((
uöt32_t
)0x00000D00)

	)

196 
	#ADC_TwoSam∂ögDñay_19Cy˛es
 ((
uöt32_t
)0x00000E00)

	)

197 
	#ADC_TwoSam∂ögDñay_20Cy˛es
 ((
uöt32_t
)0x00000F00)

	)

198 
	#IS_ADC_SAMPLING_DELAY
(
DELAY
Ë(((DELAYË=
ADC_TwoSam∂ögDñay_5Cy˛es
Ë|| \

	)

199 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_6Cy˛es
) || \

200 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_7Cy˛es
) || \

201 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_8Cy˛es
) || \

202 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_9Cy˛es
) || \

203 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_10Cy˛es
) || \

204 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_11Cy˛es
) || \

205 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_12Cy˛es
) || \

206 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_13Cy˛es
) || \

207 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_14Cy˛es
) || \

208 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_15Cy˛es
) || \

209 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_16Cy˛es
) || \

210 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_17Cy˛es
) || \

211 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_18Cy˛es
) || \

212 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_19Cy˛es
) || \

213 ((
DELAY
Ë=
ADC_TwoSam∂ögDñay_20Cy˛es
))

223 
	#ADC_Resﬁuti⁄_12b
 ((
uöt32_t
)0x00000000)

	)

224 
	#ADC_Resﬁuti⁄_10b
 ((
uöt32_t
)0x01000000)

	)

225 
	#ADC_Resﬁuti⁄_8b
 ((
uöt32_t
)0x02000000)

	)

226 
	#ADC_Resﬁuti⁄_6b
 ((
uöt32_t
)0x03000000)

	)

227 
	#IS_ADC_RESOLUTION
(
RESOLUTION
Ë(((RESOLUTIONË=
ADC_Resﬁuti⁄_12b
Ë|| \

	)

228 ((
RESOLUTION
Ë=
ADC_Resﬁuti⁄_10b
) || \

229 ((
RESOLUTION
Ë=
ADC_Resﬁuti⁄_8b
) || \

230 ((
RESOLUTION
Ë=
ADC_Resﬁuti⁄_6b
))

240 
	#ADC_Exã∫ÆTrigC⁄vEdge_N⁄e
 ((
uöt32_t
)0x00000000)

	)

241 
	#ADC_Exã∫ÆTrigC⁄vEdge_Risög
 ((
uöt32_t
)0x10000000)

	)

242 
	#ADC_Exã∫ÆTrigC⁄vEdge_FÆlög
 ((
uöt32_t
)0x20000000)

	)

243 
	#ADC_Exã∫ÆTrigC⁄vEdge_RisögFÆlög
 ((
uöt32_t
)0x30000000)

	)

244 
	#IS_ADC_EXT_TRIG_EDGE
(
EDGE
Ë(((EDGEË=
ADC_Exã∫ÆTrigC⁄vEdge_N⁄e
Ë|| \

	)

245 ((
EDGE
Ë=
ADC_Exã∫ÆTrigC⁄vEdge_Risög
) || \

246 ((
EDGE
Ë=
ADC_Exã∫ÆTrigC⁄vEdge_FÆlög
) || \

247 ((
EDGE
Ë=
ADC_Exã∫ÆTrigC⁄vEdge_RisögFÆlög
))

256 
	#ADC_Exã∫ÆTrigC⁄v_T1_CC1
 ((
uöt32_t
)0x00000000)

	)

257 
	#ADC_Exã∫ÆTrigC⁄v_T1_CC2
 ((
uöt32_t
)0x01000000)

	)

258 
	#ADC_Exã∫ÆTrigC⁄v_T1_CC3
 ((
uöt32_t
)0x02000000)

	)

259 
	#ADC_Exã∫ÆTrigC⁄v_T2_CC2
 ((
uöt32_t
)0x03000000)

	)

260 
	#ADC_Exã∫ÆTrigC⁄v_T2_CC3
 ((
uöt32_t
)0x04000000)

	)

261 
	#ADC_Exã∫ÆTrigC⁄v_T2_CC4
 ((
uöt32_t
)0x05000000)

	)

262 
	#ADC_Exã∫ÆTrigC⁄v_T2_TRGO
 ((
uöt32_t
)0x06000000)

	)

263 
	#ADC_Exã∫ÆTrigC⁄v_T3_CC1
 ((
uöt32_t
)0x07000000)

	)

264 
	#ADC_Exã∫ÆTrigC⁄v_T3_TRGO
 ((
uöt32_t
)0x08000000)

	)

265 
	#ADC_Exã∫ÆTrigC⁄v_T4_CC4
 ((
uöt32_t
)0x09000000)

	)

266 
	#ADC_Exã∫ÆTrigC⁄v_T5_CC1
 ((
uöt32_t
)0x0A000000)

	)

267 
	#ADC_Exã∫ÆTrigC⁄v_T5_CC2
 ((
uöt32_t
)0x0B000000)

	)

268 
	#ADC_Exã∫ÆTrigC⁄v_T5_CC3
 ((
uöt32_t
)0x0C000000)

	)

269 
	#ADC_Exã∫ÆTrigC⁄v_T8_CC1
 ((
uöt32_t
)0x0D000000)

	)

270 
	#ADC_Exã∫ÆTrigC⁄v_T8_TRGO
 ((
uöt32_t
)0x0E000000)

	)

271 
	#ADC_Exã∫ÆTrigC⁄v_Ext_IT11
 ((
uöt32_t
)0x0F000000)

	)

272 
	#IS_ADC_EXT_TRIG
(
REGTRIG
Ë(((REGTRIGË=
ADC_Exã∫ÆTrigC⁄v_T1_CC1
Ë|| \

	)

273 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T1_CC2
) || \

274 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T1_CC3
) || \

275 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T2_CC2
) || \

276 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T2_CC3
) || \

277 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T2_CC4
) || \

278 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T2_TRGO
) || \

279 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T3_CC1
) || \

280 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T3_TRGO
) || \

281 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T4_CC4
) || \

282 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T5_CC1
) || \

283 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T5_CC2
) || \

284 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T5_CC3
) || \

285 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T8_CC1
) || \

286 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_T8_TRGO
) || \

287 ((
REGTRIG
Ë=
ADC_Exã∫ÆTrigC⁄v_Ext_IT11
))

296 
	#ADC_D©aAlign_Right
 ((
uöt32_t
)0x00000000)

	)

297 
	#ADC_D©aAlign_Le·
 ((
uöt32_t
)0x00000800)

	)

298 
	#IS_ADC_DATA_ALIGN
(
ALIGN
Ë(((ALIGNË=
ADC_D©aAlign_Right
Ë|| \

	)

299 ((
ALIGN
Ë=
ADC_D©aAlign_Le·
))

308 
	#ADC_Ch™√l_0
 ((
uöt8_t
)0x00)

	)

309 
	#ADC_Ch™√l_1
 ((
uöt8_t
)0x01)

	)

310 
	#ADC_Ch™√l_2
 ((
uöt8_t
)0x02)

	)

311 
	#ADC_Ch™√l_3
 ((
uöt8_t
)0x03)

	)

312 
	#ADC_Ch™√l_4
 ((
uöt8_t
)0x04)

	)

313 
	#ADC_Ch™√l_5
 ((
uöt8_t
)0x05)

	)

314 
	#ADC_Ch™√l_6
 ((
uöt8_t
)0x06)

	)

315 
	#ADC_Ch™√l_7
 ((
uöt8_t
)0x07)

	)

316 
	#ADC_Ch™√l_8
 ((
uöt8_t
)0x08)

	)

317 
	#ADC_Ch™√l_9
 ((
uöt8_t
)0x09)

	)

318 
	#ADC_Ch™√l_10
 ((
uöt8_t
)0x0A)

	)

319 
	#ADC_Ch™√l_11
 ((
uöt8_t
)0x0B)

	)

320 
	#ADC_Ch™√l_12
 ((
uöt8_t
)0x0C)

	)

321 
	#ADC_Ch™√l_13
 ((
uöt8_t
)0x0D)

	)

322 
	#ADC_Ch™√l_14
 ((
uöt8_t
)0x0E)

	)

323 
	#ADC_Ch™√l_15
 ((
uöt8_t
)0x0F)

	)

324 
	#ADC_Ch™√l_16
 ((
uöt8_t
)0x10)

	)

325 
	#ADC_Ch™√l_17
 ((
uöt8_t
)0x11)

	)

326 
	#ADC_Ch™√l_18
 ((
uöt8_t
)0x12)

	)

328 #i‡
deföed
 (
STM32F40_41xxx
)

329 
	#ADC_Ch™√l_TempSís‹
 ((
uöt8_t
)
ADC_Ch™√l_16
)

	)

332 #i‡
deföed
 (
STM32F427_437xx
Ë|| deföed (
STM32F429_439xx
Ë|| deföed (
STM32F401xx
Ë|| deföed (
STM32F411xE
)

333 
	#ADC_Ch™√l_TempSís‹
 ((
uöt8_t
)
ADC_Ch™√l_18
)

	)

336 
	#ADC_Ch™√l_Vªföt
 ((
uöt8_t
)
ADC_Ch™√l_17
)

	)

337 
	#ADC_Ch™√l_Vb©
 ((
uöt8_t
)
ADC_Ch™√l_18
)

	)

339 
	#IS_ADC_CHANNEL
(
CHANNEL
Ë(((CHANNELË=
ADC_Ch™√l_0
Ë|| \

	)

340 ((
CHANNEL
Ë=
ADC_Ch™√l_1
) || \

341 ((
CHANNEL
Ë=
ADC_Ch™√l_2
) || \

342 ((
CHANNEL
Ë=
ADC_Ch™√l_3
) || \

343 ((
CHANNEL
Ë=
ADC_Ch™√l_4
) || \

344 ((
CHANNEL
Ë=
ADC_Ch™√l_5
) || \

345 ((
CHANNEL
Ë=
ADC_Ch™√l_6
) || \

346 ((
CHANNEL
Ë=
ADC_Ch™√l_7
) || \

347 ((
CHANNEL
Ë=
ADC_Ch™√l_8
) || \

348 ((
CHANNEL
Ë=
ADC_Ch™√l_9
) || \

349 ((
CHANNEL
Ë=
ADC_Ch™√l_10
) || \

350 ((
CHANNEL
Ë=
ADC_Ch™√l_11
) || \

351 ((
CHANNEL
Ë=
ADC_Ch™√l_12
) || \

352 ((
CHANNEL
Ë=
ADC_Ch™√l_13
) || \

353 ((
CHANNEL
Ë=
ADC_Ch™√l_14
) || \

354 ((
CHANNEL
Ë=
ADC_Ch™√l_15
) || \

355 ((
CHANNEL
Ë=
ADC_Ch™√l_16
) || \

356 ((
CHANNEL
Ë=
ADC_Ch™√l_17
) || \

357 ((
CHANNEL
Ë=
ADC_Ch™√l_18
))

366 
	#ADC_Sam∂eTime_3Cy˛es
 ((
uöt8_t
)0x00)

	)

367 
	#ADC_Sam∂eTime_15Cy˛es
 ((
uöt8_t
)0x01)

	)

368 
	#ADC_Sam∂eTime_28Cy˛es
 ((
uöt8_t
)0x02)

	)

369 
	#ADC_Sam∂eTime_56Cy˛es
 ((
uöt8_t
)0x03)

	)

370 
	#ADC_Sam∂eTime_84Cy˛es
 ((
uöt8_t
)0x04)

	)

371 
	#ADC_Sam∂eTime_112Cy˛es
 ((
uöt8_t
)0x05)

	)

372 
	#ADC_Sam∂eTime_144Cy˛es
 ((
uöt8_t
)0x06)

	)

373 
	#ADC_Sam∂eTime_480Cy˛es
 ((
uöt8_t
)0x07)

	)

374 
	#IS_ADC_SAMPLE_TIME
(
TIME
Ë(((TIMEË=
ADC_Sam∂eTime_3Cy˛es
Ë|| \

	)

375 ((
TIME
Ë=
ADC_Sam∂eTime_15Cy˛es
) || \

376 ((
TIME
Ë=
ADC_Sam∂eTime_28Cy˛es
) || \

377 ((
TIME
Ë=
ADC_Sam∂eTime_56Cy˛es
) || \

378 ((
TIME
Ë=
ADC_Sam∂eTime_84Cy˛es
) || \

379 ((
TIME
Ë=
ADC_Sam∂eTime_112Cy˛es
) || \

380 ((
TIME
Ë=
ADC_Sam∂eTime_144Cy˛es
) || \

381 ((
TIME
Ë=
ADC_Sam∂eTime_480Cy˛es
))

390 
	#ADC_Exã∫ÆTrigInjecC⁄vEdge_N⁄e
 ((
uöt32_t
)0x00000000)

	)

391 
	#ADC_Exã∫ÆTrigInjecC⁄vEdge_Risög
 ((
uöt32_t
)0x00100000)

	)

392 
	#ADC_Exã∫ÆTrigInjecC⁄vEdge_FÆlög
 ((
uöt32_t
)0x00200000)

	)

393 
	#ADC_Exã∫ÆTrigInjecC⁄vEdge_RisögFÆlög
 ((
uöt32_t
)0x00300000)

	)

394 
	#IS_ADC_EXT_INJEC_TRIG_EDGE
(
EDGE
Ë(((EDGEË=
ADC_Exã∫ÆTrigInjecC⁄vEdge_N⁄e
Ë|| \

	)

395 ((
EDGE
Ë=
ADC_Exã∫ÆTrigInjecC⁄vEdge_Risög
) || \

396 ((
EDGE
Ë=
ADC_Exã∫ÆTrigInjecC⁄vEdge_FÆlög
) || \

397 ((
EDGE
Ë=
ADC_Exã∫ÆTrigInjecC⁄vEdge_RisögFÆlög
))

407 
	#ADC_Exã∫ÆTrigInjecC⁄v_T1_CC4
 ((
uöt32_t
)0x00000000)

	)

408 
	#ADC_Exã∫ÆTrigInjecC⁄v_T1_TRGO
 ((
uöt32_t
)0x00010000)

	)

409 
	#ADC_Exã∫ÆTrigInjecC⁄v_T2_CC1
 ((
uöt32_t
)0x00020000)

	)

410 
	#ADC_Exã∫ÆTrigInjecC⁄v_T2_TRGO
 ((
uöt32_t
)0x00030000)

	)

411 
	#ADC_Exã∫ÆTrigInjecC⁄v_T3_CC2
 ((
uöt32_t
)0x00040000)

	)

412 
	#ADC_Exã∫ÆTrigInjecC⁄v_T3_CC4
 ((
uöt32_t
)0x00050000)

	)

413 
	#ADC_Exã∫ÆTrigInjecC⁄v_T4_CC1
 ((
uöt32_t
)0x00060000)

	)

414 
	#ADC_Exã∫ÆTrigInjecC⁄v_T4_CC2
 ((
uöt32_t
)0x00070000)

	)

415 
	#ADC_Exã∫ÆTrigInjecC⁄v_T4_CC3
 ((
uöt32_t
)0x00080000)

	)

416 
	#ADC_Exã∫ÆTrigInjecC⁄v_T4_TRGO
 ((
uöt32_t
)0x00090000)

	)

417 
	#ADC_Exã∫ÆTrigInjecC⁄v_T5_CC4
 ((
uöt32_t
)0x000A0000)

	)

418 
	#ADC_Exã∫ÆTrigInjecC⁄v_T5_TRGO
 ((
uöt32_t
)0x000B0000)

	)

419 
	#ADC_Exã∫ÆTrigInjecC⁄v_T8_CC2
 ((
uöt32_t
)0x000C0000)

	)

420 
	#ADC_Exã∫ÆTrigInjecC⁄v_T8_CC3
 ((
uöt32_t
)0x000D0000)

	)

421 
	#ADC_Exã∫ÆTrigInjecC⁄v_T8_CC4
 ((
uöt32_t
)0x000E0000)

	)

422 
	#ADC_Exã∫ÆTrigInjecC⁄v_Ext_IT15
 ((
uöt32_t
)0x000F0000)

	)

423 
	#IS_ADC_EXT_INJEC_TRIG
(
INJTRIG
Ë(((INJTRIGË=
ADC_Exã∫ÆTrigInjecC⁄v_T1_CC4
Ë|| \

	)

424 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T1_TRGO
) || \

425 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T2_CC1
) || \

426 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T2_TRGO
) || \

427 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T3_CC2
) || \

428 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T3_CC4
) || \

429 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T4_CC1
) || \

430 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T4_CC2
) || \

431 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T4_CC3
) || \

432 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T4_TRGO
) || \

433 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T5_CC4
) || \

434 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T5_TRGO
) || \

435 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T8_CC2
) || \

436 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T8_CC3
) || \

437 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_T8_CC4
) || \

438 ((
INJTRIG
Ë=
ADC_Exã∫ÆTrigInjecC⁄v_Ext_IT15
))

447 
	#ADC_Inje˘edCh™√l_1
 ((
uöt8_t
)0x14)

	)

448 
	#ADC_Inje˘edCh™√l_2
 ((
uöt8_t
)0x18)

	)

449 
	#ADC_Inje˘edCh™√l_3
 ((
uöt8_t
)0x1C)

	)

450 
	#ADC_Inje˘edCh™√l_4
 ((
uöt8_t
)0x20)

	)

451 
	#IS_ADC_INJECTED_CHANNEL
(
CHANNEL
Ë(((CHANNELË=
ADC_Inje˘edCh™√l_1
Ë|| \

	)

452 ((
CHANNEL
Ë=
ADC_Inje˘edCh™√l_2
) || \

453 ((
CHANNEL
Ë=
ADC_Inje˘edCh™√l_3
) || \

454 ((
CHANNEL
Ë=
ADC_Inje˘edCh™√l_4
))

463 
	#ADC_A«logW©chdog_SögÀRegE«bÀ
 ((
uöt32_t
)0x00800200)

	)

464 
	#ADC_A«logW©chdog_SögÀInjecE«bÀ
 ((
uöt32_t
)0x00400200)

	)

465 
	#ADC_A«logW©chdog_SögÀRegOrInjecE«bÀ
 ((
uöt32_t
)0x00C00200)

	)

466 
	#ADC_A«logW©chdog_AŒRegE«bÀ
 ((
uöt32_t
)0x00800000)

	)

467 
	#ADC_A«logW©chdog_AŒInjecE«bÀ
 ((
uöt32_t
)0x00400000)

	)

468 
	#ADC_A«logW©chdog_AŒRegAŒInjecE«bÀ
 ((
uöt32_t
)0x00C00000)

	)

469 
	#ADC_A«logW©chdog_N⁄e
 ((
uöt32_t
)0x00000000)

	)

470 
	#IS_ADC_ANALOG_WATCHDOG
(
WATCHDOG
Ë(((WATCHDOGË=
ADC_A«logW©chdog_SögÀRegE«bÀ
Ë|| \

	)

471 ((
WATCHDOG
Ë=
ADC_A«logW©chdog_SögÀInjecE«bÀ
) || \

472 ((
WATCHDOG
Ë=
ADC_A«logW©chdog_SögÀRegOrInjecE«bÀ
) || \

473 ((
WATCHDOG
Ë=
ADC_A«logW©chdog_AŒRegE«bÀ
) || \

474 ((
WATCHDOG
Ë=
ADC_A«logW©chdog_AŒInjecE«bÀ
) || \

475 ((
WATCHDOG
Ë=
ADC_A«logW©chdog_AŒRegAŒInjecE«bÀ
) || \

476 ((
WATCHDOG
Ë=
ADC_A«logW©chdog_N⁄e
))

485 
	#ADC_IT_EOC
 ((
uöt16_t
)0x0205)

	)

486 
	#ADC_IT_AWD
 ((
uöt16_t
)0x0106)

	)

487 
	#ADC_IT_JEOC
 ((
uöt16_t
)0x0407)

	)

488 
	#ADC_IT_OVR
 ((
uöt16_t
)0x201A)

	)

489 
	#IS_ADC_IT
(
IT
Ë(((ITË=
ADC_IT_EOC
Ë|| ((ITË=
ADC_IT_AWD
Ë|| \

	)

490 ((
IT
Ë=
ADC_IT_JEOC
)|| ((ITË=
ADC_IT_OVR
))

499 
	#ADC_FLAG_AWD
 ((
uöt8_t
)0x01)

	)

500 
	#ADC_FLAG_EOC
 ((
uöt8_t
)0x02)

	)

501 
	#ADC_FLAG_JEOC
 ((
uöt8_t
)0x04)

	)

502 
	#ADC_FLAG_JSTRT
 ((
uöt8_t
)0x08)

	)

503 
	#ADC_FLAG_STRT
 ((
uöt8_t
)0x10)

	)

504 
	#ADC_FLAG_OVR
 ((
uöt8_t
)0x20)

	)

506 
	#IS_ADC_CLEAR_FLAG
(
FLAG
Ë((((FLAGË& (
uöt8_t
)0xC0Ë=0x00Ë&& ((FLAGË!0x00))

	)

507 
	#IS_ADC_GET_FLAG
(
FLAG
Ë(((FLAGË=
ADC_FLAG_AWD
Ë|| \

	)

508 ((
FLAG
Ë=
ADC_FLAG_EOC
) || \

509 ((
FLAG
Ë=
ADC_FLAG_JEOC
) || \

510 ((
FLAG
)=
ADC_FLAG_JSTRT
) || \

511 ((
FLAG
Ë=
ADC_FLAG_STRT
) || \

512 ((
FLAG
)=
ADC_FLAG_OVR
))

521 
	#IS_ADC_THRESHOLD
(
THRESHOLD
Ë((THRESHOLDË<0xFFF)

	)

530 
	#IS_ADC_OFFSET
(
OFFSET
Ë((OFFSETË<0xFFF)

	)

539 
	#IS_ADC_INJECTED_LENGTH
(
LENGTH
Ë(((LENGTHË>0x1Ë&& ((LENGTHË<0x4))

	)

548 
	#IS_ADC_INJECTED_RANK
(
RANK
Ë(((RANKË>0x1Ë&& ((RANKË<0x4))

	)

557 
	#IS_ADC_REGULAR_LENGTH
(
LENGTH
Ë(((LENGTHË>0x1Ë&& ((LENGTHË<0x10))

	)

566 
	#IS_ADC_REGULAR_RANK
(
RANK
Ë(((RANKË>0x1Ë&& ((RANKË<0x10))

	)

575 
	#IS_ADC_REGULAR_DISC_NUMBER
(
NUMBER
Ë(((NUMBERË>0x1Ë&& ((NUMBERË<0x8))

	)

589 
ADC_DeInô
();

592 
ADC_Inô
(
ADC_Ty≥Def
* 
ADCx
, 
ADC_InôTy≥Def
* 
ADC_InôSåu˘
);

593 
ADC_Såu˘Inô
(
ADC_InôTy≥Def
* 
ADC_InôSåu˘
);

594 
ADC_Comm⁄Inô
(
ADC_Comm⁄InôTy≥Def
* 
ADC_Comm⁄InôSåu˘
);

595 
ADC_Comm⁄Såu˘Inô
(
ADC_Comm⁄InôTy≥Def
* 
ADC_Comm⁄InôSåu˘
);

596 
ADC_Cmd
(
ADC_Ty≥Def
* 
ADCx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

599 
ADC_A«logW©chdogCmd
(
ADC_Ty≥Def
* 
ADCx
, 
uöt32_t
 
ADC_A«logW©chdog
);

600 
ADC_A«logW©chdogThªshﬁdsC⁄fig
(
ADC_Ty≥Def
* 
ADCx
, 
uöt16_t
 
HighThªshﬁd
,uöt16_à
LowThªshﬁd
);

601 
ADC_A«logW©chdogSögÀCh™√lC⁄fig
(
ADC_Ty≥Def
* 
ADCx
, 
uöt8_t
 
ADC_Ch™√l
);

604 
ADC_TempSís‹VªfötCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

605 
ADC_VBATCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

608 
ADC_ReguœrCh™√lC⁄fig
(
ADC_Ty≥Def
* 
ADCx
, 
uöt8_t
 
ADC_Ch™√l
, uöt8_à
R™k
, uöt8_à
ADC_Sam∂eTime
);

609 
ADC_So·w¨eSèπC⁄v
(
ADC_Ty≥Def
* 
ADCx
);

610 
FœgSètus
 
ADC_GëSo·w¨eSèπC⁄vSètus
(
ADC_Ty≥Def
* 
ADCx
);

611 
ADC_EOCOnEachReguœrCh™√lCmd
(
ADC_Ty≥Def
* 
ADCx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

612 
ADC_C⁄töuousModeCmd
(
ADC_Ty≥Def
* 
ADCx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

613 
ADC_DiscModeCh™√lCou¡C⁄fig
(
ADC_Ty≥Def
* 
ADCx
, 
uöt8_t
 
Numbî
);

614 
ADC_DiscModeCmd
(
ADC_Ty≥Def
* 
ADCx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

615 
uöt16_t
 
ADC_GëC⁄vîsi⁄VÆue
(
ADC_Ty≥Def
* 
ADCx
);

616 
uöt32_t
 
ADC_GëMu…iModeC⁄vîsi⁄VÆue
();

619 
ADC_DMACmd
(
ADC_Ty≥Def
* 
ADCx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

620 
ADC_DMAReque°A·îLa°Tøns„rCmd
(
ADC_Ty≥Def
* 
ADCx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

621 
ADC_Mu…iModeDMAReque°A·îLa°Tøns„rCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

624 
ADC_Inje˘edCh™√lC⁄fig
(
ADC_Ty≥Def
* 
ADCx
, 
uöt8_t
 
ADC_Ch™√l
, uöt8_à
R™k
, uöt8_à
ADC_Sam∂eTime
);

625 
ADC_Inje˘edSequí˚rLígthC⁄fig
(
ADC_Ty≥Def
* 
ADCx
, 
uöt8_t
 
Lígth
);

626 
ADC_SëInje˘edOff£t
(
ADC_Ty≥Def
* 
ADCx
, 
uöt8_t
 
ADC_Inje˘edCh™√l
, 
uöt16_t
 
Off£t
);

627 
ADC_Exã∫ÆTrigInje˘edC⁄vC⁄fig
(
ADC_Ty≥Def
* 
ADCx
, 
uöt32_t
 
ADC_Exã∫ÆTrigInjecC⁄v
);

628 
ADC_Exã∫ÆTrigInje˘edC⁄vEdgeC⁄fig
(
ADC_Ty≥Def
* 
ADCx
, 
uöt32_t
 
ADC_Exã∫ÆTrigInjecC⁄vEdge
);

629 
ADC_So·w¨eSèπInje˘edC⁄v
(
ADC_Ty≥Def
* 
ADCx
);

630 
FœgSètus
 
ADC_GëSo·w¨eSèπInje˘edC⁄vCmdSètus
(
ADC_Ty≥Def
* 
ADCx
);

631 
ADC_AutoInje˘edC⁄vCmd
(
ADC_Ty≥Def
* 
ADCx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

632 
ADC_Inje˘edDiscModeCmd
(
ADC_Ty≥Def
* 
ADCx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

633 
uöt16_t
 
ADC_GëInje˘edC⁄vîsi⁄VÆue
(
ADC_Ty≥Def
* 
ADCx
, 
uöt8_t
 
ADC_Inje˘edCh™√l
);

636 
ADC_ITC⁄fig
(
ADC_Ty≥Def
* 
ADCx
, 
uöt16_t
 
ADC_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

637 
FœgSètus
 
ADC_GëFœgSètus
(
ADC_Ty≥Def
* 
ADCx
, 
uöt8_t
 
ADC_FLAG
);

638 
ADC_CÀ¨Fœg
(
ADC_Ty≥Def
* 
ADCx
, 
uöt8_t
 
ADC_FLAG
);

639 
ITSètus
 
ADC_GëITSètus
(
ADC_Ty≥Def
* 
ADCx
, 
uöt16_t
 
ADC_IT
);

640 
ADC_CÀ¨ITPídögBô
(
ADC_Ty≥Def
* 
ADCx
, 
uöt16_t
 
ADC_IT
);

642 #ifde‡
__˝lu•lus


	@stm32f4xx_can.h

30 #i‚de‡
__STM32F4xx_CAN_H


31 
	#__STM32F4xx_CAN_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

50 
	#IS_CAN_ALL_PERIPH
(
PERIPH
Ë(((PERIPHË=
CAN1
Ë|| \

	)

51 ((
PERIPH
Ë=
CAN2
))

58 
uöt16_t
 
CAN_PªsˇÀr
;

61 
uöt8_t
 
CAN_Mode
;

64 
uöt8_t
 
CAN_SJW
;

69 
uöt8_t
 
CAN_BS1
;

73 
uöt8_t
 
CAN_BS2
;

76 
Fun˘i⁄ÆSèã
 
CAN_TTCM
;

79 
Fun˘i⁄ÆSèã
 
CAN_ABOM
;

82 
Fun˘i⁄ÆSèã
 
CAN_AWUM
;

85 
Fun˘i⁄ÆSèã
 
CAN_NART
;

88 
Fun˘i⁄ÆSèã
 
CAN_RFLM
;

91 
Fun˘i⁄ÆSèã
 
CAN_TXFP
;

93 } 
	tCAN_InôTy≥Def
;

100 
uöt16_t
 
CAN_FûãrIdHigh
;

104 
uöt16_t
 
CAN_FûãrIdLow
;

108 
uöt16_t
 
CAN_FûãrMaskIdHigh
;

113 
uöt16_t
 
CAN_FûãrMaskIdLow
;

118 
uöt16_t
 
CAN_FûãrFIFOAssignmít
;

121 
uöt8_t
 
CAN_FûãrNumbî
;

123 
uöt8_t
 
CAN_FûãrMode
;

126 
uöt8_t
 
CAN_FûãrSˇÀ
;

129 
Fun˘i⁄ÆSèã
 
CAN_FûãrA˘iv©i⁄
;

131 } 
	tCAN_FûãrInôTy≥Def
;

138 
uöt32_t
 
StdId
;

141 
uöt32_t
 
ExtId
;

144 
uöt8_t
 
IDE
;

148 
uöt8_t
 
RTR
;

152 
uöt8_t
 
DLC
;

156 
uöt8_t
 
D©a
[8];

158 } 
	tC™TxMsg
;

165 
uöt32_t
 
StdId
;

168 
uöt32_t
 
ExtId
;

171 
uöt8_t
 
IDE
;

175 
uöt8_t
 
RTR
;

179 
uöt8_t
 
DLC
;

182 
uöt8_t
 
D©a
[8];

185 
uöt8_t
 
FMI
;

188 } 
	tC™RxMsg
;

200 
	#CAN_InôSètus_Faûed
 ((
uöt8_t
)0x00Ë

	)

201 
	#CAN_InôSètus_Suc˚ss
 ((
uöt8_t
)0x01Ë

	)

205 
	#CANINITFAILED
 
CAN_InôSètus_Faûed


	)

206 
	#CANINITOK
 
CAN_InôSètus_Suc˚ss


	)

215 
	#CAN_Mode_N‹mÆ
 ((
uöt8_t
)0x00Ë

	)

216 
	#CAN_Mode_Lo›Back
 ((
uöt8_t
)0x01Ë

	)

217 
	#CAN_Mode_Sûít
 ((
uöt8_t
)0x02Ë

	)

218 
	#CAN_Mode_Sûít_Lo›Back
 ((
uöt8_t
)0x03Ë

	)

220 
	#IS_CAN_MODE
(
MODE
Ë(((MODEË=
CAN_Mode_N‹mÆ
Ë|| \

	)

221 ((
MODE
Ë=
CAN_Mode_Lo›Back
)|| \

222 ((
MODE
Ë=
CAN_Mode_Sûít
) || \

223 ((
MODE
Ë=
CAN_Mode_Sûít_Lo›Back
))

233 
	#CAN_O≥øtögMode_Inôüliz©i⁄
 ((
uöt8_t
)0x00Ë

	)

234 
	#CAN_O≥øtögMode_N‹mÆ
 ((
uöt8_t
)0x01Ë

	)

235 
	#CAN_O≥øtögMode_SÀï
 ((
uöt8_t
)0x02Ë

	)

238 
	#IS_CAN_OPERATING_MODE
(
MODE
Ë(((MODEË=
CAN_O≥øtögMode_Inôüliz©i⁄
Ë||\

	)

239 ((
MODE
Ë=
CAN_O≥øtögMode_N‹mÆ
)|| \

240 ((
MODE
Ë=
CAN_O≥øtögMode_SÀï
))

250 
	#CAN_ModeSètus_Faûed
 ((
uöt8_t
)0x00Ë

	)

251 
	#CAN_ModeSètus_Suc˚ss
 ((
uöt8_t
)!
CAN_ModeSètus_Faûed
Ë

	)

259 
	#CAN_SJW_1tq
 ((
uöt8_t
)0x00Ë

	)

260 
	#CAN_SJW_2tq
 ((
uöt8_t
)0x01Ë

	)

261 
	#CAN_SJW_3tq
 ((
uöt8_t
)0x02Ë

	)

262 
	#CAN_SJW_4tq
 ((
uöt8_t
)0x03Ë

	)

264 
	#IS_CAN_SJW
(
SJW
Ë(((SJWË=
CAN_SJW_1tq
Ë|| ((SJWË=
CAN_SJW_2tq
)|| \

	)

265 ((
SJW
Ë=
CAN_SJW_3tq
Ë|| ((SJWË=
CAN_SJW_4tq
))

273 
	#CAN_BS1_1tq
 ((
uöt8_t
)0x00Ë

	)

274 
	#CAN_BS1_2tq
 ((
uöt8_t
)0x01Ë

	)

275 
	#CAN_BS1_3tq
 ((
uöt8_t
)0x02Ë

	)

276 
	#CAN_BS1_4tq
 ((
uöt8_t
)0x03Ë

	)

277 
	#CAN_BS1_5tq
 ((
uöt8_t
)0x04Ë

	)

278 
	#CAN_BS1_6tq
 ((
uöt8_t
)0x05Ë

	)

279 
	#CAN_BS1_7tq
 ((
uöt8_t
)0x06Ë

	)

280 
	#CAN_BS1_8tq
 ((
uöt8_t
)0x07Ë

	)

281 
	#CAN_BS1_9tq
 ((
uöt8_t
)0x08Ë

	)

282 
	#CAN_BS1_10tq
 ((
uöt8_t
)0x09Ë

	)

283 
	#CAN_BS1_11tq
 ((
uöt8_t
)0x0AË

	)

284 
	#CAN_BS1_12tq
 ((
uöt8_t
)0x0BË

	)

285 
	#CAN_BS1_13tq
 ((
uöt8_t
)0x0CË

	)

286 
	#CAN_BS1_14tq
 ((
uöt8_t
)0x0DË

	)

287 
	#CAN_BS1_15tq
 ((
uöt8_t
)0x0EË

	)

288 
	#CAN_BS1_16tq
 ((
uöt8_t
)0x0FË

	)

290 
	#IS_CAN_BS1
(
BS1
Ë((BS1Ë<
CAN_BS1_16tq
)

	)

298 
	#CAN_BS2_1tq
 ((
uöt8_t
)0x00Ë

	)

299 
	#CAN_BS2_2tq
 ((
uöt8_t
)0x01Ë

	)

300 
	#CAN_BS2_3tq
 ((
uöt8_t
)0x02Ë

	)

301 
	#CAN_BS2_4tq
 ((
uöt8_t
)0x03Ë

	)

302 
	#CAN_BS2_5tq
 ((
uöt8_t
)0x04Ë

	)

303 
	#CAN_BS2_6tq
 ((
uöt8_t
)0x05Ë

	)

304 
	#CAN_BS2_7tq
 ((
uöt8_t
)0x06Ë

	)

305 
	#CAN_BS2_8tq
 ((
uöt8_t
)0x07Ë

	)

307 
	#IS_CAN_BS2
(
BS2
Ë((BS2Ë<
CAN_BS2_8tq
)

	)

315 
	#IS_CAN_PRESCALER
(
PRESCALER
Ë(((PRESCALERË>1Ë&& ((PRESCALERË<1024))

	)

323 
	#IS_CAN_FILTER_NUMBER
(
NUMBER
Ë((NUMBERË<27)

	)

331 
	#CAN_FûãrMode_IdMask
 ((
uöt8_t
)0x00Ë

	)

332 
	#CAN_FûãrMode_IdLi°
 ((
uöt8_t
)0x01Ë

	)

334 
	#IS_CAN_FILTER_MODE
(
MODE
Ë(((MODEË=
CAN_FûãrMode_IdMask
Ë|| \

	)

335 ((
MODE
Ë=
CAN_FûãrMode_IdLi°
))

343 
	#CAN_FûãrSˇÀ_16bô
 ((
uöt8_t
)0x00Ë

	)

344 
	#CAN_FûãrSˇÀ_32bô
 ((
uöt8_t
)0x01Ë

	)

346 
	#IS_CAN_FILTER_SCALE
(
SCALE
Ë(((SCALEË=
CAN_FûãrSˇÀ_16bô
Ë|| \

	)

347 ((
SCALE
Ë=
CAN_FûãrSˇÀ_32bô
))

355 
	#CAN_Fûãr_FIFO0
 ((
uöt8_t
)0x00Ë

	)

356 
	#CAN_Fûãr_FIFO1
 ((
uöt8_t
)0x01Ë

	)

357 
	#IS_CAN_FILTER_FIFO
(
FIFO
Ë(((FIFOË=
CAN_FûãrFIFO0
Ë|| \

	)

358 ((
FIFO
Ë=
CAN_FûãrFIFO1
))

361 
	#CAN_FûãrFIFO0
 
CAN_Fûãr_FIFO0


	)

362 
	#CAN_FûãrFIFO1
 
CAN_Fûãr_FIFO1


	)

370 
	#IS_CAN_BANKNUMBER
(
BANKNUMBER
Ë(((BANKNUMBERË>1Ë&& ((BANKNUMBERË<27))

	)

378 
	#IS_CAN_TRANSMITMAILBOX
(
TRANSMITMAILBOX
Ë((TRANSMITMAILBOXË<((
uöt8_t
)0x02))

	)

379 
	#IS_CAN_STDID
(
STDID
Ë((STDIDË<((
uöt32_t
)0x7FF))

	)

380 
	#IS_CAN_EXTID
(
EXTID
Ë((EXTIDË<((
uöt32_t
)0x1FFFFFFF))

	)

381 
	#IS_CAN_DLC
(
DLC
Ë((DLCË<((
uöt8_t
)0x08))

	)

389 
	#CAN_Id_Sènd¨d
 ((
uöt32_t
)0x00000000Ë

	)

390 
	#CAN_Id_Exãnded
 ((
uöt32_t
)0x00000004Ë

	)

391 
	#IS_CAN_IDTYPE
(
IDTYPE
Ë(((IDTYPEË=
CAN_Id_Sènd¨d
Ë|| \

	)

392 ((
IDTYPE
Ë=
CAN_Id_Exãnded
))

395 
	#CAN_ID_STD
 
CAN_Id_Sènd¨d


	)

396 
	#CAN_ID_EXT
 
CAN_Id_Exãnded


	)

404 
	#CAN_RTR_D©a
 ((
uöt32_t
)0x00000000Ë

	)

405 
	#CAN_RTR_RemŸe
 ((
uöt32_t
)0x00000002Ë

	)

406 
	#IS_CAN_RTR
(
RTR
Ë(((RTRË=
CAN_RTR_D©a
Ë|| ((RTRË=
CAN_RTR_RemŸe
))

	)

409 
	#CAN_RTR_DATA
 
CAN_RTR_D©a


	)

410 
	#CAN_RTR_REMOTE
 
CAN_RTR_RemŸe


	)

418 
	#CAN_TxSètus_Faûed
 ((
uöt8_t
)0x00)

	)

419 
	#CAN_TxSètus_Ok
 ((
uöt8_t
)0x01Ë

	)

420 
	#CAN_TxSètus_Pídög
 ((
uöt8_t
)0x02Ë

	)

421 
	#CAN_TxSètus_NoMaûBox
 ((
uöt8_t
)0x04Ë

	)

424 
	#CANTXFAILED
 
CAN_TxSètus_Faûed


	)

425 
	#CANTXOK
 
CAN_TxSètus_Ok


	)

426 
	#CANTXPENDING
 
CAN_TxSètus_Pídög


	)

427 
	#CAN_NO_MB
 
CAN_TxSètus_NoMaûBox


	)

435 
	#CAN_FIFO0
 ((
uöt8_t
)0x00Ë

	)

436 
	#CAN_FIFO1
 ((
uöt8_t
)0x01Ë

	)

438 
	#IS_CAN_FIFO
(
FIFO
Ë(((FIFOË=
CAN_FIFO0
Ë|| ((FIFOË=
CAN_FIFO1
))

	)

446 
	#CAN_SÀï_Faûed
 ((
uöt8_t
)0x00Ë

	)

447 
	#CAN_SÀï_Ok
 ((
uöt8_t
)0x01Ë

	)

450 
	#CANSLEEPFAILED
 
CAN_SÀï_Faûed


	)

451 
	#CANSLEEPOK
 
CAN_SÀï_Ok


	)

459 
	#CAN_WakeUp_Faûed
 ((
uöt8_t
)0x00Ë

	)

460 
	#CAN_WakeUp_Ok
 ((
uöt8_t
)0x01Ë

	)

463 
	#CANWAKEUPFAILED
 
CAN_WakeUp_Faûed


	)

464 
	#CANWAKEUPOK
 
CAN_WakeUp_Ok


	)

473 
	#CAN_Eº‹Code_NoEº
 ((
uöt8_t
)0x00Ë

	)

474 
	#CAN_Eº‹Code_StuffEº
 ((
uöt8_t
)0x10Ë

	)

475 
	#CAN_Eº‹Code_F‹mEº
 ((
uöt8_t
)0x20Ë

	)

476 
	#CAN_Eº‹Code_ACKEº
 ((
uöt8_t
)0x30Ë

	)

477 
	#CAN_Eº‹Code_BôRe˚ssiveEº
 ((
uöt8_t
)0x40Ë

	)

478 
	#CAN_Eº‹Code_BôDomö™tEº
 ((
uöt8_t
)0x50Ë

	)

479 
	#CAN_Eº‹Code_CRCEº
 ((
uöt8_t
)0x60Ë

	)

480 
	#CAN_Eº‹Code_So·w¨eSëEº
 ((
uöt8_t
)0x70Ë

	)

494 
	#CAN_FLAG_RQCP0
 ((
uöt32_t
)0x38000001Ë

	)

495 
	#CAN_FLAG_RQCP1
 ((
uöt32_t
)0x38000100Ë

	)

496 
	#CAN_FLAG_RQCP2
 ((
uöt32_t
)0x38010000Ë

	)

499 
	#CAN_FLAG_FMP0
 ((
uöt32_t
)0x12000003Ë

	)

500 
	#CAN_FLAG_FF0
 ((
uöt32_t
)0x32000008Ë

	)

501 
	#CAN_FLAG_FOV0
 ((
uöt32_t
)0x32000010Ë

	)

502 
	#CAN_FLAG_FMP1
 ((
uöt32_t
)0x14000003Ë

	)

503 
	#CAN_FLAG_FF1
 ((
uöt32_t
)0x34000008Ë

	)

504 
	#CAN_FLAG_FOV1
 ((
uöt32_t
)0x34000010Ë

	)

507 
	#CAN_FLAG_WKU
 ((
uöt32_t
)0x31000008Ë

	)

508 
	#CAN_FLAG_SLAK
 ((
uöt32_t
)0x31000012Ë

	)

513 
	#CAN_FLAG_EWG
 ((
uöt32_t
)0x10F00001Ë

	)

514 
	#CAN_FLAG_EPV
 ((
uöt32_t
)0x10F00002Ë

	)

515 
	#CAN_FLAG_BOF
 ((
uöt32_t
)0x10F00004Ë

	)

516 
	#CAN_FLAG_LEC
 ((
uöt32_t
)0x30F00070Ë

	)

518 
	#IS_CAN_GET_FLAG
(
FLAG
Ë(((FLAGË=
CAN_FLAG_LEC
Ë|| ((FLAGË=
CAN_FLAG_BOF
Ë|| \

	)

519 ((
FLAG
Ë=
CAN_FLAG_EPV
Ë|| ((FLAGË=
CAN_FLAG_EWG
) || \

520 ((
FLAG
Ë=
CAN_FLAG_WKU
Ë|| ((FLAGË=
CAN_FLAG_FOV0
) || \

521 ((
FLAG
Ë=
CAN_FLAG_FF0
Ë|| ((FLAGË=
CAN_FLAG_FMP0
) || \

522 ((
FLAG
Ë=
CAN_FLAG_FOV1
Ë|| ((FLAGË=
CAN_FLAG_FF1
) || \

523 ((
FLAG
Ë=
CAN_FLAG_FMP1
Ë|| ((FLAGË=
CAN_FLAG_RQCP2
) || \

524 ((
FLAG
Ë=
CAN_FLAG_RQCP1
)|| ((FLAGË=
CAN_FLAG_RQCP0
) || \

525 ((
FLAG
Ë=
CAN_FLAG_SLAK
 ))

527 
	#IS_CAN_CLEAR_FLAG
(
FLAG
)(((FLAGË=
CAN_FLAG_LEC
Ë|| ((FLAGË=
CAN_FLAG_RQCP2
Ë|| \

	)

528 ((
FLAG
Ë=
CAN_FLAG_RQCP1
Ë|| ((FLAGË=
CAN_FLAG_RQCP0
) || \

529 ((
FLAG
Ë=
CAN_FLAG_FF0
Ë|| ((FLAGË=
CAN_FLAG_FOV0
) ||\

530 ((
FLAG
Ë=
CAN_FLAG_FF1
Ë|| ((FLAGË=
CAN_FLAG_FOV1
) || \

531 ((
FLAG
Ë=
CAN_FLAG_WKU
Ë|| ((FLAGË=
CAN_FLAG_SLAK
))

540 
	#CAN_IT_TME
 ((
uöt32_t
)0x00000001Ë

	)

543 
	#CAN_IT_FMP0
 ((
uöt32_t
)0x00000002Ë

	)

544 
	#CAN_IT_FF0
 ((
uöt32_t
)0x00000004Ë

	)

545 
	#CAN_IT_FOV0
 ((
uöt32_t
)0x00000008Ë

	)

546 
	#CAN_IT_FMP1
 ((
uöt32_t
)0x00000010Ë

	)

547 
	#CAN_IT_FF1
 ((
uöt32_t
)0x00000020Ë

	)

548 
	#CAN_IT_FOV1
 ((
uöt32_t
)0x00000040Ë

	)

551 
	#CAN_IT_WKU
 ((
uöt32_t
)0x00010000Ë

	)

552 
	#CAN_IT_SLK
 ((
uöt32_t
)0x00020000Ë

	)

555 
	#CAN_IT_EWG
 ((
uöt32_t
)0x00000100Ë

	)

556 
	#CAN_IT_EPV
 ((
uöt32_t
)0x00000200Ë

	)

557 
	#CAN_IT_BOF
 ((
uöt32_t
)0x00000400Ë

	)

558 
	#CAN_IT_LEC
 ((
uöt32_t
)0x00000800Ë

	)

559 
	#CAN_IT_ERR
 ((
uöt32_t
)0x00008000Ë

	)

562 
	#CAN_IT_RQCP0
 
CAN_IT_TME


	)

563 
	#CAN_IT_RQCP1
 
CAN_IT_TME


	)

564 
	#CAN_IT_RQCP2
 
CAN_IT_TME


	)

567 
	#IS_CAN_IT
(
IT
Ë(((ITË=
CAN_IT_TME
Ë|| ((ITË=
CAN_IT_FMP0
Ë||\

	)

568 ((
IT
Ë=
CAN_IT_FF0
Ë|| ((ITË=
CAN_IT_FOV0
) ||\

569 ((
IT
Ë=
CAN_IT_FMP1
Ë|| ((ITË=
CAN_IT_FF1
) ||\

570 ((
IT
Ë=
CAN_IT_FOV1
Ë|| ((ITË=
CAN_IT_EWG
) ||\

571 ((
IT
Ë=
CAN_IT_EPV
Ë|| ((ITË=
CAN_IT_BOF
) ||\

572 ((
IT
Ë=
CAN_IT_LEC
Ë|| ((ITË=
CAN_IT_ERR
) ||\

573 ((
IT
Ë=
CAN_IT_WKU
Ë|| ((ITË=
CAN_IT_SLK
))

575 
	#IS_CAN_CLEAR_IT
(
IT
Ë(((ITË=
CAN_IT_TME
Ë|| ((ITË=
CAN_IT_FF0
Ë||\

	)

576 ((
IT
Ë=
CAN_IT_FOV0
)|| ((ITË=
CAN_IT_FF1
) ||\

577 ((
IT
Ë=
CAN_IT_FOV1
)|| ((ITË=
CAN_IT_EWG
) ||\

578 ((
IT
Ë=
CAN_IT_EPV
Ë|| ((ITË=
CAN_IT_BOF
) ||\

579 ((
IT
Ë=
CAN_IT_LEC
Ë|| ((ITË=
CAN_IT_ERR
) ||\

580 ((
IT
Ë=
CAN_IT_WKU
Ë|| ((ITË=
CAN_IT_SLK
))

593 
CAN_DeInô
(
CAN_Ty≥Def
* 
CANx
);

596 
uöt8_t
 
CAN_Inô
(
CAN_Ty≥Def
* 
CANx
, 
CAN_InôTy≥Def
* 
CAN_InôSåu˘
);

597 
CAN_FûãrInô
(
CAN_FûãrInôTy≥Def
* 
CAN_FûãrInôSåu˘
);

598 
CAN_Såu˘Inô
(
CAN_InôTy≥Def
* 
CAN_InôSåu˘
);

599 
CAN_SœveSèπB™k
(
uöt8_t
 
CAN_B™kNumbî
);

600 
CAN_DBGFªeze
(
CAN_Ty≥Def
* 
CANx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

601 
CAN_TTComModeCmd
(
CAN_Ty≥Def
* 
CANx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

604 
uöt8_t
 
CAN_Tønsmô
(
CAN_Ty≥Def
* 
CANx
, 
C™TxMsg
* 
TxMesßge
);

605 
uöt8_t
 
CAN_TønsmôSètus
(
CAN_Ty≥Def
* 
CANx
, uöt8_à
TønsmôMaûbox
);

606 
CAN_C™˚lTønsmô
(
CAN_Ty≥Def
* 
CANx
, 
uöt8_t
 
Maûbox
);

609 
CAN_Re˚ive
(
CAN_Ty≥Def
* 
CANx
, 
uöt8_t
 
FIFONumbî
, 
C™RxMsg
* 
RxMesßge
);

610 
CAN_FIFORñó£
(
CAN_Ty≥Def
* 
CANx
, 
uöt8_t
 
FIFONumbî
);

611 
uöt8_t
 
CAN_MesßgePídög
(
CAN_Ty≥Def
* 
CANx
, uöt8_à
FIFONumbî
);

614 
uöt8_t
 
CAN_O≥øtögModeReque°
(
CAN_Ty≥Def
* 
CANx
, uöt8_à
CAN_O≥øtögMode
);

615 
uöt8_t
 
CAN_SÀï
(
CAN_Ty≥Def
* 
CANx
);

616 
uöt8_t
 
CAN_WakeUp
(
CAN_Ty≥Def
* 
CANx
);

619 
uöt8_t
 
CAN_GëLa°Eº‹Code
(
CAN_Ty≥Def
* 
CANx
);

620 
uöt8_t
 
CAN_GëRe˚iveEº‹Cou¡î
(
CAN_Ty≥Def
* 
CANx
);

621 
uöt8_t
 
CAN_GëLSBTønsmôEº‹Cou¡î
(
CAN_Ty≥Def
* 
CANx
);

624 
CAN_ITC⁄fig
(
CAN_Ty≥Def
* 
CANx
, 
uöt32_t
 
CAN_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

625 
FœgSètus
 
CAN_GëFœgSètus
(
CAN_Ty≥Def
* 
CANx
, 
uöt32_t
 
CAN_FLAG
);

626 
CAN_CÀ¨Fœg
(
CAN_Ty≥Def
* 
CANx
, 
uöt32_t
 
CAN_FLAG
);

627 
ITSètus
 
CAN_GëITSètus
(
CAN_Ty≥Def
* 
CANx
, 
uöt32_t
 
CAN_IT
);

628 
CAN_CÀ¨ITPídögBô
(
CAN_Ty≥Def
* 
CANx
, 
uöt32_t
 
CAN_IT
);

630 #ifde‡
__˝lu•lus


	@stm32f4xx_crc.h

30 #i‚de‡
__STM32F4xx_CRC_H


31 
	#__STM32F4xx_CRC_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

62 
CRC_Re£tDR
();

63 
uöt32_t
 
CRC_CÆcCRC
(uöt32_à
D©a
);

64 
uöt32_t
 
CRC_CÆcBlockCRC
(uöt32_à
pBuf„r
[], uöt32_à
Buf„rLígth
);

65 
uöt32_t
 
CRC_GëCRC
();

66 
CRC_SëIDRegi°î
(
uöt8_t
 
IDVÆue
);

67 
uöt8_t
 
CRC_GëIDRegi°î
();

69 #ifde‡
__˝lu•lus


	@stm32f4xx_cryp.h

30 #i‚de‡
__STM32F4xx_CRYP_H


31 
	#__STM32F4xx_CRYP_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

55 
uöt32_t
 
CRYP_AlgoDú
;

57 
uöt32_t
 
CRYP_AlgoMode
;

60 
uöt32_t
 
CRYP_D©aTy≥
;

62 
uöt32_t
 
CRYP_KeySize
;

65 }
	tCRYP_InôTy≥Def
;

72 
uöt32_t
 
CRYP_Key0Le·
;

73 
uöt32_t
 
CRYP_Key0Right
;

74 
uöt32_t
 
CRYP_Key1Le·
;

75 
uöt32_t
 
CRYP_Key1Right
;

76 
uöt32_t
 
CRYP_Key2Le·
;

77 
uöt32_t
 
CRYP_Key2Right
;

78 
uöt32_t
 
CRYP_Key3Le·
;

79 
uöt32_t
 
CRYP_Key3Right
;

80 }
	tCRYP_KeyInôTy≥Def
;

86 
uöt32_t
 
CRYP_IV0Le·
;

87 
uöt32_t
 
CRYP_IV0Right
;

88 
uöt32_t
 
CRYP_IV1Le·
;

89 
uöt32_t
 
CRYP_IV1Right
;

90 }
	tCRYP_IVInôTy≥Def
;

98 
uöt32_t
 
CR_CuºítC⁄fig
;

100 
uöt32_t
 
CRYP_IV0LR
;

101 
uöt32_t
 
CRYP_IV0RR
;

102 
uöt32_t
 
CRYP_IV1LR
;

103 
uöt32_t
 
CRYP_IV1RR
;

105 
uöt32_t
 
CRYP_K0LR
;

106 
uöt32_t
 
CRYP_K0RR
;

107 
uöt32_t
 
CRYP_K1LR
;

108 
uöt32_t
 
CRYP_K1RR
;

109 
uöt32_t
 
CRYP_K2LR
;

110 
uöt32_t
 
CRYP_K2RR
;

111 
uöt32_t
 
CRYP_K3LR
;

112 
uöt32_t
 
CRYP_K3RR
;

113 
uöt32_t
 
CRYP_CSGCMCCMR
[8];

114 
uöt32_t
 
CRYP_CSGCMR
[8];

115 }
	tCRYP_C⁄ãxt
;

127 
	#CRYP_AlgoDú_En¸y±
 ((
uöt16_t
)0x0000)

	)

128 
	#CRYP_AlgoDú_De¸y±
 ((
uöt16_t
)0x0004)

	)

129 
	#IS_CRYP_ALGODIR
(
ALGODIR
Ë(((ALGODIRË=
CRYP_AlgoDú_En¸y±
Ë|| \

	)

130 ((
ALGODIR
Ë=
CRYP_AlgoDú_De¸y±
))

141 
	#CRYP_AlgoMode_TDES_ECB
 ((
uöt32_t
)0x00000000)

	)

142 
	#CRYP_AlgoMode_TDES_CBC
 ((
uöt32_t
)0x00000008)

	)

145 
	#CRYP_AlgoMode_DES_ECB
 ((
uöt32_t
)0x00000010)

	)

146 
	#CRYP_AlgoMode_DES_CBC
 ((
uöt32_t
)0x00000018)

	)

149 
	#CRYP_AlgoMode_AES_ECB
 ((
uöt32_t
)0x00000020)

	)

150 
	#CRYP_AlgoMode_AES_CBC
 ((
uöt32_t
)0x00000028)

	)

151 
	#CRYP_AlgoMode_AES_CTR
 ((
uöt32_t
)0x00000030)

	)

152 
	#CRYP_AlgoMode_AES_Key
 ((
uöt32_t
)0x00000038)

	)

153 
	#CRYP_AlgoMode_AES_GCM
 ((
uöt32_t
)0x00080000)

	)

154 
	#CRYP_AlgoMode_AES_CCM
 ((
uöt32_t
)0x00080008)

	)

156 
	#IS_CRYP_ALGOMODE
(
ALGOMODE
Ë(((ALGOMODEË=
CRYP_AlgoMode_TDES_ECB
Ë|| \

	)

157 ((
ALGOMODE
Ë=
CRYP_AlgoMode_TDES_CBC
)|| \

158 ((
ALGOMODE
Ë=
CRYP_AlgoMode_DES_ECB
) || \

159 ((
ALGOMODE
Ë=
CRYP_AlgoMode_DES_CBC
) || \

160 ((
ALGOMODE
Ë=
CRYP_AlgoMode_AES_ECB
) || \

161 ((
ALGOMODE
Ë=
CRYP_AlgoMode_AES_CBC
) || \

162 ((
ALGOMODE
Ë=
CRYP_AlgoMode_AES_CTR
) || \

163 ((
ALGOMODE
Ë=
CRYP_AlgoMode_AES_Key
) || \

164 ((
ALGOMODE
Ë=
CRYP_AlgoMode_AES_GCM
) || \

165 ((
ALGOMODE
Ë=
CRYP_AlgoMode_AES_CCM
))

175 
	#CRYP_Pha£_Inô
 ((
uöt32_t
)0x00000000)

	)

176 
	#CRYP_Pha£_Hódî
 
CRYP_CR_GCM_CCMPH_0


	)

177 
	#CRYP_Pha£_Paylﬂd
 
CRYP_CR_GCM_CCMPH_1


	)

178 
	#CRYP_Pha£_FöÆ
 
CRYP_CR_GCM_CCMPH


	)

180 
	#IS_CRYP_PHASE
(
PHASE
Ë(((PHASEË=
CRYP_Pha£_Inô
Ë|| \

	)

181 ((
PHASE
Ë=
CRYP_Pha£_Hódî
) || \

182 ((
PHASE
Ë=
CRYP_Pha£_Paylﬂd
) || \

183 ((
PHASE
Ë=
CRYP_Pha£_FöÆ
))

192 
	#CRYP_D©aTy≥_32b
 ((
uöt16_t
)0x0000)

	)

193 
	#CRYP_D©aTy≥_16b
 ((
uöt16_t
)0x0040)

	)

194 
	#CRYP_D©aTy≥_8b
 ((
uöt16_t
)0x0080)

	)

195 
	#CRYP_D©aTy≥_1b
 ((
uöt16_t
)0x00C0)

	)

196 
	#IS_CRYP_DATATYPE
(
DATATYPE
Ë(((DATATYPEË=
CRYP_D©aTy≥_32b
Ë|| \

	)

197 ((
DATATYPE
Ë=
CRYP_D©aTy≥_16b
)|| \

198 ((
DATATYPE
Ë=
CRYP_D©aTy≥_8b
)|| \

199 ((
DATATYPE
Ë=
CRYP_D©aTy≥_1b
))

207 
	#CRYP_KeySize_128b
 ((
uöt16_t
)0x0000)

	)

208 
	#CRYP_KeySize_192b
 ((
uöt16_t
)0x0100)

	)

209 
	#CRYP_KeySize_256b
 ((
uöt16_t
)0x0200)

	)

210 
	#IS_CRYP_KEYSIZE
(
KEYSIZE
Ë(((KEYSIZEË=
CRYP_KeySize_128b
)|| \

	)

211 ((
KEYSIZE
Ë=
CRYP_KeySize_192b
)|| \

212 ((
KEYSIZE
Ë=
CRYP_KeySize_256b
))

220 
	#CRYP_FLAG_BUSY
 ((
uöt8_t
)0x10Ë

	)

224 
	#CRYP_FLAG_IFEM
 ((
uöt8_t
)0x01Ë

	)

225 
	#CRYP_FLAG_IFNF
 ((
uöt8_t
)0x02Ë

	)

226 
	#CRYP_FLAG_INRIS
 ((
uöt8_t
)0x22Ë

	)

227 
	#CRYP_FLAG_OFNE
 ((
uöt8_t
)0x04Ë

	)

229 
	#CRYP_FLAG_OFFU
 ((
uöt8_t
)0x08Ë

	)

230 
	#CRYP_FLAG_OUTRIS
 ((
uöt8_t
)0x21Ë

	)

233 
	#IS_CRYP_GET_FLAG
(
FLAG
Ë(((FLAGË=
CRYP_FLAG_IFEM
Ë|| \

	)

234 ((
FLAG
Ë=
CRYP_FLAG_IFNF
) || \

235 ((
FLAG
Ë=
CRYP_FLAG_OFNE
) || \

236 ((
FLAG
Ë=
CRYP_FLAG_OFFU
) || \

237 ((
FLAG
Ë=
CRYP_FLAG_BUSY
) || \

238 ((
FLAG
Ë=
CRYP_FLAG_OUTRIS
)|| \

239 ((
FLAG
Ë=
CRYP_FLAG_INRIS
))

247 
	#CRYP_IT_INI
 ((
uöt8_t
)0x01Ë

	)

248 
	#CRYP_IT_OUTI
 ((
uöt8_t
)0x02Ë

	)

249 
	#IS_CRYP_CONFIG_IT
(
IT
Ë((((ITË& (
uöt8_t
)0xFCË=0x00Ë&& ((ITË!0x00))

	)

250 
	#IS_CRYP_GET_IT
(
IT
Ë(((ITË=
CRYP_IT_INI
Ë|| ((ITË=
CRYP_IT_OUTI
))

	)

259 
	#MODE_ENCRYPT
 ((
uöt8_t
)0x01)

	)

260 
	#MODE_DECRYPT
 ((
uöt8_t
)0x00)

	)

269 
	#CRYP_DMAReq_D©aIN
 ((
uöt8_t
)0x01)

	)

270 
	#CRYP_DMAReq_D©aOUT
 ((
uöt8_t
)0x02)

	)

271 
	#IS_CRYP_DMAREQ
(
DMAREQ
Ë((((DMAREQË& (
uöt8_t
)0xFCË=0x00Ë&& ((DMAREQË!0x00))

	)

284 
CRYP_DeInô
();

287 
CRYP_Inô
(
CRYP_InôTy≥Def
* 
CRYP_InôSåu˘
);

288 
CRYP_Såu˘Inô
(
CRYP_InôTy≥Def
* 
CRYP_InôSåu˘
);

289 
CRYP_KeyInô
(
CRYP_KeyInôTy≥Def
* 
CRYP_KeyInôSåu˘
);

290 
CRYP_KeySåu˘Inô
(
CRYP_KeyInôTy≥Def
* 
CRYP_KeyInôSåu˘
);

291 
CRYP_IVInô
(
CRYP_IVInôTy≥Def
* 
CRYP_IVInôSåu˘
);

292 
CRYP_IVSåu˘Inô
(
CRYP_IVInôTy≥Def
* 
CRYP_IVInôSåu˘
);

293 
CRYP_Cmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

294 
CRYP_Pha£C⁄fig
(
uöt32_t
 
CRYP_Pha£
);

295 
CRYP_FIFOFlush
();

297 
CRYP_D©aIn
(
uöt32_t
 
D©a
);

298 
uöt32_t
 
CRYP_D©aOut
();

301 
Eº‹Sètus
 
CRYP_SaveC⁄ãxt
(
CRYP_C⁄ãxt
* 
CRYP_C⁄ãxtSave
,

302 
CRYP_KeyInôTy≥Def
* 
CRYP_KeyInôSåu˘
);

303 
CRYP_Re°‹eC⁄ãxt
(
CRYP_C⁄ãxt
* 
CRYP_C⁄ãxtRe°‹e
);

306 
CRYP_DMACmd
(
uöt8_t
 
CRYP_DMAReq
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

309 
CRYP_ITC⁄fig
(
uöt8_t
 
CRYP_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

310 
ITSètus
 
CRYP_GëITSètus
(
uöt8_t
 
CRYP_IT
);

311 
Fun˘i⁄ÆSèã
 
CRYP_GëCmdSètus
();

312 
FœgSètus
 
CRYP_GëFœgSètus
(
uöt8_t
 
CRYP_FLAG
);

315 
Eº‹Sètus
 
CRYP_AES_ECB
(
uöt8_t
 
Mode
,

316 
uöt8_t
 *
Key
, 
uöt16_t
 
Keysize
,

317 
uöt8_t
 *
I≈ut
, 
uöt32_t
 
IÀngth
,

318 
uöt8_t
 *
Ouçut
);

320 
Eº‹Sètus
 
CRYP_AES_CBC
(
uöt8_t
 
Mode
,

321 
uöt8_t
 
InôVe˘‹s
[16],

322 
uöt8_t
 *
Key
, 
uöt16_t
 
Keysize
,

323 
uöt8_t
 *
I≈ut
, 
uöt32_t
 
IÀngth
,

324 
uöt8_t
 *
Ouçut
);

326 
Eº‹Sètus
 
CRYP_AES_CTR
(
uöt8_t
 
Mode
,

327 
uöt8_t
 
InôVe˘‹s
[16],

328 
uöt8_t
 *
Key
, 
uöt16_t
 
Keysize
,

329 
uöt8_t
 *
I≈ut
, 
uöt32_t
 
IÀngth
,

330 
uöt8_t
 *
Ouçut
);

332 
Eº‹Sètus
 
CRYP_AES_GCM
(
uöt8_t
 
Mode
, uöt8_à
InôVe˘‹s
[16],

333 
uöt8_t
 *
Key
, 
uöt16_t
 
Keysize
,

334 
uöt8_t
 *
I≈ut
, 
uöt32_t
 
ILígth
,

335 
uöt8_t
 *
Hódî
, 
uöt32_t
 
HLígth
,

336 
uöt8_t
 *
Ouçut
, uöt8_à*
AuthTAG
);

338 
Eº‹Sètus
 
CRYP_AES_CCM
(
uöt8_t
 
Mode
,

339 
uöt8_t
* 
N⁄˚
, 
uöt32_t
 
N⁄˚Size
,

340 
uöt8_t
* 
Key
, 
uöt16_t
 
Keysize
,

341 
uöt8_t
* 
I≈ut
, 
uöt32_t
 
ILígth
,

342 
uöt8_t
* 
Hódî
, 
uöt32_t
 
HLígth
, uöt8_à*
HBuf„r
,

343 
uöt8_t
* 
Ouçut
,

344 
uöt8_t
* 
AuthTAG
, 
uöt32_t
 
TAGSize
);

347 
Eº‹Sètus
 
CRYP_TDES_ECB
(
uöt8_t
 
Mode
,

348 
uöt8_t
 
Key
[24],

349 
uöt8_t
 *
I≈ut
, 
uöt32_t
 
IÀngth
,

350 
uöt8_t
 *
Ouçut
);

352 
Eº‹Sètus
 
CRYP_TDES_CBC
(
uöt8_t
 
Mode
,

353 
uöt8_t
 
Key
[24],

354 
uöt8_t
 
InôVe˘‹s
[8],

355 
uöt8_t
 *
I≈ut
, 
uöt32_t
 
IÀngth
,

356 
uöt8_t
 *
Ouçut
);

359 
Eº‹Sètus
 
CRYP_DES_ECB
(
uöt8_t
 
Mode
,

360 
uöt8_t
 
Key
[8],

361 
uöt8_t
 *
I≈ut
, 
uöt32_t
 
IÀngth
,

362 
uöt8_t
 *
Ouçut
);

364 
Eº‹Sètus
 
CRYP_DES_CBC
(
uöt8_t
 
Mode
,

365 
uöt8_t
 
Key
[8],

366 
uöt8_t
 
InôVe˘‹s
[8],

367 
uöt8_t
 *
I≈ut
,
uöt32_t
 
IÀngth
,

368 
uöt8_t
 *
Ouçut
);

370 #ifde‡
__˝lu•lus


	@stm32f4xx_dac.h

30 #i‚de‡
__STM32F4xx_DAC_H


31 
	#__STM32F4xx_DAC_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

56 
uöt32_t
 
DAC_Triggî
;

59 
uöt32_t
 
DAC_WaveGíî©i⁄
;

63 
uöt32_t
 
DAC_LFSRUnmask_TrüngÀAm∂ôude
;

67 
uöt32_t
 
DAC_OuçutBuf„r
;

69 }
	tDAC_InôTy≥Def
;

81 
	#DAC_Triggî_N⁄e
 ((
uöt32_t
)0x00000000Ë

	)

83 
	#DAC_Triggî_T2_TRGO
 ((
uöt32_t
)0x00000024Ë

	)

84 
	#DAC_Triggî_T4_TRGO
 ((
uöt32_t
)0x0000002CË

	)

85 
	#DAC_Triggî_T5_TRGO
 ((
uöt32_t
)0x0000001CË

	)

86 
	#DAC_Triggî_T6_TRGO
 ((
uöt32_t
)0x00000004Ë

	)

87 
	#DAC_Triggî_T7_TRGO
 ((
uöt32_t
)0x00000014Ë

	)

88 
	#DAC_Triggî_T8_TRGO
 ((
uöt32_t
)0x0000000CË

	)

90 
	#DAC_Triggî_Ext_IT9
 ((
uöt32_t
)0x00000034Ë

	)

91 
	#DAC_Triggî_So·w¨e
 ((
uöt32_t
)0x0000003CË

	)

93 
	#IS_DAC_TRIGGER
(
TRIGGER
Ë(((TRIGGERË=
DAC_Triggî_N⁄e
Ë|| \

	)

94 ((
TRIGGER
Ë=
DAC_Triggî_T6_TRGO
) || \

95 ((
TRIGGER
Ë=
DAC_Triggî_T8_TRGO
) || \

96 ((
TRIGGER
Ë=
DAC_Triggî_T7_TRGO
) || \

97 ((
TRIGGER
Ë=
DAC_Triggî_T5_TRGO
) || \

98 ((
TRIGGER
Ë=
DAC_Triggî_T2_TRGO
) || \

99 ((
TRIGGER
Ë=
DAC_Triggî_T4_TRGO
) || \

100 ((
TRIGGER
Ë=
DAC_Triggî_Ext_IT9
) || \

101 ((
TRIGGER
Ë=
DAC_Triggî_So·w¨e
))

111 
	#DAC_WaveGíî©i⁄_N⁄e
 ((
uöt32_t
)0x00000000)

	)

112 
	#DAC_WaveGíî©i⁄_Noi£
 ((
uöt32_t
)0x00000040)

	)

113 
	#DAC_WaveGíî©i⁄_TrüngÀ
 ((
uöt32_t
)0x00000080)

	)

114 
	#IS_DAC_GENERATE_WAVE
(
WAVE
Ë(((WAVEË=
DAC_WaveGíî©i⁄_N⁄e
Ë|| \

	)

115 ((
WAVE
Ë=
DAC_WaveGíî©i⁄_Noi£
) || \

116 ((
WAVE
Ë=
DAC_WaveGíî©i⁄_TrüngÀ
))

125 
	#DAC_LFSRUnmask_Bô0
 ((
uöt32_t
)0x00000000Ë

	)

126 
	#DAC_LFSRUnmask_Bôs1_0
 ((
uöt32_t
)0x00000100Ë

	)

127 
	#DAC_LFSRUnmask_Bôs2_0
 ((
uöt32_t
)0x00000200Ë

	)

128 
	#DAC_LFSRUnmask_Bôs3_0
 ((
uöt32_t
)0x00000300Ë

	)

129 
	#DAC_LFSRUnmask_Bôs4_0
 ((
uöt32_t
)0x00000400Ë

	)

130 
	#DAC_LFSRUnmask_Bôs5_0
 ((
uöt32_t
)0x00000500Ë

	)

131 
	#DAC_LFSRUnmask_Bôs6_0
 ((
uöt32_t
)0x00000600Ë

	)

132 
	#DAC_LFSRUnmask_Bôs7_0
 ((
uöt32_t
)0x00000700Ë

	)

133 
	#DAC_LFSRUnmask_Bôs8_0
 ((
uöt32_t
)0x00000800Ë

	)

134 
	#DAC_LFSRUnmask_Bôs9_0
 ((
uöt32_t
)0x00000900Ë

	)

135 
	#DAC_LFSRUnmask_Bôs10_0
 ((
uöt32_t
)0x00000A00Ë

	)

136 
	#DAC_LFSRUnmask_Bôs11_0
 ((
uöt32_t
)0x00000B00Ë

	)

137 
	#DAC_TrüngÀAm∂ôude_1
 ((
uöt32_t
)0x00000000Ë

	)

138 
	#DAC_TrüngÀAm∂ôude_3
 ((
uöt32_t
)0x00000100Ë

	)

139 
	#DAC_TrüngÀAm∂ôude_7
 ((
uöt32_t
)0x00000200Ë

	)

140 
	#DAC_TrüngÀAm∂ôude_15
 ((
uöt32_t
)0x00000300Ë

	)

141 
	#DAC_TrüngÀAm∂ôude_31
 ((
uöt32_t
)0x00000400Ë

	)

142 
	#DAC_TrüngÀAm∂ôude_63
 ((
uöt32_t
)0x00000500Ë

	)

143 
	#DAC_TrüngÀAm∂ôude_127
 ((
uöt32_t
)0x00000600Ë

	)

144 
	#DAC_TrüngÀAm∂ôude_255
 ((
uöt32_t
)0x00000700Ë

	)

145 
	#DAC_TrüngÀAm∂ôude_511
 ((
uöt32_t
)0x00000800Ë

	)

146 
	#DAC_TrüngÀAm∂ôude_1023
 ((
uöt32_t
)0x00000900Ë

	)

147 
	#DAC_TrüngÀAm∂ôude_2047
 ((
uöt32_t
)0x00000A00Ë

	)

148 
	#DAC_TrüngÀAm∂ôude_4095
 ((
uöt32_t
)0x00000B00Ë

	)

150 
	#IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE
(
VALUE
Ë(((VALUEË=
DAC_LFSRUnmask_Bô0
Ë|| \

	)

151 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs1_0
) || \

152 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs2_0
) || \

153 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs3_0
) || \

154 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs4_0
) || \

155 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs5_0
) || \

156 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs6_0
) || \

157 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs7_0
) || \

158 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs8_0
) || \

159 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs9_0
) || \

160 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs10_0
) || \

161 ((
VALUE
Ë=
DAC_LFSRUnmask_Bôs11_0
) || \

162 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_1
) || \

163 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_3
) || \

164 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_7
) || \

165 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_15
) || \

166 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_31
) || \

167 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_63
) || \

168 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_127
) || \

169 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_255
) || \

170 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_511
) || \

171 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_1023
) || \

172 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_2047
) || \

173 ((
VALUE
Ë=
DAC_TrüngÀAm∂ôude_4095
))

182 
	#DAC_OuçutBuf„r_E«bÀ
 ((
uöt32_t
)0x00000000)

	)

183 
	#DAC_OuçutBuf„r_DißbÀ
 ((
uöt32_t
)0x00000002)

	)

184 
	#IS_DAC_OUTPUT_BUFFER_STATE
(
STATE
Ë(((STATEË=
DAC_OuçutBuf„r_E«bÀ
Ë|| \

	)

185 ((
STATE
Ë=
DAC_OuçutBuf„r_DißbÀ
))

194 
	#DAC_Ch™√l_1
 ((
uöt32_t
)0x00000000)

	)

195 
	#DAC_Ch™√l_2
 ((
uöt32_t
)0x00000010)

	)

196 
	#IS_DAC_CHANNEL
(
CHANNEL
Ë(((CHANNELË=
DAC_Ch™√l_1
Ë|| \

	)

197 ((
CHANNEL
Ë=
DAC_Ch™√l_2
))

206 
	#DAC_Align_12b_R
 ((
uöt32_t
)0x00000000)

	)

207 
	#DAC_Align_12b_L
 ((
uöt32_t
)0x00000004)

	)

208 
	#DAC_Align_8b_R
 ((
uöt32_t
)0x00000008)

	)

209 
	#IS_DAC_ALIGN
(
ALIGN
Ë(((ALIGNË=
DAC_Align_12b_R
Ë|| \

	)

210 ((
ALIGN
Ë=
DAC_Align_12b_L
) || \

211 ((
ALIGN
Ë=
DAC_Align_8b_R
))

220 
	#DAC_Wave_Noi£
 ((
uöt32_t
)0x00000040)

	)

221 
	#DAC_Wave_TrüngÀ
 ((
uöt32_t
)0x00000080)

	)

222 
	#IS_DAC_WAVE
(
WAVE
Ë(((WAVEË=
DAC_Wave_Noi£
Ë|| \

	)

223 ((
WAVE
Ë=
DAC_Wave_TrüngÀ
))

232 
	#IS_DAC_DATA
(
DATA
Ë((DATAË<0xFFF0)

	)

240 
	#DAC_IT_DMAUDR
 ((
uöt32_t
)0x00002000)

	)

241 
	#IS_DAC_IT
(
IT
Ë(((ITË=
DAC_IT_DMAUDR
))

	)

251 
	#DAC_FLAG_DMAUDR
 ((
uöt32_t
)0x00002000)

	)

252 
	#IS_DAC_FLAG
(
FLAG
Ë(((FLAGË=
DAC_FLAG_DMAUDR
))

	)

266 
DAC_DeInô
();

269 
DAC_Inô
(
uöt32_t
 
DAC_Ch™√l
, 
DAC_InôTy≥Def
* 
DAC_InôSåu˘
);

270 
DAC_Såu˘Inô
(
DAC_InôTy≥Def
* 
DAC_InôSåu˘
);

271 
DAC_Cmd
(
uöt32_t
 
DAC_Ch™√l
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

272 
DAC_So·w¨eTriggîCmd
(
uöt32_t
 
DAC_Ch™√l
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

273 
DAC_DuÆSo·w¨eTriggîCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

274 
DAC_WaveGíî©i⁄Cmd
(
uöt32_t
 
DAC_Ch™√l
, uöt32_à
DAC_Wave
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

275 
DAC_SëCh™√l1D©a
(
uöt32_t
 
DAC_Align
, 
uöt16_t
 
D©a
);

276 
DAC_SëCh™√l2D©a
(
uöt32_t
 
DAC_Align
, 
uöt16_t
 
D©a
);

277 
DAC_SëDuÆCh™√lD©a
(
uöt32_t
 
DAC_Align
, 
uöt16_t
 
D©a2
, uöt16_à
D©a1
);

278 
uöt16_t
 
DAC_GëD©aOuçutVÆue
(
uöt32_t
 
DAC_Ch™√l
);

281 
DAC_DMACmd
(
uöt32_t
 
DAC_Ch™√l
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

284 
DAC_ITC⁄fig
(
uöt32_t
 
DAC_Ch™√l
, uöt32_à
DAC_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

285 
FœgSètus
 
DAC_GëFœgSètus
(
uöt32_t
 
DAC_Ch™√l
, uöt32_à
DAC_FLAG
);

286 
DAC_CÀ¨Fœg
(
uöt32_t
 
DAC_Ch™√l
, uöt32_à
DAC_FLAG
);

287 
ITSètus
 
DAC_GëITSètus
(
uöt32_t
 
DAC_Ch™√l
, uöt32_à
DAC_IT
);

288 
DAC_CÀ¨ITPídögBô
(
uöt32_t
 
DAC_Ch™√l
, uöt32_à
DAC_IT
);

290 #ifde‡
__˝lu•lus


	@stm32f4xx_dbgmcu.h

29 #i‚de‡
__STM32F4xx_DBGMCU_H


30 
	#__STM32F4xx_DBGMCU_H


	)

32 #ifde‡
__˝lu•lus


37 
	~"°m32f4xx.h
"

53 
	#DBGMCU_SLEEP
 ((
uöt32_t
)0x00000001)

	)

54 
	#DBGMCU_STOP
 ((
uöt32_t
)0x00000002)

	)

55 
	#DBGMCU_STANDBY
 ((
uöt32_t
)0x00000004)

	)

56 
	#IS_DBGMCU_PERIPH
(
PERIPH
Ë((((PERIPHË& 0xFFFFFFF8Ë=0x00Ë&& ((PERIPHË!0x00))

	)

58 
	#DBGMCU_TIM2_STOP
 ((
uöt32_t
)0x00000001)

	)

59 
	#DBGMCU_TIM3_STOP
 ((
uöt32_t
)0x00000002)

	)

60 
	#DBGMCU_TIM4_STOP
 ((
uöt32_t
)0x00000004)

	)

61 
	#DBGMCU_TIM5_STOP
 ((
uöt32_t
)0x00000008)

	)

62 
	#DBGMCU_TIM6_STOP
 ((
uöt32_t
)0x00000010)

	)

63 
	#DBGMCU_TIM7_STOP
 ((
uöt32_t
)0x00000020)

	)

64 
	#DBGMCU_TIM12_STOP
 ((
uöt32_t
)0x00000040)

	)

65 
	#DBGMCU_TIM13_STOP
 ((
uöt32_t
)0x00000080)

	)

66 
	#DBGMCU_TIM14_STOP
 ((
uöt32_t
)0x00000100)

	)

67 
	#DBGMCU_RTC_STOP
 ((
uöt32_t
)0x00000400)

	)

68 
	#DBGMCU_WWDG_STOP
 ((
uöt32_t
)0x00000800)

	)

69 
	#DBGMCU_IWDG_STOP
 ((
uöt32_t
)0x00001000)

	)

70 
	#DBGMCU_I2C1_SMBUS_TIMEOUT
 ((
uöt32_t
)0x00200000)

	)

71 
	#DBGMCU_I2C2_SMBUS_TIMEOUT
 ((
uöt32_t
)0x00400000)

	)

72 
	#DBGMCU_I2C3_SMBUS_TIMEOUT
 ((
uöt32_t
)0x00800000)

	)

73 
	#DBGMCU_CAN1_STOP
 ((
uöt32_t
)0x02000000)

	)

74 
	#DBGMCU_CAN2_STOP
 ((
uöt32_t
)0x04000000)

	)

75 
	#IS_DBGMCU_APB1PERIPH
(
PERIPH
Ë((((PERIPHË& 0xF91FE200Ë=0x00Ë&& ((PERIPHË!0x00))

	)

77 
	#DBGMCU_TIM1_STOP
 ((
uöt32_t
)0x00000001)

	)

78 
	#DBGMCU_TIM8_STOP
 ((
uöt32_t
)0x00000002)

	)

79 
	#DBGMCU_TIM9_STOP
 ((
uöt32_t
)0x00010000)

	)

80 
	#DBGMCU_TIM10_STOP
 ((
uöt32_t
)0x00020000)

	)

81 
	#DBGMCU_TIM11_STOP
 ((
uöt32_t
)0x00040000)

	)

82 
	#IS_DBGMCU_APB2PERIPH
(
PERIPH
Ë((((PERIPHË& 0xFFF8FFFCË=0x00Ë&& ((PERIPHË!0x00))

	)

89 
uöt32_t
 
DBGMCU_GëREVID
();

90 
uöt32_t
 
DBGMCU_GëDEVID
();

91 
DBGMCU_C⁄fig
(
uöt32_t
 
DBGMCU_Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

92 
DBGMCU_APB1PîùhC⁄fig
(
uöt32_t
 
DBGMCU_Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

93 
DBGMCU_APB2PîùhC⁄fig
(
uöt32_t
 
DBGMCU_Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

95 #ifde‡
__˝lu•lus


	@stm32f4xx_dcmi.h

29 #i‚de‡
__STM32F4xx_DCMI_H


30 
	#__STM32F4xx_DCMI_H


	)

32 #ifde‡
__˝lu•lus


37 
	~"°m32f4xx.h
"

53 
uöt16_t
 
DCMI_C≠tuªMode
;

56 
uöt16_t
 
DCMI_SynchroMode
;

59 
uöt16_t
 
DCMI_PCKPﬁ¨ôy
;

62 
uöt16_t
 
DCMI_VSPﬁ¨ôy
;

65 
uöt16_t
 
DCMI_HSPﬁ¨ôy
;

68 
uöt16_t
 
DCMI_C≠tuªR©e
;

71 
uöt16_t
 
DCMI_ExãndedD©aMode
;

73 } 
	tDCMI_InôTy≥Def
;

80 
uöt16_t
 
DCMI_VîtiˇlSèπLöe
;

83 
uöt16_t
 
DCMI_H‹iz⁄èlOff£tCou¡
;

86 
uöt16_t
 
DCMI_VîtiˇlLöeCou¡
;

89 
uöt16_t
 
DCMI_C≠tuªCou¡
;

92 } 
	tDCMI_CROPInôTy≥Def
;

99 
uöt8_t
 
DCMI_FømeSèπCode
;

100 
uöt8_t
 
DCMI_LöeSèπCode
;

101 
uöt8_t
 
DCMI_LöeEndCode
;

102 
uöt8_t
 
DCMI_FømeEndCode
;

103 } 
	tDCMI_CodesInôTy≥Def
;

114 
	#DCMI_C≠tuªMode_C⁄töuous
 ((
uöt16_t
)0x0000Ë

	)

116 
	#DCMI_C≠tuªMode_S«pShŸ
 ((
uöt16_t
)0x0002Ë

	)

118 
	#IS_DCMI_CAPTURE_MODE
(
MODE
)(((MODEË=
DCMI_C≠tuªMode_C⁄töuous
Ë|| \

	)

119 ((
MODE
Ë=
DCMI_C≠tuªMode_S«pShŸ
))

128 
	#DCMI_SynchroMode_H¨dw¨e
 ((
uöt16_t
)0x0000Ë

	)

130 
	#DCMI_SynchroMode_Embedded
 ((
uöt16_t
)0x0010Ë

	)

132 
	#IS_DCMI_SYNCHRO
(
MODE
)(((MODEË=
DCMI_SynchroMode_H¨dw¨e
Ë|| \

	)

133 ((
MODE
Ë=
DCMI_SynchroMode_Embedded
))

142 
	#DCMI_PCKPﬁ¨ôy_FÆlög
 ((
uöt16_t
)0x0000Ë

	)

143 
	#DCMI_PCKPﬁ¨ôy_Risög
 ((
uöt16_t
)0x0020Ë

	)

144 
	#IS_DCMI_PCKPOLARITY
(
POLARITY
)(((POLARITYË=
DCMI_PCKPﬁ¨ôy_FÆlög
Ë|| \

	)

145 ((
POLARITY
Ë=
DCMI_PCKPﬁ¨ôy_Risög
))

154 
	#DCMI_VSPﬁ¨ôy_Low
 ((
uöt16_t
)0x0000Ë

	)

155 
	#DCMI_VSPﬁ¨ôy_High
 ((
uöt16_t
)0x0080Ë

	)

156 
	#IS_DCMI_VSPOLARITY
(
POLARITY
)(((POLARITYË=
DCMI_VSPﬁ¨ôy_Low
Ë|| \

	)

157 ((
POLARITY
Ë=
DCMI_VSPﬁ¨ôy_High
))

166 
	#DCMI_HSPﬁ¨ôy_Low
 ((
uöt16_t
)0x0000Ë

	)

167 
	#DCMI_HSPﬁ¨ôy_High
 ((
uöt16_t
)0x0040Ë

	)

168 
	#IS_DCMI_HSPOLARITY
(
POLARITY
)(((POLARITYË=
DCMI_HSPﬁ¨ôy_Low
Ë|| \

	)

169 ((
POLARITY
Ë=
DCMI_HSPﬁ¨ôy_High
))

178 
	#DCMI_C≠tuªR©e_AŒ_Føme
 ((
uöt16_t
)0x0000Ë

	)

179 
	#DCMI_C≠tuªR©e_1of2_Føme
 ((
uöt16_t
)0x0100Ë

	)

180 
	#DCMI_C≠tuªR©e_1of4_Føme
 ((
uöt16_t
)0x0200Ë

	)

181 
	#IS_DCMI_CAPTURE_RATE
(
RATE
Ë(((RATEË=
DCMI_C≠tuªR©e_AŒ_Føme
Ë|| \

	)

182 ((
RATE
Ë=
DCMI_C≠tuªR©e_1of2_Føme
) ||\

183 ((
RATE
Ë=
DCMI_C≠tuªR©e_1of4_Føme
))

192 
	#DCMI_ExãndedD©aMode_8b
 ((
uöt16_t
)0x0000Ë

	)

193 
	#DCMI_ExãndedD©aMode_10b
 ((
uöt16_t
)0x0400Ë

	)

194 
	#DCMI_ExãndedD©aMode_12b
 ((
uöt16_t
)0x0800Ë

	)

195 
	#DCMI_ExãndedD©aMode_14b
 ((
uöt16_t
)0x0C00Ë

	)

196 
	#IS_DCMI_EXTENDED_DATA
(
DATA
)(((DATAË=
DCMI_ExãndedD©aMode_8b
Ë|| \

	)

197 ((
DATA
Ë=
DCMI_ExãndedD©aMode_10b
) ||\

198 ((
DATA
Ë=
DCMI_ExãndedD©aMode_12b
) ||\

199 ((
DATA
Ë=
DCMI_ExãndedD©aMode_14b
))

208 
	#DCMI_IT_FRAME
 ((
uöt16_t
)0x0001)

	)

209 
	#DCMI_IT_OVF
 ((
uöt16_t
)0x0002)

	)

210 
	#DCMI_IT_ERR
 ((
uöt16_t
)0x0004)

	)

211 
	#DCMI_IT_VSYNC
 ((
uöt16_t
)0x0008)

	)

212 
	#DCMI_IT_LINE
 ((
uöt16_t
)0x0010)

	)

213 
	#IS_DCMI_CONFIG_IT
(
IT
Ë((((ITË& (
uöt16_t
)0xFFE0Ë=0x0000Ë&& ((ITË!0x0000))

	)

214 
	#IS_DCMI_GET_IT
(
IT
Ë(((ITË=
DCMI_IT_FRAME
Ë|| \

	)

215 ((
IT
Ë=
DCMI_IT_OVF
) || \

216 ((
IT
Ë=
DCMI_IT_ERR
) || \

217 ((
IT
Ë=
DCMI_IT_VSYNC
) || \

218 ((
IT
Ë=
DCMI_IT_LINE
))

230 
	#DCMI_FLAG_HSYNC
 ((
uöt16_t
)0x2001)

	)

231 
	#DCMI_FLAG_VSYNC
 ((
uöt16_t
)0x2002)

	)

232 
	#DCMI_FLAG_FNE
 ((
uöt16_t
)0x2004)

	)

236 
	#DCMI_FLAG_FRAMERI
 ((
uöt16_t
)0x0001)

	)

237 
	#DCMI_FLAG_OVFRI
 ((
uöt16_t
)0x0002)

	)

238 
	#DCMI_FLAG_ERRRI
 ((
uöt16_t
)0x0004)

	)

239 
	#DCMI_FLAG_VSYNCRI
 ((
uöt16_t
)0x0008)

	)

240 
	#DCMI_FLAG_LINERI
 ((
uöt16_t
)0x0010)

	)

244 
	#DCMI_FLAG_FRAMEMI
 ((
uöt16_t
)0x1001)

	)

245 
	#DCMI_FLAG_OVFMI
 ((
uöt16_t
)0x1002)

	)

246 
	#DCMI_FLAG_ERRMI
 ((
uöt16_t
)0x1004)

	)

247 
	#DCMI_FLAG_VSYNCMI
 ((
uöt16_t
)0x1008)

	)

248 
	#DCMI_FLAG_LINEMI
 ((
uöt16_t
)0x1010)

	)

249 
	#IS_DCMI_GET_FLAG
(
FLAG
Ë(((FLAGË=
DCMI_FLAG_HSYNC
Ë|| \

	)

250 ((
FLAG
Ë=
DCMI_FLAG_VSYNC
) || \

251 ((
FLAG
Ë=
DCMI_FLAG_FNE
) || \

252 ((
FLAG
Ë=
DCMI_FLAG_FRAMERI
) || \

253 ((
FLAG
Ë=
DCMI_FLAG_OVFRI
) || \

254 ((
FLAG
Ë=
DCMI_FLAG_ERRRI
) || \

255 ((
FLAG
Ë=
DCMI_FLAG_VSYNCRI
) || \

256 ((
FLAG
Ë=
DCMI_FLAG_LINERI
) || \

257 ((
FLAG
Ë=
DCMI_FLAG_FRAMEMI
) || \

258 ((
FLAG
Ë=
DCMI_FLAG_OVFMI
) || \

259 ((
FLAG
Ë=
DCMI_FLAG_ERRMI
) || \

260 ((
FLAG
Ë=
DCMI_FLAG_VSYNCMI
) || \

261 ((
FLAG
Ë=
DCMI_FLAG_LINEMI
))

263 
	#IS_DCMI_CLEAR_FLAG
(
FLAG
Ë((((FLAGË& (
uöt16_t
)0xFFE0Ë=0x0000Ë&& ((FLAGË!0x0000))

	)

276 
DCMI_DeInô
();

279 
DCMI_Inô
(
DCMI_InôTy≥Def
* 
DCMI_InôSåu˘
);

280 
DCMI_Såu˘Inô
(
DCMI_InôTy≥Def
* 
DCMI_InôSåu˘
);

281 
DCMI_CROPC⁄fig
(
DCMI_CROPInôTy≥Def
* 
DCMI_CROPInôSåu˘
);

282 
DCMI_CROPCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

283 
DCMI_SëEmbeddedSynchroCodes
(
DCMI_CodesInôTy≥Def
* 
DCMI_CodesInôSåu˘
);

284 
DCMI_JPEGCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

287 
DCMI_Cmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

288 
DCMI_C≠tuªCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

289 
uöt32_t
 
DCMI_RódD©a
();

292 
DCMI_ITC⁄fig
(
uöt16_t
 
DCMI_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

293 
FœgSètus
 
DCMI_GëFœgSètus
(
uöt16_t
 
DCMI_FLAG
);

294 
DCMI_CÀ¨Fœg
(
uöt16_t
 
DCMI_FLAG
);

295 
ITSètus
 
DCMI_GëITSètus
(
uöt16_t
 
DCMI_IT
);

296 
DCMI_CÀ¨ITPídögBô
(
uöt16_t
 
DCMI_IT
);

298 #ifde‡
__˝lu•lus


	@stm32f4xx_dma.h

30 #i‚de‡
__STM32F4xx_DMA_H


31 
	#__STM32F4xx_DMA_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

56 
uöt32_t
 
DMA_Ch™√l
;

59 
uöt32_t
 
DMA_PîùhîÆBa£Addr
;

61 
uöt32_t
 
DMA_Mem‹y0Ba£Addr
;

65 
uöt32_t
 
DMA_DIR
;

69 
uöt32_t
 
DMA_Buf„rSize
;

73 
uöt32_t
 
DMA_PîùhîÆInc
;

76 
uöt32_t
 
DMA_Mem‹yInc
;

79 
uöt32_t
 
DMA_PîùhîÆD©aSize
;

82 
uöt32_t
 
DMA_Mem‹yD©aSize
;

85 
uöt32_t
 
DMA_Mode
;

90 
uöt32_t
 
DMA_Pri‹ôy
;

93 
uöt32_t
 
DMA_FIFOMode
;

98 
uöt32_t
 
DMA_FIFOThªshﬁd
;

101 
uöt32_t
 
DMA_Mem‹yBur°
;

106 
uöt32_t
 
DMA_PîùhîÆBur°
;

110 }
	tDMA_InôTy≥Def
;

118 
	#IS_DMA_ALL_PERIPH
(
PERIPH
Ë(((PERIPHË=
DMA1_Såóm0
Ë|| \

	)

119 ((
PERIPH
Ë=
DMA1_Såóm1
) || \

120 ((
PERIPH
Ë=
DMA1_Såóm2
) || \

121 ((
PERIPH
Ë=
DMA1_Såóm3
) || \

122 ((
PERIPH
Ë=
DMA1_Såóm4
) || \

123 ((
PERIPH
Ë=
DMA1_Såóm5
) || \

124 ((
PERIPH
Ë=
DMA1_Såóm6
) || \

125 ((
PERIPH
Ë=
DMA1_Såóm7
) || \

126 ((
PERIPH
Ë=
DMA2_Såóm0
) || \

127 ((
PERIPH
Ë=
DMA2_Såóm1
) || \

128 ((
PERIPH
Ë=
DMA2_Såóm2
) || \

129 ((
PERIPH
Ë=
DMA2_Såóm3
) || \

130 ((
PERIPH
Ë=
DMA2_Såóm4
) || \

131 ((
PERIPH
Ë=
DMA2_Såóm5
) || \

132 ((
PERIPH
Ë=
DMA2_Såóm6
) || \

133 ((
PERIPH
Ë=
DMA2_Såóm7
))

135 
	#IS_DMA_ALL_CONTROLLER
(
CONTROLLER
Ë(((CONTROLLERË=
DMA1
Ë|| \

	)

136 ((
CONTROLLER
Ë=
DMA2
))

141 
	#DMA_Ch™√l_0
 ((
uöt32_t
)0x00000000)

	)

142 
	#DMA_Ch™√l_1
 ((
uöt32_t
)0x02000000)

	)

143 
	#DMA_Ch™√l_2
 ((
uöt32_t
)0x04000000)

	)

144 
	#DMA_Ch™√l_3
 ((
uöt32_t
)0x06000000)

	)

145 
	#DMA_Ch™√l_4
 ((
uöt32_t
)0x08000000)

	)

146 
	#DMA_Ch™√l_5
 ((
uöt32_t
)0x0A000000)

	)

147 
	#DMA_Ch™√l_6
 ((
uöt32_t
)0x0C000000)

	)

148 
	#DMA_Ch™√l_7
 ((
uöt32_t
)0x0E000000)

	)

150 
	#IS_DMA_CHANNEL
(
CHANNEL
Ë(((CHANNELË=
DMA_Ch™√l_0
Ë|| \

	)

151 ((
CHANNEL
Ë=
DMA_Ch™√l_1
) || \

152 ((
CHANNEL
Ë=
DMA_Ch™√l_2
) || \

153 ((
CHANNEL
Ë=
DMA_Ch™√l_3
) || \

154 ((
CHANNEL
Ë=
DMA_Ch™√l_4
) || \

155 ((
CHANNEL
Ë=
DMA_Ch™√l_5
) || \

156 ((
CHANNEL
Ë=
DMA_Ch™√l_6
) || \

157 ((
CHANNEL
Ë=
DMA_Ch™√l_7
))

166 
	#DMA_DIR_PîùhîÆToMem‹y
 ((
uöt32_t
)0x00000000)

	)

167 
	#DMA_DIR_Mem‹yToPîùhîÆ
 ((
uöt32_t
)0x00000040)

	)

168 
	#DMA_DIR_Mem‹yToMem‹y
 ((
uöt32_t
)0x00000080)

	)

170 
	#IS_DMA_DIRECTION
(
DIRECTION
Ë(((DIRECTIONË=
DMA_DIR_PîùhîÆToMem‹y
 ) || \

	)

171 ((
DIRECTION
Ë=
DMA_DIR_Mem‹yToPîùhîÆ
) || \

172 ((
DIRECTION
Ë=
DMA_DIR_Mem‹yToMem‹y
))

181 
	#IS_DMA_BUFFER_SIZE
(
SIZE
Ë(((SIZEË>0x1Ë&& ((SIZEË< 0x10000))

	)

190 
	#DMA_PîùhîÆInc_E«bÀ
 ((
uöt32_t
)0x00000200)

	)

191 
	#DMA_PîùhîÆInc_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

193 
	#IS_DMA_PERIPHERAL_INC_STATE
(
STATE
Ë(((STATEË=
DMA_PîùhîÆInc_E«bÀ
Ë|| \

	)

194 ((
STATE
Ë=
DMA_PîùhîÆInc_DißbÀ
))

203 
	#DMA_Mem‹yInc_E«bÀ
 ((
uöt32_t
)0x00000400)

	)

204 
	#DMA_Mem‹yInc_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

206 
	#IS_DMA_MEMORY_INC_STATE
(
STATE
Ë(((STATEË=
DMA_Mem‹yInc_E«bÀ
Ë|| \

	)

207 ((
STATE
Ë=
DMA_Mem‹yInc_DißbÀ
))

216 
	#DMA_PîùhîÆD©aSize_Byã
 ((
uöt32_t
)0x00000000)

	)

217 
	#DMA_PîùhîÆD©aSize_HÆfW‹d
 ((
uöt32_t
)0x00000800)

	)

218 
	#DMA_PîùhîÆD©aSize_W‹d
 ((
uöt32_t
)0x00001000)

	)

220 
	#IS_DMA_PERIPHERAL_DATA_SIZE
(
SIZE
Ë(((SIZEË=
DMA_PîùhîÆD©aSize_Byã
Ë|| \

	)

221 ((
SIZE
Ë=
DMA_PîùhîÆD©aSize_HÆfW‹d
) || \

222 ((
SIZE
Ë=
DMA_PîùhîÆD©aSize_W‹d
))

231 
	#DMA_Mem‹yD©aSize_Byã
 ((
uöt32_t
)0x00000000)

	)

232 
	#DMA_Mem‹yD©aSize_HÆfW‹d
 ((
uöt32_t
)0x00002000)

	)

233 
	#DMA_Mem‹yD©aSize_W‹d
 ((
uöt32_t
)0x00004000)

	)

235 
	#IS_DMA_MEMORY_DATA_SIZE
(
SIZE
Ë(((SIZEË=
DMA_Mem‹yD©aSize_Byã
Ë|| \

	)

236 ((
SIZE
Ë=
DMA_Mem‹yD©aSize_HÆfW‹d
) || \

237 ((
SIZE
Ë=
DMA_Mem‹yD©aSize_W‹d
 ))

246 
	#DMA_Mode_N‹mÆ
 ((
uöt32_t
)0x00000000)

	)

247 
	#DMA_Mode_Cúcuœr
 ((
uöt32_t
)0x00000100)

	)

249 
	#IS_DMA_MODE
(
MODE
Ë(((MODEË=
DMA_Mode_N‹mÆ
 ) || \

	)

250 ((
MODE
Ë=
DMA_Mode_Cúcuœr
))

259 
	#DMA_Pri‹ôy_Low
 ((
uöt32_t
)0x00000000)

	)

260 
	#DMA_Pri‹ôy_Medium
 ((
uöt32_t
)0x00010000)

	)

261 
	#DMA_Pri‹ôy_High
 ((
uöt32_t
)0x00020000)

	)

262 
	#DMA_Pri‹ôy_VîyHigh
 ((
uöt32_t
)0x00030000)

	)

264 
	#IS_DMA_PRIORITY
(
PRIORITY
Ë(((PRIORITYË=
DMA_Pri‹ôy_Low
 ) || \

	)

265 ((
PRIORITY
Ë=
DMA_Pri‹ôy_Medium
) || \

266 ((
PRIORITY
Ë=
DMA_Pri‹ôy_High
) || \

267 ((
PRIORITY
Ë=
DMA_Pri‹ôy_VîyHigh
))

276 
	#DMA_FIFOMode_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

277 
	#DMA_FIFOMode_E«bÀ
 ((
uöt32_t
)0x00000004)

	)

279 
	#IS_DMA_FIFO_MODE_STATE
(
STATE
Ë(((STATEË=
DMA_FIFOMode_DißbÀ
 ) || \

	)

280 ((
STATE
Ë=
DMA_FIFOMode_E«bÀ
))

289 
	#DMA_FIFOThªshﬁd_1Qu¨ãrFuŒ
 ((
uöt32_t
)0x00000000)

	)

290 
	#DMA_FIFOThªshﬁd_HÆfFuŒ
 ((
uöt32_t
)0x00000001)

	)

291 
	#DMA_FIFOThªshﬁd_3Qu¨ãrsFuŒ
 ((
uöt32_t
)0x00000002)

	)

292 
	#DMA_FIFOThªshﬁd_FuŒ
 ((
uöt32_t
)0x00000003)

	)

294 
	#IS_DMA_FIFO_THRESHOLD
(
THRESHOLD
Ë(((THRESHOLDË=
DMA_FIFOThªshﬁd_1Qu¨ãrFuŒ
 ) || \

	)

295 ((
THRESHOLD
Ë=
DMA_FIFOThªshﬁd_HÆfFuŒ
) || \

296 ((
THRESHOLD
Ë=
DMA_FIFOThªshﬁd_3Qu¨ãrsFuŒ
) || \

297 ((
THRESHOLD
Ë=
DMA_FIFOThªshﬁd_FuŒ
))

306 
	#DMA_Mem‹yBur°_SögÀ
 ((
uöt32_t
)0x00000000)

	)

307 
	#DMA_Mem‹yBur°_INC4
 ((
uöt32_t
)0x00800000)

	)

308 
	#DMA_Mem‹yBur°_INC8
 ((
uöt32_t
)0x01000000)

	)

309 
	#DMA_Mem‹yBur°_INC16
 ((
uöt32_t
)0x01800000)

	)

311 
	#IS_DMA_MEMORY_BURST
(
BURST
Ë(((BURSTË=
DMA_Mem‹yBur°_SögÀ
Ë|| \

	)

312 ((
BURST
Ë=
DMA_Mem‹yBur°_INC4
) || \

313 ((
BURST
Ë=
DMA_Mem‹yBur°_INC8
) || \

314 ((
BURST
Ë=
DMA_Mem‹yBur°_INC16
))

323 
	#DMA_PîùhîÆBur°_SögÀ
 ((
uöt32_t
)0x00000000)

	)

324 
	#DMA_PîùhîÆBur°_INC4
 ((
uöt32_t
)0x00200000)

	)

325 
	#DMA_PîùhîÆBur°_INC8
 ((
uöt32_t
)0x00400000)

	)

326 
	#DMA_PîùhîÆBur°_INC16
 ((
uöt32_t
)0x00600000)

	)

328 
	#IS_DMA_PERIPHERAL_BURST
(
BURST
Ë(((BURSTË=
DMA_PîùhîÆBur°_SögÀ
Ë|| \

	)

329 ((
BURST
Ë=
DMA_PîùhîÆBur°_INC4
) || \

330 ((
BURST
Ë=
DMA_PîùhîÆBur°_INC8
) || \

331 ((
BURST
Ë=
DMA_PîùhîÆBur°_INC16
))

340 
	#DMA_FIFOSètus_Less1Qu¨ãrFuŒ
 ((
uöt32_t
)0x00000000 << 3)

	)

341 
	#DMA_FIFOSètus_1Qu¨ãrFuŒ
 ((
uöt32_t
)0x00000001 << 3)

	)

342 
	#DMA_FIFOSètus_HÆfFuŒ
 ((
uöt32_t
)0x00000002 << 3)

	)

343 
	#DMA_FIFOSètus_3Qu¨ãrsFuŒ
 ((
uöt32_t
)0x00000003 << 3)

	)

344 
	#DMA_FIFOSètus_Em±y
 ((
uöt32_t
)0x00000004 << 3)

	)

345 
	#DMA_FIFOSètus_FuŒ
 ((
uöt32_t
)0x00000005 << 3)

	)

347 
	#IS_DMA_FIFO_STATUS
(
STATUS
Ë(((STATUSË=
DMA_FIFOSètus_Less1Qu¨ãrFuŒ
 ) || \

	)

348 ((
STATUS
Ë=
DMA_FIFOSètus_HÆfFuŒ
) || \

349 ((
STATUS
Ë=
DMA_FIFOSètus_1Qu¨ãrFuŒ
) || \

350 ((
STATUS
Ë=
DMA_FIFOSètus_3Qu¨ãrsFuŒ
) || \

351 ((
STATUS
Ë=
DMA_FIFOSètus_FuŒ
) || \

352 ((
STATUS
Ë=
DMA_FIFOSètus_Em±y
))

360 
	#DMA_FLAG_FEIF0
 ((
uöt32_t
)0x10800001)

	)

361 
	#DMA_FLAG_DMEIF0
 ((
uöt32_t
)0x10800004)

	)

362 
	#DMA_FLAG_TEIF0
 ((
uöt32_t
)0x10000008)

	)

363 
	#DMA_FLAG_HTIF0
 ((
uöt32_t
)0x10000010)

	)

364 
	#DMA_FLAG_TCIF0
 ((
uöt32_t
)0x10000020)

	)

365 
	#DMA_FLAG_FEIF1
 ((
uöt32_t
)0x10000040)

	)

366 
	#DMA_FLAG_DMEIF1
 ((
uöt32_t
)0x10000100)

	)

367 
	#DMA_FLAG_TEIF1
 ((
uöt32_t
)0x10000200)

	)

368 
	#DMA_FLAG_HTIF1
 ((
uöt32_t
)0x10000400)

	)

369 
	#DMA_FLAG_TCIF1
 ((
uöt32_t
)0x10000800)

	)

370 
	#DMA_FLAG_FEIF2
 ((
uöt32_t
)0x10010000)

	)

371 
	#DMA_FLAG_DMEIF2
 ((
uöt32_t
)0x10040000)

	)

372 
	#DMA_FLAG_TEIF2
 ((
uöt32_t
)0x10080000)

	)

373 
	#DMA_FLAG_HTIF2
 ((
uöt32_t
)0x10100000)

	)

374 
	#DMA_FLAG_TCIF2
 ((
uöt32_t
)0x10200000)

	)

375 
	#DMA_FLAG_FEIF3
 ((
uöt32_t
)0x10400000)

	)

376 
	#DMA_FLAG_DMEIF3
 ((
uöt32_t
)0x11000000)

	)

377 
	#DMA_FLAG_TEIF3
 ((
uöt32_t
)0x12000000)

	)

378 
	#DMA_FLAG_HTIF3
 ((
uöt32_t
)0x14000000)

	)

379 
	#DMA_FLAG_TCIF3
 ((
uöt32_t
)0x18000000)

	)

380 
	#DMA_FLAG_FEIF4
 ((
uöt32_t
)0x20000001)

	)

381 
	#DMA_FLAG_DMEIF4
 ((
uöt32_t
)0x20000004)

	)

382 
	#DMA_FLAG_TEIF4
 ((
uöt32_t
)0x20000008)

	)

383 
	#DMA_FLAG_HTIF4
 ((
uöt32_t
)0x20000010)

	)

384 
	#DMA_FLAG_TCIF4
 ((
uöt32_t
)0x20000020)

	)

385 
	#DMA_FLAG_FEIF5
 ((
uöt32_t
)0x20000040)

	)

386 
	#DMA_FLAG_DMEIF5
 ((
uöt32_t
)0x20000100)

	)

387 
	#DMA_FLAG_TEIF5
 ((
uöt32_t
)0x20000200)

	)

388 
	#DMA_FLAG_HTIF5
 ((
uöt32_t
)0x20000400)

	)

389 
	#DMA_FLAG_TCIF5
 ((
uöt32_t
)0x20000800)

	)

390 
	#DMA_FLAG_FEIF6
 ((
uöt32_t
)0x20010000)

	)

391 
	#DMA_FLAG_DMEIF6
 ((
uöt32_t
)0x20040000)

	)

392 
	#DMA_FLAG_TEIF6
 ((
uöt32_t
)0x20080000)

	)

393 
	#DMA_FLAG_HTIF6
 ((
uöt32_t
)0x20100000)

	)

394 
	#DMA_FLAG_TCIF6
 ((
uöt32_t
)0x20200000)

	)

395 
	#DMA_FLAG_FEIF7
 ((
uöt32_t
)0x20400000)

	)

396 
	#DMA_FLAG_DMEIF7
 ((
uöt32_t
)0x21000000)

	)

397 
	#DMA_FLAG_TEIF7
 ((
uöt32_t
)0x22000000)

	)

398 
	#DMA_FLAG_HTIF7
 ((
uöt32_t
)0x24000000)

	)

399 
	#DMA_FLAG_TCIF7
 ((
uöt32_t
)0x28000000)

	)

401 
	#IS_DMA_CLEAR_FLAG
(
FLAG
Ë((((FLAGË& 0x30000000Ë!0x30000000Ë&& (((FLAGË& 0x30000000Ë!0Ë&& \

	)

402 (((
FLAG
) & 0xC002F082) == 0x00) && ((FLAG) != 0x00))

404 
	#IS_DMA_GET_FLAG
(
FLAG
Ë(((FLAGË=
DMA_FLAG_TCIF0
Ë|| ((FLAGË=
DMA_FLAG_HTIF0
Ë|| \

	)

405 ((
FLAG
Ë=
DMA_FLAG_TEIF0
Ë|| ((FLAGË=
DMA_FLAG_DMEIF0
) || \

406 ((
FLAG
Ë=
DMA_FLAG_FEIF0
Ë|| ((FLAGË=
DMA_FLAG_TCIF1
) || \

407 ((
FLAG
Ë=
DMA_FLAG_HTIF1
Ë|| ((FLAGË=
DMA_FLAG_TEIF1
) || \

408 ((
FLAG
Ë=
DMA_FLAG_DMEIF1
Ë|| ((FLAGË=
DMA_FLAG_FEIF1
) || \

409 ((
FLAG
Ë=
DMA_FLAG_TCIF2
Ë|| ((FLAGË=
DMA_FLAG_HTIF2
) || \

410 ((
FLAG
Ë=
DMA_FLAG_TEIF2
Ë|| ((FLAGË=
DMA_FLAG_DMEIF2
) || \

411 ((
FLAG
Ë=
DMA_FLAG_FEIF2
Ë|| ((FLAGË=
DMA_FLAG_TCIF3
) || \

412 ((
FLAG
Ë=
DMA_FLAG_HTIF3
Ë|| ((FLAGË=
DMA_FLAG_TEIF3
) || \

413 ((
FLAG
Ë=
DMA_FLAG_DMEIF3
Ë|| ((FLAGË=
DMA_FLAG_FEIF3
) || \

414 ((
FLAG
Ë=
DMA_FLAG_TCIF4
Ë|| ((FLAGË=
DMA_FLAG_HTIF4
) || \

415 ((
FLAG
Ë=
DMA_FLAG_TEIF4
Ë|| ((FLAGË=
DMA_FLAG_DMEIF4
) || \

416 ((
FLAG
Ë=
DMA_FLAG_FEIF4
Ë|| ((FLAGË=
DMA_FLAG_TCIF5
) || \

417 ((
FLAG
Ë=
DMA_FLAG_HTIF5
Ë|| ((FLAGË=
DMA_FLAG_TEIF5
) || \

418 ((
FLAG
Ë=
DMA_FLAG_DMEIF5
Ë|| ((FLAGË=
DMA_FLAG_FEIF5
) || \

419 ((
FLAG
Ë=
DMA_FLAG_TCIF6
Ë|| ((FLAGË=
DMA_FLAG_HTIF6
) || \

420 ((
FLAG
Ë=
DMA_FLAG_TEIF6
Ë|| ((FLAGË=
DMA_FLAG_DMEIF6
) || \

421 ((
FLAG
Ë=
DMA_FLAG_FEIF6
Ë|| ((FLAGË=
DMA_FLAG_TCIF7
) || \

422 ((
FLAG
Ë=
DMA_FLAG_HTIF7
Ë|| ((FLAGË=
DMA_FLAG_TEIF7
) || \

423 ((
FLAG
Ë=
DMA_FLAG_DMEIF7
Ë|| ((FLAGË=
DMA_FLAG_FEIF7
))

432 
	#DMA_IT_TC
 ((
uöt32_t
)0x00000010)

	)

433 
	#DMA_IT_HT
 ((
uöt32_t
)0x00000008)

	)

434 
	#DMA_IT_TE
 ((
uöt32_t
)0x00000004)

	)

435 
	#DMA_IT_DME
 ((
uöt32_t
)0x00000002)

	)

436 
	#DMA_IT_FE
 ((
uöt32_t
)0x00000080)

	)

438 
	#IS_DMA_CONFIG_IT
(
IT
Ë((((ITË& 0xFFFFFF61Ë=0x00Ë&& ((ITË!0x00))

	)

447 
	#DMA_IT_FEIF0
 ((
uöt32_t
)0x90000001)

	)

448 
	#DMA_IT_DMEIF0
 ((
uöt32_t
)0x10001004)

	)

449 
	#DMA_IT_TEIF0
 ((
uöt32_t
)0x10002008)

	)

450 
	#DMA_IT_HTIF0
 ((
uöt32_t
)0x10004010)

	)

451 
	#DMA_IT_TCIF0
 ((
uöt32_t
)0x10008020)

	)

452 
	#DMA_IT_FEIF1
 ((
uöt32_t
)0x90000040)

	)

453 
	#DMA_IT_DMEIF1
 ((
uöt32_t
)0x10001100)

	)

454 
	#DMA_IT_TEIF1
 ((
uöt32_t
)0x10002200)

	)

455 
	#DMA_IT_HTIF1
 ((
uöt32_t
)0x10004400)

	)

456 
	#DMA_IT_TCIF1
 ((
uöt32_t
)0x10008800)

	)

457 
	#DMA_IT_FEIF2
 ((
uöt32_t
)0x90010000)

	)

458 
	#DMA_IT_DMEIF2
 ((
uöt32_t
)0x10041000)

	)

459 
	#DMA_IT_TEIF2
 ((
uöt32_t
)0x10082000)

	)

460 
	#DMA_IT_HTIF2
 ((
uöt32_t
)0x10104000)

	)

461 
	#DMA_IT_TCIF2
 ((
uöt32_t
)0x10208000)

	)

462 
	#DMA_IT_FEIF3
 ((
uöt32_t
)0x90400000)

	)

463 
	#DMA_IT_DMEIF3
 ((
uöt32_t
)0x11001000)

	)

464 
	#DMA_IT_TEIF3
 ((
uöt32_t
)0x12002000)

	)

465 
	#DMA_IT_HTIF3
 ((
uöt32_t
)0x14004000)

	)

466 
	#DMA_IT_TCIF3
 ((
uöt32_t
)0x18008000)

	)

467 
	#DMA_IT_FEIF4
 ((
uöt32_t
)0xA0000001)

	)

468 
	#DMA_IT_DMEIF4
 ((
uöt32_t
)0x20001004)

	)

469 
	#DMA_IT_TEIF4
 ((
uöt32_t
)0x20002008)

	)

470 
	#DMA_IT_HTIF4
 ((
uöt32_t
)0x20004010)

	)

471 
	#DMA_IT_TCIF4
 ((
uöt32_t
)0x20008020)

	)

472 
	#DMA_IT_FEIF5
 ((
uöt32_t
)0xA0000040)

	)

473 
	#DMA_IT_DMEIF5
 ((
uöt32_t
)0x20001100)

	)

474 
	#DMA_IT_TEIF5
 ((
uöt32_t
)0x20002200)

	)

475 
	#DMA_IT_HTIF5
 ((
uöt32_t
)0x20004400)

	)

476 
	#DMA_IT_TCIF5
 ((
uöt32_t
)0x20008800)

	)

477 
	#DMA_IT_FEIF6
 ((
uöt32_t
)0xA0010000)

	)

478 
	#DMA_IT_DMEIF6
 ((
uöt32_t
)0x20041000)

	)

479 
	#DMA_IT_TEIF6
 ((
uöt32_t
)0x20082000)

	)

480 
	#DMA_IT_HTIF6
 ((
uöt32_t
)0x20104000)

	)

481 
	#DMA_IT_TCIF6
 ((
uöt32_t
)0x20208000)

	)

482 
	#DMA_IT_FEIF7
 ((
uöt32_t
)0xA0400000)

	)

483 
	#DMA_IT_DMEIF7
 ((
uöt32_t
)0x21001000)

	)

484 
	#DMA_IT_TEIF7
 ((
uöt32_t
)0x22002000)

	)

485 
	#DMA_IT_HTIF7
 ((
uöt32_t
)0x24004000)

	)

486 
	#DMA_IT_TCIF7
 ((
uöt32_t
)0x28008000)

	)

488 
	#IS_DMA_CLEAR_IT
(
IT
Ë((((ITË& 0x30000000Ë!0x30000000Ë&& \

	)

489 (((
IT
) & 0x30000000) != 0) && ((IT) != 0x00) && \

490 (((
IT
) & 0x40820082) == 0x00))

492 
	#IS_DMA_GET_IT
(
IT
Ë(((ITË=
DMA_IT_TCIF0
Ë|| ((ITË=
DMA_IT_HTIF0
Ë|| \

	)

493 ((
IT
Ë=
DMA_IT_TEIF0
Ë|| ((ITË=
DMA_IT_DMEIF0
) || \

494 ((
IT
Ë=
DMA_IT_FEIF0
Ë|| ((ITË=
DMA_IT_TCIF1
) || \

495 ((
IT
Ë=
DMA_IT_HTIF1
Ë|| ((ITË=
DMA_IT_TEIF1
) || \

496 ((
IT
Ë=
DMA_IT_DMEIF1
)|| ((ITË=
DMA_IT_FEIF1
) || \

497 ((
IT
Ë=
DMA_IT_TCIF2
Ë|| ((ITË=
DMA_IT_HTIF2
) || \

498 ((
IT
Ë=
DMA_IT_TEIF2
Ë|| ((ITË=
DMA_IT_DMEIF2
) || \

499 ((
IT
Ë=
DMA_IT_FEIF2
Ë|| ((ITË=
DMA_IT_TCIF3
) || \

500 ((
IT
Ë=
DMA_IT_HTIF3
Ë|| ((ITË=
DMA_IT_TEIF3
) || \

501 ((
IT
Ë=
DMA_IT_DMEIF3
)|| ((ITË=
DMA_IT_FEIF3
) || \

502 ((
IT
Ë=
DMA_IT_TCIF4
Ë|| ((ITË=
DMA_IT_HTIF4
) || \

503 ((
IT
Ë=
DMA_IT_TEIF4
Ë|| ((ITË=
DMA_IT_DMEIF4
) || \

504 ((
IT
Ë=
DMA_IT_FEIF4
Ë|| ((ITË=
DMA_IT_TCIF5
) || \

505 ((
IT
Ë=
DMA_IT_HTIF5
Ë|| ((ITË=
DMA_IT_TEIF5
) || \

506 ((
IT
Ë=
DMA_IT_DMEIF5
)|| ((ITË=
DMA_IT_FEIF5
) || \

507 ((
IT
Ë=
DMA_IT_TCIF6
Ë|| ((ITË=
DMA_IT_HTIF6
) || \

508 ((
IT
Ë=
DMA_IT_TEIF6
Ë|| ((ITË=
DMA_IT_DMEIF6
) || \

509 ((
IT
Ë=
DMA_IT_FEIF6
Ë|| ((ITË=
DMA_IT_TCIF7
) || \

510 ((
IT
Ë=
DMA_IT_HTIF7
Ë|| ((ITË=
DMA_IT_TEIF7
) || \

511 ((
IT
Ë=
DMA_IT_DMEIF7
)|| ((ITË=
DMA_IT_FEIF7
))

520 
	#DMA_PINCOS_Psize
 ((
uöt32_t
)0x00000000)

	)

521 
	#DMA_PINCOS_W‹dAlig√d
 ((
uöt32_t
)0x00008000)

	)

523 
	#IS_DMA_PINCOS_SIZE
(
SIZE
Ë(((SIZEË=
DMA_PINCOS_Psize
Ë|| \

	)

524 ((
SIZE
Ë=
DMA_PINCOS_W‹dAlig√d
))

533 
	#DMA_FlowCål_Mem‹y
 ((
uöt32_t
)0x00000000)

	)

534 
	#DMA_FlowCål_PîùhîÆ
 ((
uöt32_t
)0x00000020)

	)

536 
	#IS_DMA_FLOW_CTRL
(
CTRL
Ë(((CTRLË=
DMA_FlowCål_Mem‹y
Ë|| \

	)

537 ((
CTRL
Ë=
DMA_FlowCål_PîùhîÆ
))

546 
	#DMA_Mem‹y_0
 ((
uöt32_t
)0x00000000)

	)

547 
	#DMA_Mem‹y_1
 ((
uöt32_t
)0x00080000)

	)

549 
	#IS_DMA_CURRENT_MEM
(
MEM
Ë(((MEMË=
DMA_Mem‹y_0
Ë|| ((MEMË=
DMA_Mem‹y_1
))

	)

562 
DMA_DeInô
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
);

565 
DMA_Inô
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
DMA_InôTy≥Def
* 
DMA_InôSåu˘
);

566 
DMA_Såu˘Inô
(
DMA_InôTy≥Def
* 
DMA_InôSåu˘
);

567 
DMA_Cmd
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

570 
DMA_PîùhIncOff£tSizeC⁄fig
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
uöt32_t
 
DMA_Pöcos
);

571 
DMA_FlowC⁄åﬁÀrC⁄fig
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
uöt32_t
 
DMA_FlowCål
);

574 
DMA_SëCuºD©aCou¡î
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
uöt16_t
 
Cou¡î
);

575 
uöt16_t
 
DMA_GëCuºD©aCou¡î
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
);

578 
DMA_DoubÀBuf„rModeC⁄fig
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
uöt32_t
 
Mem‹y1Ba£Addr
,

579 
uöt32_t
 
DMA_CuºítMem‹y
);

580 
DMA_DoubÀBuf„rModeCmd
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

581 
DMA_Mem‹yT¨gëC⁄fig
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
uöt32_t
 
Mem‹yBa£Addr
,

582 
uöt32_t
 
DMA_Mem‹yT¨gë
);

583 
uöt32_t
 
DMA_GëCuºítMem‹yT¨gë
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
);

586 
Fun˘i⁄ÆSèã
 
DMA_GëCmdSètus
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
);

587 
uöt32_t
 
DMA_GëFIFOSètus
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
);

588 
FœgSètus
 
DMA_GëFœgSètus
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
uöt32_t
 
DMA_FLAG
);

589 
DMA_CÀ¨Fœg
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
uöt32_t
 
DMA_FLAG
);

590 
DMA_ITC⁄fig
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
uöt32_t
 
DMA_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

591 
ITSètus
 
DMA_GëITSètus
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
uöt32_t
 
DMA_IT
);

592 
DMA_CÀ¨ITPídögBô
(
DMA_Såóm_Ty≥Def
* 
DMAy_Såómx
, 
uöt32_t
 
DMA_IT
);

594 #ifde‡
__˝lu•lus


	@stm32f4xx_dma2d.h

30 #i‚de‡
__STM32F4xx_DMA2D_H


31 
	#__STM32F4xx_DMA2D_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

56 
uöt32_t
 
DMA2D_Mode
;

59 
uöt32_t
 
DMA2D_CMode
;

62 
uöt32_t
 
DMA2D_OuçutBlue
;

70 
uöt32_t
 
DMA2D_OuçutGªí
;

78 
uöt32_t
 
DMA2D_OuçutRed
;

86 
uöt32_t
 
DMA2D_OuçutAÕha
;

92 
uöt32_t
 
DMA2D_OuçutMem‹yAdd
;

95 
uöt32_t
 
DMA2D_OuçutOff£t
;

98 
uöt32_t
 
DMA2D_NumbîOfLöe
;

101 
uöt32_t
 
DMA2D_PixñPîLöe
;

103 } 
	tDMA2D_InôTy≥Def
;

109 
uöt32_t
 
DMA2D_FGMA
;

112 
uöt32_t
 
DMA2D_FGO
;

115 
uöt32_t
 
DMA2D_FGCM
;

118 
uöt32_t
 
DMA2D_FG_CLUT_CM
;

121 
uöt32_t
 
DMA2D_FG_CLUT_SIZE
;

124 
uöt32_t
 
DMA2D_FGPFC_ALPHA_MODE
;

127 
uöt32_t
 
DMA2D_FGPFC_ALPHA_VALUE
;

130 
uöt32_t
 
DMA2D_FGC_BLUE
;

133 
uöt32_t
 
DMA2D_FGC_GREEN
;

136 
uöt32_t
 
DMA2D_FGC_RED
;

139 
uöt32_t
 
DMA2D_FGCMAR
;

141 } 
	tDMA2D_FG_InôTy≥Def
;

146 
uöt32_t
 
DMA2D_BGMA
;

149 
uöt32_t
 
DMA2D_BGO
;

152 
uöt32_t
 
DMA2D_BGCM
;

155 
uöt32_t
 
DMA2D_BG_CLUT_CM
;

158 
uöt32_t
 
DMA2D_BG_CLUT_SIZE
;

161 
uöt32_t
 
DMA2D_BGPFC_ALPHA_MODE
;

164 
uöt32_t
 
DMA2D_BGPFC_ALPHA_VALUE
;

167 
uöt32_t
 
DMA2D_BGC_BLUE
;

170 
uöt32_t
 
DMA2D_BGC_GREEN
;

173 
uöt32_t
 
DMA2D_BGC_RED
;

176 
uöt32_t
 
DMA2D_BGCMAR
;

178 } 
	tDMA2D_BG_InôTy≥Def
;

193 
	#DMA2D_M2M
 ((
uöt32_t
)0x00000000)

	)

194 
	#DMA2D_M2M_PFC
 ((
uöt32_t
)0x00010000)

	)

195 
	#DMA2D_M2M_BLEND
 ((
uöt32_t
)0x00020000)

	)

196 
	#DMA2D_R2M
 ((
uöt32_t
)0x00030000)

	)

198 
	#IS_DMA2D_MODE
(
MODE
Ë(((MODEË=
DMA2D_M2M
Ë|| ((MODEË=
DMA2D_M2M_PFC
Ë|| \

	)

199 ((
MODE
Ë=
DMA2D_M2M_BLEND
Ë|| ((MODEË=
DMA2D_R2M
))

209 
	#DMA2D_ARGB8888
 ((
uöt32_t
)0x00000000)

	)

210 
	#DMA2D_RGB888
 ((
uöt32_t
)0x00000001)

	)

211 
	#DMA2D_RGB565
 ((
uöt32_t
)0x00000002)

	)

212 
	#DMA2D_ARGB1555
 ((
uöt32_t
)0x00000003)

	)

213 
	#DMA2D_ARGB4444
 ((
uöt32_t
)0x00000004)

	)

215 
	#IS_DMA2D_CMODE
(
MODE_ARGB
Ë(((MODE_ARGBË=
DMA2D_ARGB8888
Ë|| ((MODE_ARGBË=
DMA2D_RGB888
Ë|| \

	)

216 ((
MODE_ARGB
Ë=
DMA2D_RGB565
Ë|| ((MODE_ARGBË=
DMA2D_ARGB1555
) || \

217 ((
MODE_ARGB
Ë=
DMA2D_ARGB4444
))

227 
	#DMA2D_Ouçut_Cﬁ‹
 ((
uöt32_t
)0x000000FF)

	)

229 
	#IS_DMA2D_OGREEN
(
OGREEN
Ë((OGREENË<
DMA2D_Ouçut_Cﬁ‹
)

	)

230 
	#IS_DMA2D_ORED
(
ORED
Ë((OREDË<
DMA2D_Ouçut_Cﬁ‹
)

	)

231 
	#IS_DMA2D_OBLUE
(
OBLUE
Ë((OBLUEË<
DMA2D_Ouçut_Cﬁ‹
)

	)

232 
	#IS_DMA2D_OALPHA
(
OALPHA
Ë((OALPHAË<
DMA2D_Ouçut_Cﬁ‹
)

	)

241 
	#DMA2D_OUTPUT_OFFSET
 ((
uöt32_t
)0x00003FFF)

	)

243 
	#IS_DMA2D_OUTPUT_OFFSET
(
OOFFSET
Ë((OOFFSETË<
DMA2D_OUTPUT_OFFSET
)

	)

254 
	#DMA2D_pixñ
 ((
uöt32_t
)0x00003FFF)

	)

255 
	#DMA2D_Löe
 ((
uöt32_t
)0x0000FFFF)

	)

257 
	#IS_DMA2D_LINE
(
LINE
Ë((LINEË<
DMA2D_Löe
)

	)

258 
	#IS_DMA2D_PIXEL
(
PIXEL
Ë((PIXELË<
DMA2D_pixñ
)

	)

268 
	#OFFSET
 ((
uöt32_t
)0x00003FFF)

	)

270 
	#IS_DMA2D_FGO
(
FGO
Ë((FGOË<
OFFSET
)

	)

272 
	#IS_DMA2D_BGO
(
BGO
Ë((BGOË<
OFFSET
)

	)

283 
	#CM_ARGB8888
 ((
uöt32_t
)0x00000000)

	)

284 
	#CM_RGB888
 ((
uöt32_t
)0x00000001)

	)

285 
	#CM_RGB565
 ((
uöt32_t
)0x00000002)

	)

286 
	#CM_ARGB1555
 ((
uöt32_t
)0x00000003)

	)

287 
	#CM_ARGB4444
 ((
uöt32_t
)0x00000004)

	)

288 
	#CM_L8
 ((
uöt32_t
)0x00000005)

	)

289 
	#CM_AL44
 ((
uöt32_t
)0x00000006)

	)

290 
	#CM_AL88
 ((
uöt32_t
)0x00000007)

	)

291 
	#CM_L4
 ((
uöt32_t
)0x00000008)

	)

292 
	#CM_A8
 ((
uöt32_t
)0x00000009)

	)

293 
	#CM_A4
 ((
uöt32_t
)0x0000000A)

	)

295 
	#IS_DMA2D_FGCM
(
FGCM
Ë(((FGCMË=
CM_ARGB8888
Ë|| ((FGCMË=
CM_RGB888
Ë|| \

	)

296 ((
FGCM
Ë=
CM_RGB565
Ë|| ((FGCMË=
CM_ARGB1555
) || \

297 ((
FGCM
Ë=
CM_ARGB4444
Ë|| ((FGCMË=
CM_L8
) || \

298 ((
FGCM
Ë=
CM_AL44
Ë|| ((FGCMË=
CM_AL88
) || \

299 ((
FGCM
Ë=
CM_L4
Ë|| ((FGCMË=
CM_A8
) || \

300 ((
FGCM
Ë=
CM_A4
))

302 
	#IS_DMA2D_BGCM
(
BGCM
Ë(((BGCMË=
CM_ARGB8888
Ë|| ((BGCMË=
CM_RGB888
Ë|| \

	)

303 ((
BGCM
Ë=
CM_RGB565
Ë|| ((BGCMË=
CM_ARGB1555
) || \

304 ((
BGCM
Ë=
CM_ARGB4444
Ë|| ((BGCMË=
CM_L8
) || \

305 ((
BGCM
Ë=
CM_AL44
Ë|| ((BGCMË=
CM_AL88
) || \

306 ((
BGCM
Ë=
CM_L4
Ë|| ((BGCMË=
CM_A8
) || \

307 ((
BGCM
Ë=
CM_A4
))

317 
	#CLUT_CM_ARGB8888
 ((
uöt32_t
)0x00000000)

	)

318 
	#CLUT_CM_RGB888
 ((
uöt32_t
)0x00000001)

	)

320 
	#IS_DMA2D_FG_CLUT_CM
(
FG_CLUT_CM
Ë(((FG_CLUT_CMË=
CLUT_CM_ARGB8888
Ë|| ((FG_CLUT_CMË=
CLUT_CM_RGB888
))

	)

322 
	#IS_DMA2D_BG_CLUT_CM
(
BG_CLUT_CM
Ë(((BG_CLUT_CMË=
CLUT_CM_ARGB8888
Ë|| ((BG_CLUT_CMË=
CLUT_CM_RGB888
))

	)

332 
	#COLOR_VALUE
 ((
uöt32_t
)0x000000FF)

	)

334 
	#IS_DMA2D_FG_CLUT_SIZE
(
FG_CLUT_SIZE
Ë((FG_CLUT_SIZEË<
COLOR_VALUE
)

	)

336 
	#IS_DMA2D_FG_ALPHA_VALUE
(
FG_ALPHA_VALUE
Ë((FG_ALPHA_VALUEË<
COLOR_VALUE
)

	)

337 
	#IS_DMA2D_FGC_BLUE
(
FGC_BLUE
Ë((FGC_BLUEË<
COLOR_VALUE
)

	)

338 
	#IS_DMA2D_FGC_GREEN
(
FGC_GREEN
Ë((FGC_GREENË<
COLOR_VALUE
)

	)

339 
	#IS_DMA2D_FGC_RED
(
FGC_RED
Ë((FGC_REDË<
COLOR_VALUE
)

	)

341 
	#IS_DMA2D_BG_CLUT_SIZE
(
BG_CLUT_SIZE
Ë((BG_CLUT_SIZEË<
COLOR_VALUE
)

	)

343 
	#IS_DMA2D_BG_ALPHA_VALUE
(
BG_ALPHA_VALUE
Ë((BG_ALPHA_VALUEË<
COLOR_VALUE
)

	)

344 
	#IS_DMA2D_BGC_BLUE
(
BGC_BLUE
Ë((BGC_BLUEË<
COLOR_VALUE
)

	)

345 
	#IS_DMA2D_BGC_GREEN
(
BGC_GREEN
Ë((BGC_GREENË<
COLOR_VALUE
)

	)

346 
	#IS_DMA2D_BGC_RED
(
BGC_RED
Ë((BGC_REDË<
COLOR_VALUE
)

	)

356 
	#NO_MODIF_ALPHA_VALUE
 ((
uöt32_t
)0x00000000)

	)

357 
	#REPLACE_ALPHA_VALUE
 ((
uöt32_t
)0x00000001)

	)

358 
	#COMBINE_ALPHA_VALUE
 ((
uöt32_t
)0x00000002)

	)

360 
	#IS_DMA2D_FG_ALPHA_MODE
(
FG_ALPHA_MODE
Ë(((FG_ALPHA_MODEË=
NO_MODIF_ALPHA_VALUE
Ë|| \

	)

361 ((
FG_ALPHA_MODE
Ë=
REPLACE_ALPHA_VALUE
) || \

362 ((
FG_ALPHA_MODE
Ë=
COMBINE_ALPHA_VALUE
))

364 
	#IS_DMA2D_BG_ALPHA_MODE
(
BG_ALPHA_MODE
Ë(((BG_ALPHA_MODEË=
NO_MODIF_ALPHA_VALUE
Ë|| \

	)

365 ((
BG_ALPHA_MODE
Ë=
REPLACE_ALPHA_VALUE
) || \

366 ((
BG_ALPHA_MODE
Ë=
COMBINE_ALPHA_VALUE
))

376 
	#DMA2D_IT_CE
 
DMA2D_CR_CEIE


	)

377 
	#DMA2D_IT_CTC
 
DMA2D_CR_CTCIE


	)

378 
	#DMA2D_IT_CAE
 
DMA2D_CR_CAEIE


	)

379 
	#DMA2D_IT_TW
 
DMA2D_CR_TWIE


	)

380 
	#DMA2D_IT_TC
 
DMA2D_CR_TCIE


	)

381 
	#DMA2D_IT_TE
 
DMA2D_CR_TEIE


	)

383 
	#IS_DMA2D_IT
(
IT
Ë(((ITË=
DMA2D_IT_CTC
Ë|| ((ITË=
DMA2D_IT_CAE
Ë|| \

	)

384 ((
IT
Ë=
DMA2D_IT_TW
Ë|| ((ITË=
DMA2D_IT_TC
) || \

385 ((
IT
Ë=
DMA2D_IT_TE
Ë|| ((ITË=
DMA2D_IT_CE
))

395 
	#DMA2D_FLAG_CE
 
DMA2D_ISR_CEIF


	)

396 
	#DMA2D_FLAG_CTC
 
DMA2D_ISR_CTCIF


	)

397 
	#DMA2D_FLAG_CAE
 
DMA2D_ISR_CAEIF


	)

398 
	#DMA2D_FLAG_TW
 
DMA2D_ISR_TWIF


	)

399 
	#DMA2D_FLAG_TC
 
DMA2D_ISR_TCIF


	)

400 
	#DMA2D_FLAG_TE
 
DMA2D_ISR_TEIF


	)

403 
	#IS_DMA2D_GET_FLAG
(
FLAG
Ë(((FLAGË=
DMA2D_FLAG_CTC
Ë|| ((FLAGË=
DMA2D_FLAG_CAE
Ë|| \

	)

404 ((
FLAG
Ë=
DMA2D_FLAG_TW
Ë|| ((FLAGË=
DMA2D_FLAG_TC
) || \

405 ((
FLAG
Ë=
DMA2D_FLAG_TE
Ë|| ((FLAGË=
DMA2D_FLAG_CE
))

416 
	#DEADTIME
 ((
uöt32_t
)0x000000FF)

	)

418 
	#IS_DMA2D_DEAD_TIME
(
DEAD_TIME
Ë((DEAD_TIMEË<
DEADTIME
)

	)

421 
	#LINE_WATERMARK
 
DMA2D_LWR_LW


	)

423 
	#IS_DMA2D_LöeW©îm¨k
(
LöeW©îm¨k
Ë((LöeW©îm¨kË<
LINE_WATERMARK
)

	)

437 
DMA2D_DeInô
();

440 
DMA2D_Inô
(
DMA2D_InôTy≥Def
* 
DMA2D_InôSåu˘
);

441 
DMA2D_Såu˘Inô
(
DMA2D_InôTy≥Def
* 
DMA2D_InôSåu˘
);

442 
DMA2D_SèπTøns„r
();

443 
DMA2D_Ab‹tTøns„r
();

444 
DMA2D_Su•íd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

445 
DMA2D_FGC⁄fig
(
DMA2D_FG_InôTy≥Def
* 
DMA2D_FG_InôSåu˘
);

446 
DMA2D_FG_Såu˘Inô
(
DMA2D_FG_InôTy≥Def
* 
DMA2D_FG_InôSåu˘
);

447 
DMA2D_BGC⁄fig
(
DMA2D_BG_InôTy≥Def
* 
DMA2D_BG_InôSåu˘
);

448 
DMA2D_BG_Såu˘Inô
(
DMA2D_BG_InôTy≥Def
* 
DMA2D_BG_InôSåu˘
);

449 
DMA2D_FGSèπ
(
Fun˘i⁄ÆSèã
 
NewSèã
);

450 
DMA2D_BGSèπ
(
Fun˘i⁄ÆSèã
 
NewSèã
);

451 
DMA2D_DódTimeC⁄fig
(
uöt32_t
 
DMA2D_DódTime
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

452 
DMA2D_LöeW©îm¨kC⁄fig
(
uöt32_t
 
DMA2D_LW©îm¨kC⁄fig
);

455 
DMA2D_ITC⁄fig
(
uöt32_t
 
DMA2D_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

456 
FœgSètus
 
DMA2D_GëFœgSètus
(
uöt32_t
 
DMA2D_FLAG
);

457 
DMA2D_CÀ¨Fœg
(
uöt32_t
 
DMA2D_FLAG
);

458 
ITSètus
 
DMA2D_GëITSètus
(
uöt32_t
 
DMA2D_IT
);

459 
DMA2D_CÀ¨ITPídögBô
(
uöt32_t
 
DMA2D_IT
);

461 #ifde‡
__˝lu•lus


	@stm32f4xx_exti.h

30 #i‚de‡
__STM32F4xx_EXTI_H


31 
	#__STM32F4xx_EXTI_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

56 
EXTI_Mode_I¡îru±
 = 0x00,

57 
EXTI_Mode_Evít
 = 0x04

58 }
	tEXTIMode_Ty≥Def
;

60 
	#IS_EXTI_MODE
(
MODE
Ë(((MODEË=
EXTI_Mode_I¡îru±
Ë|| ((MODEË=
EXTI_Mode_Evít
))

	)

68 
EXTI_Triggî_Risög
 = 0x08,

69 
EXTI_Triggî_FÆlög
 = 0x0C,

70 
EXTI_Triggî_Risög_FÆlög
 = 0x10

71 }
	tEXTITriggî_Ty≥Def
;

73 
	#IS_EXTI_TRIGGER
(
TRIGGER
Ë(((TRIGGERË=
EXTI_Triggî_Risög
Ë|| \

	)

74 ((
TRIGGER
Ë=
EXTI_Triggî_FÆlög
) || \

75 ((
TRIGGER
Ë=
EXTI_Triggî_Risög_FÆlög
))

82 
uöt32_t
 
EXTI_Löe
;

85 
EXTIMode_Ty≥Def
 
EXTI_Mode
;

88 
EXTITriggî_Ty≥Def
 
EXTI_Triggî
;

91 
Fun˘i⁄ÆSèã
 
EXTI_LöeCmd
;

93 }
	tEXTI_InôTy≥Def
;

105 
	#EXTI_Löe0
 ((
uöt32_t
)0x00001Ë

	)

106 
	#EXTI_Löe1
 ((
uöt32_t
)0x00002Ë

	)

107 
	#EXTI_Löe2
 ((
uöt32_t
)0x00004Ë

	)

108 
	#EXTI_Löe3
 ((
uöt32_t
)0x00008Ë

	)

109 
	#EXTI_Löe4
 ((
uöt32_t
)0x00010Ë

	)

110 
	#EXTI_Löe5
 ((
uöt32_t
)0x00020Ë

	)

111 
	#EXTI_Löe6
 ((
uöt32_t
)0x00040Ë

	)

112 
	#EXTI_Löe7
 ((
uöt32_t
)0x00080Ë

	)

113 
	#EXTI_Löe8
 ((
uöt32_t
)0x00100Ë

	)

114 
	#EXTI_Löe9
 ((
uöt32_t
)0x00200Ë

	)

115 
	#EXTI_Löe10
 ((
uöt32_t
)0x00400Ë

	)

116 
	#EXTI_Löe11
 ((
uöt32_t
)0x00800Ë

	)

117 
	#EXTI_Löe12
 ((
uöt32_t
)0x01000Ë

	)

118 
	#EXTI_Löe13
 ((
uöt32_t
)0x02000Ë

	)

119 
	#EXTI_Löe14
 ((
uöt32_t
)0x04000Ë

	)

120 
	#EXTI_Löe15
 ((
uöt32_t
)0x08000Ë

	)

121 
	#EXTI_Löe16
 ((
uöt32_t
)0x10000Ë

	)

122 
	#EXTI_Löe17
 ((
uöt32_t
)0x20000Ë

	)

123 
	#EXTI_Löe18
 ((
uöt32_t
)0x40000Ë

	)

124 
	#EXTI_Löe19
 ((
uöt32_t
)0x80000Ë

	)

125 
	#EXTI_Löe20
 ((
uöt32_t
)0x00100000Ë

	)

126 
	#EXTI_Löe21
 ((
uöt32_t
)0x00200000Ë

	)

127 
	#EXTI_Löe22
 ((
uöt32_t
)0x00400000Ë

	)

129 
	#IS_EXTI_LINE
(
LINE
Ë((((LINEË& (
uöt32_t
)0xFF800000Ë=0x00Ë&& ((LINEË!(
uöt16_t
)0x00))

	)

131 
	#IS_GET_EXTI_LINE
(
LINE
Ë(((LINEË=
EXTI_Löe0
Ë|| ((LINEË=
EXTI_Löe1
Ë|| \

	)

132 ((
LINE
Ë=
EXTI_Löe2
Ë|| ((LINEË=
EXTI_Löe3
) || \

133 ((
LINE
Ë=
EXTI_Löe4
Ë|| ((LINEË=
EXTI_Löe5
) || \

134 ((
LINE
Ë=
EXTI_Löe6
Ë|| ((LINEË=
EXTI_Löe7
) || \

135 ((
LINE
Ë=
EXTI_Löe8
Ë|| ((LINEË=
EXTI_Löe9
) || \

136 ((
LINE
Ë=
EXTI_Löe10
Ë|| ((LINEË=
EXTI_Löe11
) || \

137 ((
LINE
Ë=
EXTI_Löe12
Ë|| ((LINEË=
EXTI_Löe13
) || \

138 ((
LINE
Ë=
EXTI_Löe14
Ë|| ((LINEË=
EXTI_Löe15
) || \

139 ((
LINE
Ë=
EXTI_Löe16
Ë|| ((LINEË=
EXTI_Löe17
) || \

140 ((
LINE
Ë=
EXTI_Löe18
Ë|| ((LINEË=
EXTI_Löe19
) || \

141 ((
LINE
Ë=
EXTI_Löe20
Ë|| ((LINEË=
EXTI_Löe21
) ||\

142 ((
LINE
Ë=
EXTI_Löe22
))

156 
EXTI_DeInô
();

159 
EXTI_Inô
(
EXTI_InôTy≥Def
* 
EXTI_InôSåu˘
);

160 
EXTI_Såu˘Inô
(
EXTI_InôTy≥Def
* 
EXTI_InôSåu˘
);

161 
EXTI_Gíî©eSWI¡îru±
(
uöt32_t
 
EXTI_Löe
);

164 
FœgSètus
 
EXTI_GëFœgSètus
(
uöt32_t
 
EXTI_Löe
);

165 
EXTI_CÀ¨Fœg
(
uöt32_t
 
EXTI_Löe
);

166 
ITSètus
 
EXTI_GëITSètus
(
uöt32_t
 
EXTI_Löe
);

167 
EXTI_CÀ¨ITPídögBô
(
uöt32_t
 
EXTI_Löe
);

169 #ifde‡
__˝lu•lus


	@stm32f4xx_flash.h

30 #i‚de‡
__STM32F4xx_FLASH_H


31 
	#__STM32F4xx_FLASH_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

54 
FLASH_BUSY
 = 1,

55 
FLASH_ERROR_RD
,

56 
FLASH_ERROR_PGS
,

57 
FLASH_ERROR_PGP
,

58 
FLASH_ERROR_PGA
,

59 
FLASH_ERROR_WRP
,

60 
FLASH_ERROR_PROGRAM
,

61 
FLASH_ERROR_OPERATION
,

62 
FLASH_COMPLETE


63 }
	tFLASH_Sètus
;

74 
	#FLASH_L©ícy_0
 ((
uöt8_t
)0x0000Ë

	)

75 
	#FLASH_L©ícy_1
 ((
uöt8_t
)0x0001Ë

	)

76 
	#FLASH_L©ícy_2
 ((
uöt8_t
)0x0002Ë

	)

77 
	#FLASH_L©ícy_3
 ((
uöt8_t
)0x0003Ë

	)

78 
	#FLASH_L©ícy_4
 ((
uöt8_t
)0x0004Ë

	)

79 
	#FLASH_L©ícy_5
 ((
uöt8_t
)0x0005Ë

	)

80 
	#FLASH_L©ícy_6
 ((
uöt8_t
)0x0006Ë

	)

81 
	#FLASH_L©ícy_7
 ((
uöt8_t
)0x0007Ë

	)

82 
	#FLASH_L©ícy_8
 ((
uöt8_t
)0x0008Ë

	)

83 
	#FLASH_L©ícy_9
 ((
uöt8_t
)0x0009Ë

	)

84 
	#FLASH_L©ícy_10
 ((
uöt8_t
)0x000AË

	)

85 
	#FLASH_L©ícy_11
 ((
uöt8_t
)0x000BË

	)

86 
	#FLASH_L©ícy_12
 ((
uöt8_t
)0x000CË

	)

87 
	#FLASH_L©ícy_13
 ((
uöt8_t
)0x000DË

	)

88 
	#FLASH_L©ícy_14
 ((
uöt8_t
)0x000EË

	)

89 
	#FLASH_L©ícy_15
 ((
uöt8_t
)0x000FË

	)

92 
	#IS_FLASH_LATENCY
(
LATENCY
Ë(((LATENCYË=
FLASH_L©ícy_0
Ë|| \

	)

93 ((
LATENCY
Ë=
FLASH_L©ícy_1
) || \

94 ((
LATENCY
Ë=
FLASH_L©ícy_2
) || \

95 ((
LATENCY
Ë=
FLASH_L©ícy_3
) || \

96 ((
LATENCY
Ë=
FLASH_L©ícy_4
) || \

97 ((
LATENCY
Ë=
FLASH_L©ícy_5
) || \

98 ((
LATENCY
Ë=
FLASH_L©ícy_6
) || \

99 ((
LATENCY
Ë=
FLASH_L©ícy_7
) || \

100 ((
LATENCY
Ë=
FLASH_L©ícy_8
) || \

101 ((
LATENCY
Ë=
FLASH_L©ícy_9
) || \

102 ((
LATENCY
Ë=
FLASH_L©ícy_10
) || \

103 ((
LATENCY
Ë=
FLASH_L©ícy_11
) || \

104 ((
LATENCY
Ë=
FLASH_L©ícy_12
) || \

105 ((
LATENCY
Ë=
FLASH_L©ícy_13
) || \

106 ((
LATENCY
Ë=
FLASH_L©ícy_14
) || \

107 ((
LATENCY
Ë=
FLASH_L©ícy_15
))

115 
	#VﬁègeR™ge_1
 ((
uöt8_t
)0x00Ë

	)

116 
	#VﬁègeR™ge_2
 ((
uöt8_t
)0x01Ë

	)

117 
	#VﬁègeR™ge_3
 ((
uöt8_t
)0x02Ë

	)

118 
	#VﬁègeR™ge_4
 ((
uöt8_t
)0x03Ë

	)

120 
	#IS_VOLTAGERANGE
(
RANGE
)(((RANGEË=
VﬁègeR™ge_1
Ë|| \

	)

121 ((
RANGE
Ë=
VﬁègeR™ge_2
) || \

122 ((
RANGE
Ë=
VﬁègeR™ge_3
) || \

123 ((
RANGE
Ë=
VﬁègeR™ge_4
))

131 
	#FLASH_Se˘‹_0
 ((
uöt16_t
)0x0000Ë

	)

132 
	#FLASH_Se˘‹_1
 ((
uöt16_t
)0x0008Ë

	)

133 
	#FLASH_Se˘‹_2
 ((
uöt16_t
)0x0010Ë

	)

134 
	#FLASH_Se˘‹_3
 ((
uöt16_t
)0x0018Ë

	)

135 
	#FLASH_Se˘‹_4
 ((
uöt16_t
)0x0020Ë

	)

136 
	#FLASH_Se˘‹_5
 ((
uöt16_t
)0x0028Ë

	)

137 
	#FLASH_Se˘‹_6
 ((
uöt16_t
)0x0030Ë

	)

138 
	#FLASH_Se˘‹_7
 ((
uöt16_t
)0x0038Ë

	)

139 
	#FLASH_Se˘‹_8
 ((
uöt16_t
)0x0040Ë

	)

140 
	#FLASH_Se˘‹_9
 ((
uöt16_t
)0x0048Ë

	)

141 
	#FLASH_Se˘‹_10
 ((
uöt16_t
)0x0050Ë

	)

142 
	#FLASH_Se˘‹_11
 ((
uöt16_t
)0x0058Ë

	)

143 
	#FLASH_Se˘‹_12
 ((
uöt16_t
)0x0080Ë

	)

144 
	#FLASH_Se˘‹_13
 ((
uöt16_t
)0x0088Ë

	)

145 
	#FLASH_Se˘‹_14
 ((
uöt16_t
)0x0090Ë

	)

146 
	#FLASH_Se˘‹_15
 ((
uöt16_t
)0x0098Ë

	)

147 
	#FLASH_Se˘‹_16
 ((
uöt16_t
)0x00A0Ë

	)

148 
	#FLASH_Se˘‹_17
 ((
uöt16_t
)0x00A8Ë

	)

149 
	#FLASH_Se˘‹_18
 ((
uöt16_t
)0x00B0Ë

	)

150 
	#FLASH_Se˘‹_19
 ((
uöt16_t
)0x00B8Ë

	)

151 
	#FLASH_Se˘‹_20
 ((
uöt16_t
)0x00C0Ë

	)

152 
	#FLASH_Se˘‹_21
 ((
uöt16_t
)0x00C8Ë

	)

153 
	#FLASH_Se˘‹_22
 ((
uöt16_t
)0x00D0Ë

	)

154 
	#FLASH_Se˘‹_23
 ((
uöt16_t
)0x00D8Ë

	)

156 
	#IS_FLASH_SECTOR
(
SECTOR
Ë(((SECTORË=
FLASH_Se˘‹_0
Ë|| ((SECTORË=
FLASH_Se˘‹_1
Ë||\

	)

157 ((
SECTOR
Ë=
FLASH_Se˘‹_2
Ë|| ((SECTORË=
FLASH_Se˘‹_3
) ||\

158 ((
SECTOR
Ë=
FLASH_Se˘‹_4
Ë|| ((SECTORË=
FLASH_Se˘‹_5
) ||\

159 ((
SECTOR
Ë=
FLASH_Se˘‹_6
Ë|| ((SECTORË=
FLASH_Se˘‹_7
) ||\

160 ((
SECTOR
Ë=
FLASH_Se˘‹_8
Ë|| ((SECTORË=
FLASH_Se˘‹_9
) ||\

161 ((
SECTOR
Ë=
FLASH_Se˘‹_10
Ë|| ((SECTORË=
FLASH_Se˘‹_11
) ||\

162 ((
SECTOR
Ë=
FLASH_Se˘‹_12
Ë|| ((SECTORË=
FLASH_Se˘‹_13
) ||\

163 ((
SECTOR
Ë=
FLASH_Se˘‹_14
Ë|| ((SECTORË=
FLASH_Se˘‹_15
) ||\

164 ((
SECTOR
Ë=
FLASH_Se˘‹_16
Ë|| ((SECTORË=
FLASH_Se˘‹_17
) ||\

165 ((
SECTOR
Ë=
FLASH_Se˘‹_18
Ë|| ((SECTORË=
FLASH_Se˘‹_19
) ||\

166 ((
SECTOR
Ë=
FLASH_Se˘‹_20
Ë|| ((SECTORË=
FLASH_Se˘‹_21
) ||\

167 ((
SECTOR
Ë=
FLASH_Se˘‹_22
Ë|| ((SECTORË=
FLASH_Se˘‹_23
))

169 #i‡
deföed
 (
STM32F427_437xx
Ë|| deföed (
STM32F429_439xx
)

170 
	#IS_FLASH_ADDRESS
(
ADDRESS
Ë((((ADDRESSË>0x08000000Ë&& ((ADDRESSË<0x081FFFFF)Ë||\

	)

171 (((
ADDRESS
) >= 0x1FFF7800) && ((ADDRESS) <= 0x1FFF7A0F)))

174 #i‡
deföed
 (
STM32F40_41xxx
)

175 
	#IS_FLASH_ADDRESS
(
ADDRESS
Ë((((ADDRESSË>0x08000000Ë&& ((ADDRESSË<0x080FFFFF)Ë||\

	)

176 (((
ADDRESS
) >= 0x1FFF7800) && ((ADDRESS) <= 0x1FFF7A0F)))

179 #i‡
deföed
 (
STM32F401xx
)

180 
	#IS_FLASH_ADDRESS
(
ADDRESS
Ë((((ADDRESSË>0x08000000Ë&& ((ADDRESSË<0x0803FFFF)Ë||\

	)

181 (((
ADDRESS
) >= 0x1FFF7800) && ((ADDRESS) <= 0x1FFF7A0F)))

184 #i‡
deföed
 (
STM32F411xE
)

185 
	#IS_FLASH_ADDRESS
(
ADDRESS
Ë((((ADDRESSË>0x08000000Ë&& ((ADDRESSË<0x0807FFFF)Ë||\

	)

186 (((
ADDRESS
) >= 0x1FFF7800) && ((ADDRESS) <= 0x1FFF7A0F)))

196 
	#OB_WRP_Se˘‹_0
 ((
uöt32_t
)0x00000001Ë

	)

197 
	#OB_WRP_Se˘‹_1
 ((
uöt32_t
)0x00000002Ë

	)

198 
	#OB_WRP_Se˘‹_2
 ((
uöt32_t
)0x00000004Ë

	)

199 
	#OB_WRP_Se˘‹_3
 ((
uöt32_t
)0x00000008Ë

	)

200 
	#OB_WRP_Se˘‹_4
 ((
uöt32_t
)0x00000010Ë

	)

201 
	#OB_WRP_Se˘‹_5
 ((
uöt32_t
)0x00000020Ë

	)

202 
	#OB_WRP_Se˘‹_6
 ((
uöt32_t
)0x00000040Ë

	)

203 
	#OB_WRP_Se˘‹_7
 ((
uöt32_t
)0x00000080Ë

	)

204 
	#OB_WRP_Se˘‹_8
 ((
uöt32_t
)0x00000100Ë

	)

205 
	#OB_WRP_Se˘‹_9
 ((
uöt32_t
)0x00000200Ë

	)

206 
	#OB_WRP_Se˘‹_10
 ((
uöt32_t
)0x00000400Ë

	)

207 
	#OB_WRP_Se˘‹_11
 ((
uöt32_t
)0x00000800Ë

	)

208 
	#OB_WRP_Se˘‹_12
 ((
uöt32_t
)0x00000001Ë

	)

209 
	#OB_WRP_Se˘‹_13
 ((
uöt32_t
)0x00000002Ë

	)

210 
	#OB_WRP_Se˘‹_14
 ((
uöt32_t
)0x00000004Ë

	)

211 
	#OB_WRP_Se˘‹_15
 ((
uöt32_t
)0x00000008Ë

	)

212 
	#OB_WRP_Se˘‹_16
 ((
uöt32_t
)0x00000010Ë

	)

213 
	#OB_WRP_Se˘‹_17
 ((
uöt32_t
)0x00000020Ë

	)

214 
	#OB_WRP_Se˘‹_18
 ((
uöt32_t
)0x00000040Ë

	)

215 
	#OB_WRP_Se˘‹_19
 ((
uöt32_t
)0x00000080Ë

	)

216 
	#OB_WRP_Se˘‹_20
 ((
uöt32_t
)0x00000100Ë

	)

217 
	#OB_WRP_Se˘‹_21
 ((
uöt32_t
)0x00000200Ë

	)

218 
	#OB_WRP_Se˘‹_22
 ((
uöt32_t
)0x00000400Ë

	)

219 
	#OB_WRP_Se˘‹_23
 ((
uöt32_t
)0x00000800Ë

	)

220 
	#OB_WRP_Se˘‹_AŒ
 ((
uöt32_t
)0x00000FFFË

	)

222 
	#IS_OB_WRP
(
SECTOR
)((((SECTORË& (
uöt32_t
)0xFFFFF000Ë=0x00000000Ë&& ((SECTORË!0x00000000))

	)

230 
	#OB_PcROP_DißbÀ
 ((
uöt8_t
)0x00Ë

	)

231 
	#OB_PcROP_E«bÀ
 ((
uöt8_t
)0x80Ë

	)

232 
	#IS_OB_PCROP_SELECT
(
PCROP
Ë(((PCROPË=
OB_PcROP_DißbÀ
Ë|| ((PCROPË=
OB_PcROP_E«bÀ
))

	)

240 
	#OB_PCROP_Se˘‹_0
 ((
uöt32_t
)0x00000001Ë

	)

241 
	#OB_PCROP_Se˘‹_1
 ((
uöt32_t
)0x00000002Ë

	)

242 
	#OB_PCROP_Se˘‹_2
 ((
uöt32_t
)0x00000004Ë

	)

243 
	#OB_PCROP_Se˘‹_3
 ((
uöt32_t
)0x00000008Ë

	)

244 
	#OB_PCROP_Se˘‹_4
 ((
uöt32_t
)0x00000010Ë

	)

245 
	#OB_PCROP_Se˘‹_5
 ((
uöt32_t
)0x00000020Ë

	)

246 
	#OB_PCROP_Se˘‹_6
 ((
uöt32_t
)0x00000040Ë

	)

247 
	#OB_PCROP_Se˘‹_7
 ((
uöt32_t
)0x00000080Ë

	)

248 
	#OB_PCROP_Se˘‹_8
 ((
uöt32_t
)0x00000100Ë

	)

249 
	#OB_PCROP_Se˘‹_9
 ((
uöt32_t
)0x00000200Ë

	)

250 
	#OB_PCROP_Se˘‹_10
 ((
uöt32_t
)0x00000400Ë

	)

251 
	#OB_PCROP_Se˘‹_11
 ((
uöt32_t
)0x00000800Ë

	)

252 
	#OB_PCROP_Se˘‹_12
 ((
uöt32_t
)0x00000001Ë

	)

253 
	#OB_PCROP_Se˘‹_13
 ((
uöt32_t
)0x00000002Ë

	)

254 
	#OB_PCROP_Se˘‹_14
 ((
uöt32_t
)0x00000004Ë

	)

255 
	#OB_PCROP_Se˘‹_15
 ((
uöt32_t
)0x00000008Ë

	)

256 
	#OB_PCROP_Se˘‹_16
 ((
uöt32_t
)0x00000010Ë

	)

257 
	#OB_PCROP_Se˘‹_17
 ((
uöt32_t
)0x00000020Ë

	)

258 
	#OB_PCROP_Se˘‹_18
 ((
uöt32_t
)0x00000040Ë

	)

259 
	#OB_PCROP_Se˘‹_19
 ((
uöt32_t
)0x00000080Ë

	)

260 
	#OB_PCROP_Se˘‹_20
 ((
uöt32_t
)0x00000100Ë

	)

261 
	#OB_PCROP_Se˘‹_21
 ((
uöt32_t
)0x00000200Ë

	)

262 
	#OB_PCROP_Se˘‹_22
 ((
uöt32_t
)0x00000400Ë

	)

263 
	#OB_PCROP_Se˘‹_23
 ((
uöt32_t
)0x00000800Ë

	)

264 
	#OB_PCROP_Se˘‹_AŒ
 ((
uöt32_t
)0x00000FFFË

	)

266 
	#IS_OB_PCROP
(
SECTOR
)((((SECTORË& (
uöt32_t
)0xFFFFF000Ë=0x00000000Ë&& ((SECTORË!0x00000000))

	)

274 
	#OB_RDP_Levñ_0
 ((
uöt8_t
)0xAA)

	)

275 
	#OB_RDP_Levñ_1
 ((
uöt8_t
)0x55)

	)

278 
	#IS_OB_RDP
(
LEVEL
Ë(((LEVELË=
OB_RDP_Levñ_0
)||\

	)

279 ((
LEVEL
Ë=
OB_RDP_Levñ_1
))

288 
	#OB_IWDG_SW
 ((
uöt8_t
)0x20Ë

	)

289 
	#OB_IWDG_HW
 ((
uöt8_t
)0x00Ë

	)

290 
	#IS_OB_IWDG_SOURCE
(
SOURCE
Ë(((SOURCEË=
OB_IWDG_SW
Ë|| ((SOURCEË=
OB_IWDG_HW
))

	)

298 
	#OB_STOP_NoRST
 ((
uöt8_t
)0x40Ë

	)

299 
	#OB_STOP_RST
 ((
uöt8_t
)0x00Ë

	)

300 
	#IS_OB_STOP_SOURCE
(
SOURCE
Ë(((SOURCEË=
OB_STOP_NoRST
Ë|| ((SOURCEË=
OB_STOP_RST
))

	)

309 
	#OB_STDBY_NoRST
 ((
uöt8_t
)0x80Ë

	)

310 
	#OB_STDBY_RST
 ((
uöt8_t
)0x00Ë

	)

311 
	#IS_OB_STDBY_SOURCE
(
SOURCE
Ë(((SOURCEË=
OB_STDBY_NoRST
Ë|| ((SOURCEË=
OB_STDBY_RST
))

	)

319 
	#OB_BOR_LEVEL3
 ((
uöt8_t
)0x00Ë

	)

320 
	#OB_BOR_LEVEL2
 ((
uöt8_t
)0x04Ë

	)

321 
	#OB_BOR_LEVEL1
 ((
uöt8_t
)0x08Ë

	)

322 
	#OB_BOR_OFF
 ((
uöt8_t
)0x0CË

	)

323 
	#IS_OB_BOR
(
LEVEL
Ë(((LEVELË=
OB_BOR_LEVEL1
Ë|| ((LEVELË=
OB_BOR_LEVEL2
Ë||\

	)

324 ((
LEVEL
Ë=
OB_BOR_LEVEL3
Ë|| ((LEVELË=
OB_BOR_OFF
))

332 
	#OB_DuÆ_BoŸE«bÀd
 ((
uöt8_t
)0x10Ë

	)

333 
	#OB_DuÆ_BoŸDißbÀd
 ((
uöt8_t
)0x00Ë

	)

334 
	#IS_OB_BOOT
(
BOOT
Ë(((BOOTË=
OB_DuÆ_BoŸE«bÀd
Ë|| ((BOOTË=
OB_DuÆ_BoŸDißbÀd
))

	)

342 
	#FLASH_IT_EOP
 ((
uöt32_t
)0x01000000Ë

	)

343 
	#FLASH_IT_ERR
 ((
uöt32_t
)0x02000000Ë

	)

344 
	#IS_FLASH_IT
(
IT
Ë((((ITË& (
uöt32_t
)0xFCFFFFFFË=0x00000000Ë&& ((ITË!0x00000000))

	)

352 
	#FLASH_FLAG_EOP
 ((
uöt32_t
)0x00000001Ë

	)

353 
	#FLASH_FLAG_OPERR
 ((
uöt32_t
)0x00000002Ë

	)

354 
	#FLASH_FLAG_WRPERR
 ((
uöt32_t
)0x00000010Ë

	)

355 
	#FLASH_FLAG_PGAERR
 ((
uöt32_t
)0x00000020Ë

	)

356 
	#FLASH_FLAG_PGPERR
 ((
uöt32_t
)0x00000040Ë

	)

357 
	#FLASH_FLAG_PGSERR
 ((
uöt32_t
)0x00000080Ë

	)

358 
	#FLASH_FLAG_RDERR
 ((
uöt32_t
)0x00000100Ë

	)

359 
	#FLASH_FLAG_BSY
 ((
uöt32_t
)0x00010000Ë

	)

360 
	#IS_FLASH_CLEAR_FLAG
(
FLAG
Ë((((FLAGË& (
uöt32_t
)0xFFFFFE0CË=0x00000000Ë&& ((FLAGË!0x00000000))

	)

361 
	#IS_FLASH_GET_FLAG
(
FLAG
Ë(((FLAGË=
FLASH_FLAG_EOP
Ë|| ((FLAGË=
FLASH_FLAG_OPERR
Ë|| \

	)

362 ((
FLAG
Ë=
FLASH_FLAG_WRPERR
Ë|| ((FLAGË=
FLASH_FLAG_PGAERR
) || \

363 ((
FLAG
Ë=
FLASH_FLAG_PGPERR
Ë|| ((FLAGË=
FLASH_FLAG_PGSERR
) || \

364 ((
FLAG
Ë=
FLASH_FLAG_BSY
Ë|| ((FLAGË=
FLASH_FLAG_RDERR
))

372 
	#FLASH_PSIZE_BYTE
 ((
uöt32_t
)0x00000000)

	)

373 
	#FLASH_PSIZE_HALF_WORD
 ((
uöt32_t
)0x00000100)

	)

374 
	#FLASH_PSIZE_WORD
 ((
uöt32_t
)0x00000200)

	)

375 
	#FLASH_PSIZE_DOUBLE_WORD
 ((
uöt32_t
)0x00000300)

	)

376 
	#CR_PSIZE_MASK
 ((
uöt32_t
)0xFFFFFCFF)

	)

384 
	#RDP_KEY
 ((
uöt16_t
)0x00A5)

	)

385 
	#FLASH_KEY1
 ((
uöt32_t
)0x45670123)

	)

386 
	#FLASH_KEY2
 ((
uöt32_t
)0xCDEF89AB)

	)

387 
	#FLASH_OPT_KEY1
 ((
uöt32_t
)0x08192A3B)

	)

388 
	#FLASH_OPT_KEY2
 ((
uöt32_t
)0x4C5D6E7F)

	)

396 
	#ACR_BYTE0_ADDRESS
 ((
uöt32_t
)0x40023C00)

	)

400 
	#OPTCR_BYTE0_ADDRESS
 ((
uöt32_t
)0x40023C14)

	)

404 
	#OPTCR_BYTE1_ADDRESS
 ((
uöt32_t
)0x40023C15)

	)

408 
	#OPTCR_BYTE2_ADDRESS
 ((
uöt32_t
)0x40023C16)

	)

412 
	#OPTCR_BYTE3_ADDRESS
 ((
uöt32_t
)0x40023C17)

	)

417 
	#OPTCR1_BYTE2_ADDRESS
 ((
uöt32_t
)0x40023C1A)

	)

427 
FLASH_SëL©ícy
(
uöt32_t
 
FLASH_L©ícy
);

428 
FLASH_Pª„tchBuf„rCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

429 
FLASH_In°ru˘i⁄CacheCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

430 
FLASH_D©aCacheCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

431 
FLASH_In°ru˘i⁄CacheRe£t
();

432 
FLASH_D©aCacheRe£t
();

435 
FLASH_U∆ock
();

436 
FLASH_Lock
();

437 
FLASH_Sètus
 
FLASH_Eø£Se˘‹
(
uöt32_t
 
FLASH_Se˘‹
, 
uöt8_t
 
VﬁègeR™ge
);

438 
FLASH_Sètus
 
FLASH_Eø£AŒSe˘‹s
(
uöt8_t
 
VﬁègeR™ge
);

439 
FLASH_Sètus
 
FLASH_Eø£AŒB™k1Se˘‹s
(
uöt8_t
 
VﬁègeR™ge
);

440 
FLASH_Sètus
 
FLASH_Eø£AŒB™k2Se˘‹s
(
uöt8_t
 
VﬁègeR™ge
);

441 
FLASH_Sètus
 
FLASH_ProgømDoubÀW‹d
(
uöt32_t
 
Addªss
, 
uöt64_t
 
D©a
);

442 
FLASH_Sètus
 
FLASH_ProgømW‹d
(
uöt32_t
 
Addªss
, uöt32_à
D©a
);

443 
FLASH_Sètus
 
FLASH_ProgømHÆfW‹d
(
uöt32_t
 
Addªss
, 
uöt16_t
 
D©a
);

444 
FLASH_Sètus
 
FLASH_ProgømByã
(
uöt32_t
 
Addªss
, 
uöt8_t
 
D©a
);

447 
FLASH_OB_U∆ock
();

448 
FLASH_OB_Lock
();

449 
FLASH_OB_WRPC⁄fig
(
uöt32_t
 
OB_WRP
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

450 
FLASH_OB_WRP1C⁄fig
(
uöt32_t
 
OB_WRP
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

451 
FLASH_OB_PCROPSñe˘i⁄C⁄fig
(
uöt8_t
 
OB_PcROP
);

452 
FLASH_OB_PCROPC⁄fig
(
uöt32_t
 
OB_PCROP
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

453 
FLASH_OB_PCROP1C⁄fig
(
uöt32_t
 
OB_PCROP
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

454 
FLASH_OB_RDPC⁄fig
(
uöt8_t
 
OB_RDP
);

455 
FLASH_OB_U£rC⁄fig
(
uöt8_t
 
OB_IWDG
, uöt8_à
OB_STOP
, uöt8_à
OB_STDBY
);

456 
FLASH_OB_BORC⁄fig
(
uöt8_t
 
OB_BOR
);

457 
FLASH_OB_BoŸC⁄fig
(
uöt8_t
 
OB_BOOT
);

458 
FLASH_Sètus
 
FLASH_OB_Launch
();

459 
uöt8_t
 
FLASH_OB_GëU£r
();

460 
uöt16_t
 
FLASH_OB_GëWRP
();

461 
uöt16_t
 
FLASH_OB_GëWRP1
();

462 
uöt16_t
 
FLASH_OB_GëPCROP
();

463 
uöt16_t
 
FLASH_OB_GëPCROP1
();

464 
FœgSètus
 
FLASH_OB_GëRDP
();

465 
uöt8_t
 
FLASH_OB_GëBOR
();

468 
FLASH_ITC⁄fig
(
uöt32_t
 
FLASH_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

469 
FœgSètus
 
FLASH_GëFœgSètus
(
uöt32_t
 
FLASH_FLAG
);

470 
FLASH_CÀ¨Fœg
(
uöt32_t
 
FLASH_FLAG
);

471 
FLASH_Sètus
 
FLASH_GëSètus
();

472 
FLASH_Sètus
 
FLASH_WaôF‹La°O≥øti⁄
();

474 #ifde‡
__˝lu•lus


	@stm32f4xx_flash_ramfunc.h

30 #i‚de‡
__STM32F4xx_FLASH_RAMFUNC_H


31 
	#__STM32F4xx_FLASH_RAMFUNC_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

53 #i‡
deföed
 ( 
__CC_ARM
 )

63 
	#__RAM_FUNC
 

	)

65 #ñi‡
deföed
 ( 
__ICCARM__
 )

70 
	#__RAM_FUNC
 
__ømfunc
 

	)

72 #ñi‡
deföed
 ( 
__GNUC__
 )

78 
	#__RAM_FUNC
 
	`__©åibuã__
((
	`£˘i⁄
(".RamFunc")))

	)

84 
__RAM_FUNC
 
FLASH_FœshI¡îÁ˚Cmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

85 
__RAM_FUNC
 
FLASH_FœshSÀïModeCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

88 #ifde‡
__˝lu•lus


	@stm32f4xx_fmc.h

30 #i‚de‡
__STM32F4xx_FMC_H


31 
	#__STM32F4xx_FMC_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

55 
uöt32_t
 
FMC_AddªssSëupTime
;

60 
uöt32_t
 
FMC_AddªssHﬁdTime
;

65 
uöt32_t
 
FMC_D©aSëupTime
;

70 
uöt32_t
 
FMC_BusTu∫AroundDuøti⁄
;

75 
uöt32_t
 
FMC_CLKDivisi⁄
;

79 
uöt32_t
 
FMC_D©aL©ícy
;

87 
uöt32_t
 
FMC_Ac˚ssMode
;

89 }
	tFMC_NORSRAMTimögInôTy≥Def
;

96 
uöt32_t
 
FMC_B™k
;

99 
uöt32_t
 
FMC_D©aAddªssMux
;

103 
uöt32_t
 
FMC_Mem‹yTy≥
;

107 
uöt32_t
 
FMC_Mem‹yD©aWidth
;

110 
uöt32_t
 
FMC_Bur°Ac˚ssMode
;

114 
uöt32_t
 
FMC_WaôSig«lPﬁ¨ôy
;

118 
uöt32_t
 
FMC_WøpMode
;

122 
uöt32_t
 
FMC_WaôSig«lA˘ive
;

127 
uöt32_t
 
FMC_WrôeO≥øti⁄
;

130 
uöt32_t
 
FMC_WaôSig«l
;

134 
uöt32_t
 
FMC_ExãndedMode
;

137 
uöt32_t
 
FMC_Asynchr⁄ousWaô
;

141 
uöt32_t
 
FMC_WrôeBur°
;

144 
uöt32_t
 
FMC_C⁄töousClock
;

150 
FMC_NORSRAMTimögInôTy≥Def
* 
FMC_RódWrôeTimögSåu˘
;

152 
FMC_NORSRAMTimögInôTy≥Def
* 
FMC_WrôeTimögSåu˘
;

153 }
	tFMC_NORSRAMInôTy≥Def
;

160 
uöt32_t
 
FMC_SëupTime
;

166 
uöt32_t
 
FMC_WaôSëupTime
;

172 
uöt32_t
 
FMC_HﬁdSëupTime
;

179 
uöt32_t
 
FMC_HiZSëupTime
;

184 }
	tFMC_NAND_PCCARDTimögInôTy≥Def
;

191 
uöt32_t
 
FMC_B™k
;

194 
uöt32_t
 
FMC_Waô„©uª
;

197 
uöt32_t
 
FMC_Mem‹yD©aWidth
;

200 
uöt32_t
 
FMC_ECC
;

203 
uöt32_t
 
FMC_ECCPageSize
;

206 
uöt32_t
 
FMC_TCLRSëupTime
;

210 
uöt32_t
 
FMC_TARSëupTime
;

214 
FMC_NAND_PCCARDTimögInôTy≥Def
* 
FMC_Comm⁄S∑˚TimögSåu˘
;

216 
FMC_NAND_PCCARDTimögInôTy≥Def
* 
FMC_AâribuãS∑˚TimögSåu˘
;

217 }
	tFMC_NANDInôTy≥Def
;

225 
uöt32_t
 
FMC_Waô„©uª
;

228 
uöt32_t
 
FMC_TCLRSëupTime
;

232 
uöt32_t
 
FMC_TARSëupTime
;

237 
FMC_NAND_PCCARDTimögInôTy≥Def
* 
FMC_Comm⁄S∑˚TimögSåu˘
;

239 
FMC_NAND_PCCARDTimögInôTy≥Def
* 
FMC_AâribuãS∑˚TimögSåu˘
;

241 
FMC_NAND_PCCARDTimögInôTy≥Def
* 
FMC_IOS∑˚TimögSåu˘
;

242 }
	tFMC_PCCARDInôTy≥Def
;

250 
uöt32_t
 
FMC_LﬂdToA˘iveDñay
;

254 
uöt32_t
 
FMC_ExôSñfRe‰eshDñay
;

258 
uöt32_t
 
FMC_SñfRe‰eshTime
;

262 
uöt32_t
 
FMC_RowCy˛eDñay
;

267 
uöt32_t
 
FMC_WrôeRecovîyTime
;

270 
uöt32_t
 
FMC_RPDñay
;

274 
uöt32_t
 
FMC_RCDDñay
;

278 }
	tFMC_SDRAMTimögInôTy≥Def
;

287 
uöt32_t
 
FMC_Comm™dMode
;

290 
uöt32_t
 
FMC_Comm™dT¨gë
;

293 
uöt32_t
 
FMC_AutoRe‰eshNumbî
;

297 
uöt32_t
 
FMC_ModeRegi°îDeföôi⁄
;

299 }
	tFMC_SDRAMComm™dTy≥Def
;

307 
uöt32_t
 
FMC_B™k
;

310 
uöt32_t
 
FMC_CﬁumnBôsNumbî
;

313 
uöt32_t
 
FMC_RowBôsNumbî
;

316 
uöt32_t
 
FMC_SDMem‹yD©aWidth
;

319 
uöt32_t
 
FMC_I¡î«lB™kNumbî
;

322 
uöt32_t
 
FMC_CASL©ícy
;

325 
uöt32_t
 
FMC_WrôePrŸe˘i⁄
;

328 
uöt32_t
 
FMC_SDClockPîiod
;

332 
uöt32_t
 
FMC_RódBur°
;

336 
uöt32_t
 
FMC_RódPùeDñay
;

339 
FMC_SDRAMTimögInôTy≥Def
* 
FMC_SDRAMTimögSåu˘
;

341 }
	tFMC_SDRAMInôTy≥Def
;

353 
	#FMC_B™k1_NORSRAM1
 ((
uöt32_t
)0x00000000)

	)

354 
	#FMC_B™k1_NORSRAM2
 ((
uöt32_t
)0x00000002)

	)

355 
	#FMC_B™k1_NORSRAM3
 ((
uöt32_t
)0x00000004)

	)

356 
	#FMC_B™k1_NORSRAM4
 ((
uöt32_t
)0x00000006)

	)

358 
	#IS_FMC_NORSRAM_BANK
(
BANK
Ë(((BANKË=
FMC_B™k1_NORSRAM1
Ë|| \

	)

359 ((
BANK
Ë=
FMC_B™k1_NORSRAM2
) || \

360 ((
BANK
Ë=
FMC_B™k1_NORSRAM3
) || \

361 ((
BANK
Ë=
FMC_B™k1_NORSRAM4
))

369 
	#FMC_B™k2_NAND
 ((
uöt32_t
)0x00000010)

	)

370 
	#FMC_B™k3_NAND
 ((
uöt32_t
)0x00000100)

	)

372 
	#IS_FMC_NAND_BANK
(
BANK
Ë(((BANKË=
FMC_B™k2_NAND
Ë|| \

	)

373 ((
BANK
Ë=
FMC_B™k3_NAND
))

381 
	#FMC_B™k4_PCCARD
 ((
uöt32_t
)0x00001000)

	)

389 
	#FMC_B™k1_SDRAM
 ((
uöt32_t
)0x00000000)

	)

390 
	#FMC_B™k2_SDRAM
 ((
uöt32_t
)0x00000001)

	)

392 
	#IS_FMC_SDRAM_BANK
(
BANK
Ë(((BANKË=
FMC_B™k1_SDRAM
Ë|| \

	)

393 ((
BANK
Ë=
FMC_B™k2_SDRAM
))

408 
	#FMC_D©aAddªssMux_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

409 
	#FMC_D©aAddªssMux_E«bÀ
 ((
uöt32_t
)0x00000002)

	)

411 
	#IS_FMC_MUX
(
MUX
Ë(((MUXË=
FMC_D©aAddªssMux_DißbÀ
Ë|| \

	)

412 ((
MUX
Ë=
FMC_D©aAddªssMux_E«bÀ
))

421 
	#FMC_Mem‹yTy≥_SRAM
 ((
uöt32_t
)0x00000000)

	)

422 
	#FMC_Mem‹yTy≥_PSRAM
 ((
uöt32_t
)0x00000004)

	)

423 
	#FMC_Mem‹yTy≥_NOR
 ((
uöt32_t
)0x00000008)

	)

425 
	#IS_FMC_MEMORY
(
MEMORY
Ë(((MEMORYË=
FMC_Mem‹yTy≥_SRAM
Ë|| \

	)

426 ((
MEMORY
Ë=
FMC_Mem‹yTy≥_PSRAM
)|| \

427 ((
MEMORY
Ë=
FMC_Mem‹yTy≥_NOR
))

436 
	#FMC_NORSRAM_Mem‹yD©aWidth_8b
 ((
uöt32_t
)0x00000000)

	)

437 
	#FMC_NORSRAM_Mem‹yD©aWidth_16b
 ((
uöt32_t
)0x00000010)

	)

438 
	#FMC_NORSRAM_Mem‹yD©aWidth_32b
 ((
uöt32_t
)0x00000020)

	)

440 
	#IS_FMC_NORSRAM_MEMORY_WIDTH
(
WIDTH
Ë(((WIDTHË=
FMC_NORSRAM_Mem‹yD©aWidth_8b
Ë|| \

	)

441 ((
WIDTH
Ë=
FMC_NORSRAM_Mem‹yD©aWidth_16b
) || \

442 ((
WIDTH
Ë=
FMC_NORSRAM_Mem‹yD©aWidth_32b
))

451 
	#FMC_Bur°Ac˚ssMode_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

452 
	#FMC_Bur°Ac˚ssMode_E«bÀ
 ((
uöt32_t
)0x00000100)

	)

454 
	#IS_FMC_BURSTMODE
(
STATE
Ë(((STATEË=
FMC_Bur°Ac˚ssMode_DißbÀ
Ë|| \

	)

455 ((
STATE
Ë=
FMC_Bur°Ac˚ssMode_E«bÀ
))

463 
	#FMC_Asynchr⁄ousWaô_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

464 
	#FMC_Asynchr⁄ousWaô_E«bÀ
 ((
uöt32_t
)0x00008000)

	)

466 
	#IS_FMC_ASYNWAIT
(
STATE
Ë(((STATEË=
FMC_Asynchr⁄ousWaô_DißbÀ
Ë|| \

	)

467 ((
STATE
Ë=
FMC_Asynchr⁄ousWaô_E«bÀ
))

475 
	#FMC_WaôSig«lPﬁ¨ôy_Low
 ((
uöt32_t
)0x00000000)

	)

476 
	#FMC_WaôSig«lPﬁ¨ôy_High
 ((
uöt32_t
)0x00000200)

	)

478 
	#IS_FMC_WAIT_POLARITY
(
POLARITY
Ë(((POLARITYË=
FMC_WaôSig«lPﬁ¨ôy_Low
Ë|| \

	)

479 ((
POLARITY
Ë=
FMC_WaôSig«lPﬁ¨ôy_High
))

487 
	#FMC_WøpMode_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

488 
	#FMC_WøpMode_E«bÀ
 ((
uöt32_t
)0x00000400)

	)

490 
	#IS_FMC_WRAP_MODE
(
MODE
Ë(((MODEË=
FMC_WøpMode_DißbÀ
Ë|| \

	)

491 ((
MODE
Ë=
FMC_WøpMode_E«bÀ
))

499 
	#FMC_WaôSig«lA˘ive_Bef‹eWaôSèã
 ((
uöt32_t
)0x00000000)

	)

500 
	#FMC_WaôSig«lA˘ive_DurögWaôSèã
 ((
uöt32_t
)0x00000800)

	)

502 
	#IS_FMC_WAIT_SIGNAL_ACTIVE
(
ACTIVE
Ë(((ACTIVEË=
FMC_WaôSig«lA˘ive_Bef‹eWaôSèã
Ë|| \

	)

503 ((
ACTIVE
Ë=
FMC_WaôSig«lA˘ive_DurögWaôSèã
))

511 
	#FMC_WrôeO≥øti⁄_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

512 
	#FMC_WrôeO≥øti⁄_E«bÀ
 ((
uöt32_t
)0x00001000)

	)

514 
	#IS_FMC_WRITE_OPERATION
(
OPERATION
Ë(((OPERATIONË=
FMC_WrôeO≥øti⁄_DißbÀ
Ë|| \

	)

515 ((
OPERATION
Ë=
FMC_WrôeO≥øti⁄_E«bÀ
))

523 
	#FMC_WaôSig«l_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

524 
	#FMC_WaôSig«l_E«bÀ
 ((
uöt32_t
)0x00002000)

	)

526 
	#IS_FMC_WAITE_SIGNAL
(
SIGNAL
Ë(((SIGNALË=
FMC_WaôSig«l_DißbÀ
Ë|| \

	)

527 ((
SIGNAL
Ë=
FMC_WaôSig«l_E«bÀ
))

535 
	#FMC_ExãndedMode_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

536 
	#FMC_ExãndedMode_E«bÀ
 ((
uöt32_t
)0x00004000)

	)

538 
	#IS_FMC_EXTENDED_MODE
(
MODE
Ë(((MODEË=
FMC_ExãndedMode_DißbÀ
Ë|| \

	)

539 ((
MODE
Ë=
FMC_ExãndedMode_E«bÀ
))

548 
	#FMC_WrôeBur°_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

549 
	#FMC_WrôeBur°_E«bÀ
 ((
uöt32_t
)0x00080000)

	)

551 
	#IS_FMC_WRITE_BURST
(
BURST
Ë(((BURSTË=
FMC_WrôeBur°_DißbÀ
Ë|| \

	)

552 ((
BURST
Ë=
FMC_WrôeBur°_E«bÀ
))

561 
	#FMC_CClock_SyncO∆y
 ((
uöt32_t
)0x00000000)

	)

562 
	#FMC_CClock_SyncAsync
 ((
uöt32_t
)0x00100000)

	)

564 
	#IS_FMC_CONTINOUS_CLOCK
(
CCLOCK
Ë(((CCLOCKË=
FMC_CClock_SyncO∆y
Ë|| \

	)

565 ((
CCLOCK
Ë=
FMC_CClock_SyncAsync
))

573 
	#IS_FMC_ADDRESS_SETUP_TIME
(
TIME
Ë((TIMEË<15)

	)

581 
	#IS_FMC_ADDRESS_HOLD_TIME
(
TIME
Ë(((TIMEË> 0Ë&& ((TIMEË<15))

	)

589 
	#IS_FMC_DATASETUP_TIME
(
TIME
Ë(((TIMEË> 0Ë&& ((TIMEË<255))

	)

597 
	#IS_FMC_TURNAROUND_TIME
(
TIME
Ë((TIMEË<15)

	)

605 
	#IS_FMC_CLK_DIV
(
DIV
Ë(((DIVË> 0Ë&& ((DIVË<15))

	)

613 
	#IS_FMC_DATA_LATENCY
(
LATENCY
Ë((LATENCYË<15)

	)

621 
	#FMC_Ac˚ssMode_A
 ((
uöt32_t
)0x00000000)

	)

622 
	#FMC_Ac˚ssMode_B
 ((
uöt32_t
)0x10000000)

	)

623 
	#FMC_Ac˚ssMode_C
 ((
uöt32_t
)0x20000000)

	)

624 
	#FMC_Ac˚ssMode_D
 ((
uöt32_t
)0x30000000)

	)

626 
	#IS_FMC_ACCESS_MODE
(
MODE
Ë(((MODEË=
FMC_Ac˚ssMode_A
Ë|| \

	)

627 ((
MODE
Ë=
FMC_Ac˚ssMode_B
) || \

628 ((
MODE
Ë=
FMC_Ac˚ssMode_C
) || \

629 ((
MODE
Ë=
FMC_Ac˚ssMode_D
))

645 
	#FMC_Waô„©uª_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

646 
	#FMC_Waô„©uª_E«bÀ
 ((
uöt32_t
)0x00000002)

	)

648 
	#IS_FMC_WAIT_FEATURE
(
FEATURE
Ë(((FEATUREË=
FMC_Waô„©uª_DißbÀ
Ë|| \

	)

649 ((
FEATURE
Ë=
FMC_Waô„©uª_E«bÀ
))

657 
	#FMC_NAND_Mem‹yD©aWidth_8b
 ((
uöt32_t
)0x00000000)

	)

658 
	#FMC_NAND_Mem‹yD©aWidth_16b
 ((
uöt32_t
)0x00000010)

	)

660 
	#IS_FMC_NAND_MEMORY_WIDTH
(
WIDTH
Ë(((WIDTHË=
FMC_NAND_Mem‹yD©aWidth_8b
Ë|| \

	)

661 ((
WIDTH
Ë=
FMC_NAND_Mem‹yD©aWidth_16b
))

669 
	#FMC_ECC_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

670 
	#FMC_ECC_E«bÀ
 ((
uöt32_t
)0x00000040)

	)

672 
	#IS_FMC_ECC_STATE
(
STATE
Ë(((STATEË=
FMC_ECC_DißbÀ
Ë|| \

	)

673 ((
STATE
Ë=
FMC_ECC_E«bÀ
))

681 
	#FMC_ECCPageSize_256Byãs
 ((
uöt32_t
)0x00000000)

	)

682 
	#FMC_ECCPageSize_512Byãs
 ((
uöt32_t
)0x00020000)

	)

683 
	#FMC_ECCPageSize_1024Byãs
 ((
uöt32_t
)0x00040000)

	)

684 
	#FMC_ECCPageSize_2048Byãs
 ((
uöt32_t
)0x00060000)

	)

685 
	#FMC_ECCPageSize_4096Byãs
 ((
uöt32_t
)0x00080000)

	)

686 
	#FMC_ECCPageSize_8192Byãs
 ((
uöt32_t
)0x000A0000)

	)

688 
	#IS_FMC_ECCPAGE_SIZE
(
SIZE
Ë(((SIZEË=
FMC_ECCPageSize_256Byãs
Ë|| \

	)

689 ((
SIZE
Ë=
FMC_ECCPageSize_512Byãs
) || \

690 ((
SIZE
Ë=
FMC_ECCPageSize_1024Byãs
) || \

691 ((
SIZE
Ë=
FMC_ECCPageSize_2048Byãs
) || \

692 ((
SIZE
Ë=
FMC_ECCPageSize_4096Byãs
) || \

693 ((
SIZE
Ë=
FMC_ECCPageSize_8192Byãs
))

701 
	#IS_FMC_TCLR_TIME
(
TIME
Ë((TIMEË<255)

	)

709 
	#IS_FMC_TAR_TIME
(
TIME
Ë((TIMEË<255)

	)

717 
	#IS_FMC_SETUP_TIME
(
TIME
Ë((TIMEË<255)

	)

725 
	#IS_FMC_WAIT_TIME
(
TIME
Ë((TIMEË<255)

	)

733 
	#IS_FMC_HOLD_TIME
(
TIME
Ë((TIMEË<255)

	)

741 
	#IS_FMC_HIZ_TIME
(
TIME
Ë((TIMEË<255)

	)

758 
	#FMC_CﬁumnBôs_Numbî_8b
 ((
uöt32_t
)0x00000000)

	)

759 
	#FMC_CﬁumnBôs_Numbî_9b
 ((
uöt32_t
)0x00000001)

	)

760 
	#FMC_CﬁumnBôs_Numbî_10b
 ((
uöt32_t
)0x00000002)

	)

761 
	#FMC_CﬁumnBôs_Numbî_11b
 ((
uöt32_t
)0x00000003)

	)

763 
	#IS_FMC_COLUMNBITS_NUMBER
(
COLUMN
Ë(((COLUMNË=
FMC_CﬁumnBôs_Numbî_8b
Ë|| \

	)

764 ((
COLUMN
Ë=
FMC_CﬁumnBôs_Numbî_9b
) || \

765 ((
COLUMN
Ë=
FMC_CﬁumnBôs_Numbî_10b
) || \

766 ((
COLUMN
Ë=
FMC_CﬁumnBôs_Numbî_11b
))

775 
	#FMC_RowBôs_Numbî_11b
 ((
uöt32_t
)0x00000000)

	)

776 
	#FMC_RowBôs_Numbî_12b
 ((
uöt32_t
)0x00000004)

	)

777 
	#FMC_RowBôs_Numbî_13b
 ((
uöt32_t
)0x00000008)

	)

779 
	#IS_FMC_ROWBITS_NUMBER
(
ROW
Ë(((ROWË=
FMC_RowBôs_Numbî_11b
Ë|| \

	)

780 ((
ROW
Ë=
FMC_RowBôs_Numbî_12b
) || \

781 ((
ROW
Ë=
FMC_RowBôs_Numbî_13b
))

790 
	#FMC_SDMem‹y_Width_8b
 ((
uöt32_t
)0x00000000)

	)

791 
	#FMC_SDMem‹y_Width_16b
 ((
uöt32_t
)0x00000010)

	)

792 
	#FMC_SDMem‹y_Width_32b
 ((
uöt32_t
)0x00000020)

	)

794 
	#IS_FMC_SDMEMORY_WIDTH
(
WIDTH
Ë(((WIDTHË=
FMC_SDMem‹y_Width_8b
Ë|| \

	)

795 ((
WIDTH
Ë=
FMC_SDMem‹y_Width_16b
) || \

796 ((
WIDTH
Ë=
FMC_SDMem‹y_Width_32b
))

805 
	#FMC_I¡î«lB™k_Numbî_2
 ((
uöt32_t
)0x00000000)

	)

806 
	#FMC_I¡î«lB™k_Numbî_4
 ((
uöt32_t
)0x00000040)

	)

808 
	#IS_FMC_INTERNALBANK_NUMBER
(
NUMBER
Ë(((NUMBERË=
FMC_I¡î«lB™k_Numbî_2
Ë|| \

	)

809 ((
NUMBER
Ë=
FMC_I¡î«lB™k_Numbî_4
))

819 
	#FMC_CAS_L©ícy_1
 ((
uöt32_t
)0x00000080)

	)

820 
	#FMC_CAS_L©ícy_2
 ((
uöt32_t
)0x00000100)

	)

821 
	#FMC_CAS_L©ícy_3
 ((
uöt32_t
)0x00000180)

	)

823 
	#IS_FMC_CAS_LATENCY
(
LATENCY
Ë(((LATENCYË=
FMC_CAS_L©ícy_1
Ë|| \

	)

824 ((
LATENCY
Ë=
FMC_CAS_L©ícy_2
) || \

825 ((
LATENCY
Ë=
FMC_CAS_L©ícy_3
))

834 
	#FMC_Wrôe_PrŸe˘i⁄_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

835 
	#FMC_Wrôe_PrŸe˘i⁄_E«bÀ
 ((
uöt32_t
)0x00000200)

	)

837 
	#IS_FMC_WRITE_PROTECTION
(
WRITE
Ë(((WRITEË=
FMC_Wrôe_PrŸe˘i⁄_DißbÀ
Ë|| \

	)

838 ((
WRITE
Ë=
FMC_Wrôe_PrŸe˘i⁄_E«bÀ
))

848 
	#FMC_SDClock_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

849 
	#FMC_SDClock_Pîiod_2
 ((
uöt32_t
)0x00000800)

	)

850 
	#FMC_SDClock_Pîiod_3
 ((
uöt32_t
)0x00000C00)

	)

852 
	#IS_FMC_SDCLOCK_PERIOD
(
PERIOD
Ë(((PERIODË=
FMC_SDClock_DißbÀ
Ë|| \

	)

853 ((
PERIOD
Ë=
FMC_SDClock_Pîiod_2
) || \

854 ((
PERIOD
Ë=
FMC_SDClock_Pîiod_3
))

863 
	#FMC_Ród_Bur°_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

864 
	#FMC_Ród_Bur°_E«bÀ
 ((
uöt32_t
)0x00001000)

	)

866 
	#IS_FMC_READ_BURST
(
RBURST
Ë(((RBURSTË=
FMC_Ród_Bur°_DißbÀ
Ë|| \

	)

867 ((
RBURST
Ë=
FMC_Ród_Bur°_E«bÀ
))

876 
	#FMC_RódPùe_Dñay_0
 ((
uöt32_t
)0x00000000)

	)

877 
	#FMC_RódPùe_Dñay_1
 ((
uöt32_t
)0x00002000)

	)

878 
	#FMC_RódPùe_Dñay_2
 ((
uöt32_t
)0x00004000)

	)

880 
	#IS_FMC_READPIPE_DELAY
(
DELAY
Ë(((DELAYË=
FMC_RódPùe_Dñay_0
Ë|| \

	)

881 ((
DELAY
Ë=
FMC_RódPùe_Dñay_1
) || \

882 ((
DELAY
Ë=
FMC_RódPùe_Dñay_2
))

891 
	#IS_FMC_LOADTOACTIVE_DELAY
(
DELAY
Ë(((DELAYË> 0Ë&& ((DELAYË<16))

	)

899 
	#IS_FMC_EXITSELFREFRESH_DELAY
(
DELAY
Ë(((DELAYË> 0Ë&& ((DELAYË<16))

	)

907 
	#IS_FMC_SELFREFRESH_TIME
(
TIME
Ë(((TIMEË> 0Ë&& ((TIMEË<16))

	)

915 
	#IS_FMC_ROWCYCLE_DELAY
(
DELAY
Ë(((DELAYË> 0Ë&& ((DELAYË<16))

	)

923 
	#IS_FMC_WRITE_RECOVERY_TIME
(
TIME
Ë(((TIMEË> 0Ë&& ((TIMEË<16))

	)

931 
	#IS_FMC_RP_DELAY
(
DELAY
Ë(((DELAYË> 0Ë&& ((DELAYË<16))

	)

939 
	#IS_FMC_RCD_DELAY
(
DELAY
Ë(((DELAYË> 0Ë&& ((DELAYË<16))

	)

948 
	#FMC_Comm™d_Mode_n‹mÆ
 ((
uöt32_t
)0x00000000)

	)

949 
	#FMC_Comm™d_Mode_CLK_E«bÀd
 ((
uöt32_t
)0x00000001)

	)

950 
	#FMC_Comm™d_Mode_PALL
 ((
uöt32_t
)0x00000002)

	)

951 
	#FMC_Comm™d_Mode_AutoRe‰esh
 ((
uöt32_t
)0x00000003)

	)

952 
	#FMC_Comm™d_Mode_LﬂdMode
 ((
uöt32_t
)0x00000004)

	)

953 
	#FMC_Comm™d_Mode_Sñ‰e‰esh
 ((
uöt32_t
)0x00000005)

	)

954 
	#FMC_Comm™d_Mode_PowîDown
 ((
uöt32_t
)0x00000006)

	)

956 
	#IS_FMC_COMMAND_MODE
(
COMMAND
Ë(((COMMANDË=
FMC_Comm™d_Mode_n‹mÆ
Ë|| \

	)

957 ((
COMMAND
Ë=
FMC_Comm™d_Mode_CLK_E«bÀd
) || \

958 ((
COMMAND
Ë=
FMC_Comm™d_Mode_PALL
) || \

959 ((
COMMAND
Ë=
FMC_Comm™d_Mode_AutoRe‰esh
) || \

960 ((
COMMAND
Ë=
FMC_Comm™d_Mode_LﬂdMode
) || \

961 ((
COMMAND
Ë=
FMC_Comm™d_Mode_Sñ‰e‰esh
) || \

962 ((
COMMAND
Ë=
FMC_Comm™d_Mode_PowîDown
))

971 
	#FMC_Comm™d_T¨gë_b™k2
 ((
uöt32_t
)0x00000008)

	)

972 
	#FMC_Comm™d_T¨gë_b™k1
 ((
uöt32_t
)0x00000010)

	)

973 
	#FMC_Comm™d_T¨gë_b™k1_2
 ((
uöt32_t
)0x00000018)

	)

975 
	#IS_FMC_COMMAND_TARGET
(
TARGET
Ë(((TARGETË=
FMC_Comm™d_T¨gë_b™k1
Ë|| \

	)

976 ((
TARGET
Ë=
FMC_Comm™d_T¨gë_b™k2
) || \

977 ((
TARGET
Ë=
FMC_Comm™d_T¨gë_b™k1_2
))

986 
	#IS_FMC_AUTOREFRESH_NUMBER
(
NUMBER
Ë(((NUMBERË> 0Ë&& ((NUMBERË<16))

	)

995 
	#IS_FMC_MODE_REGISTER
(
CONTENT
Ë((CONTENTË<8191)

	)

1005 
	#FMC_N‹mÆMode_Sètus
 ((
uöt32_t
)0x00000000)

	)

1006 
	#FMC_SñfRe‰eshMode_Sètus
 
FMC_SDSR_MODES1_0


	)

1007 
	#FMC_PowîDownMode_Sètus
 
FMC_SDSR_MODES1_1


	)

1009 
	#IS_FMC_MODE_STATUS
(
STATUS
Ë(((STATUSË=
FMC_N‹mÆMode_Sètus
Ë|| \

	)

1010 ((
STATUS
Ë=
FMC_SñfRe‰eshMode_Sètus
) || \

1011 ((
STATUS
Ë=
FMC_PowîDownMode_Sètus
))

1025 
	#FMC_IT_RisögEdge
 ((
uöt32_t
)0x00000008)

	)

1026 
	#FMC_IT_Levñ
 ((
uöt32_t
)0x00000010)

	)

1027 
	#FMC_IT_FÆlögEdge
 ((
uöt32_t
)0x00000020)

	)

1028 
	#FMC_IT_Re‰esh
 ((
uöt32_t
)0x00004000)

	)

1030 
	#IS_FMC_IT
(
IT
Ë((((ITË& (
uöt32_t
)0xFFFFBFC7Ë=0x00000000Ë&& ((ITË!0x00000000))

	)

1031 
	#IS_FMC_GET_IT
(
IT
Ë(((ITË=
FMC_IT_RisögEdge
Ë|| \

	)

1032 ((
IT
Ë=
FMC_IT_Levñ
) || \

1033 ((
IT
Ë=
FMC_IT_FÆlögEdge
) || \

1034 ((
IT
Ë=
FMC_IT_Re‰esh
))

1036 
	#IS_FMC_IT_BANK
(
BANK
Ë(((BANKË=
FMC_B™k2_NAND
Ë|| \

	)

1037 ((
BANK
Ë=
FMC_B™k3_NAND
) || \

1038 ((
BANK
Ë=
FMC_B™k4_PCCARD
) || \

1039 ((
BANK
Ë=
FMC_B™k1_SDRAM
) || \

1040 ((
BANK
Ë=
FMC_B™k2_SDRAM
))

1048 
	#FMC_FLAG_RisögEdge
 ((
uöt32_t
)0x00000001)

	)

1049 
	#FMC_FLAG_Levñ
 ((
uöt32_t
)0x00000002)

	)

1050 
	#FMC_FLAG_FÆlögEdge
 ((
uöt32_t
)0x00000004)

	)

1051 
	#FMC_FLAG_FEMPT
 ((
uöt32_t
)0x00000040)

	)

1052 
	#FMC_FLAG_Re‰esh
 
FMC_SDSR_RE


	)

1053 
	#FMC_FLAG_Busy
 
FMC_SDSR_BUSY


	)

1055 
	#IS_FMC_GET_FLAG
(
FLAG
Ë(((FLAGË=
FMC_FLAG_RisögEdge
Ë|| \

	)

1056 ((
FLAG
Ë=
FMC_FLAG_Levñ
) || \

1057 ((
FLAG
Ë=
FMC_FLAG_FÆlögEdge
) || \

1058 ((
FLAG
Ë=
FMC_FLAG_FEMPT
) || \

1059 ((
FLAG
Ë=
FMC_FLAG_Re‰esh
) || \

1060 ((
FLAG
Ë=
FMC_SDSR_BUSY
))

1062 
	#IS_FMC_GETFLAG_BANK
(
BANK
Ë(((BANKË=
FMC_B™k2_NAND
Ë|| \

	)

1063 ((
BANK
Ë=
FMC_B™k3_NAND
) || \

1064 ((
BANK
Ë=
FMC_B™k4_PCCARD
) || \

1065 ((
BANK
Ë=
FMC_B™k1_SDRAM
) || \

1066 ((
BANK
Ë=
FMC_B™k2_SDRAM
) || \

1067 ((
BANK
Ë=(
FMC_B™k1_SDRAM
 | 
FMC_B™k2_SDRAM
)))

1069 
	#IS_FMC_CLEAR_FLAG
(
FLAG
Ë((((FLAGË& (
uöt32_t
)0xFFFFFFF8Ë=0x00000000Ë&& ((FLAGË!0x00000000))

	)

1079 
	#IS_FMC_REFRESH_COUNT
(
COUNT
Ë((COUNTË<8191)

	)

1094 
FMC_NORSRAMDeInô
(
uöt32_t
 
FMC_B™k
);

1095 
FMC_NORSRAMInô
(
FMC_NORSRAMInôTy≥Def
* 
FMC_NORSRAMInôSåu˘
);

1096 
FMC_NORSRAMSåu˘Inô
(
FMC_NORSRAMInôTy≥Def
* 
FMC_NORSRAMInôSåu˘
);

1097 
FMC_NORSRAMCmd
(
uöt32_t
 
FMC_B™k
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1100 
FMC_NANDDeInô
(
uöt32_t
 
FMC_B™k
);

1101 
FMC_NANDInô
(
FMC_NANDInôTy≥Def
* 
FMC_NANDInôSåu˘
);

1102 
FMC_NANDSåu˘Inô
(
FMC_NANDInôTy≥Def
* 
FMC_NANDInôSåu˘
);

1103 
FMC_NANDCmd
(
uöt32_t
 
FMC_B™k
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1104 
FMC_NANDECCCmd
(
uöt32_t
 
FMC_B™k
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1105 
uöt32_t
 
FMC_GëECC
(uöt32_à
FMC_B™k
);

1108 
FMC_PCCARDDeInô
();

1109 
FMC_PCCARDInô
(
FMC_PCCARDInôTy≥Def
* 
FMC_PCCARDInôSåu˘
);

1110 
FMC_PCCARDSåu˘Inô
(
FMC_PCCARDInôTy≥Def
* 
FMC_PCCARDInôSåu˘
);

1111 
FMC_PCCARDCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

1114 
FMC_SDRAMDeInô
(
uöt32_t
 
FMC_B™k
);

1115 
FMC_SDRAMInô
(
FMC_SDRAMInôTy≥Def
* 
FMC_SDRAMInôSåu˘
);

1116 
FMC_SDRAMSåu˘Inô
(
FMC_SDRAMInôTy≥Def
* 
FMC_SDRAMInôSåu˘
);

1117 
FMC_SDRAMCmdC⁄fig
(
FMC_SDRAMComm™dTy≥Def
* 
FMC_SDRAMComm™dSåu˘
);

1118 
uöt32_t
 
FMC_GëModeSètus
(uöt32_à
SDRAM_B™k
);

1119 
FMC_SëRe‰eshCou¡
(
uöt32_t
 
FMC_Cou¡
);

1120 
FMC_SëAutoRe‰esh_Numbî
(
uöt32_t
 
FMC_Numbî
);

1121 
FMC_SDRAMWrôePrŸe˘i⁄C⁄fig
(
uöt32_t
 
SDRAM_B™k
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1124 
FMC_ITC⁄fig
(
uöt32_t
 
FMC_B™k
, uöt32_à
FMC_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1125 
FœgSètus
 
FMC_GëFœgSètus
(
uöt32_t
 
FMC_B™k
, uöt32_à
FMC_FLAG
);

1126 
FMC_CÀ¨Fœg
(
uöt32_t
 
FMC_B™k
, uöt32_à
FMC_FLAG
);

1127 
ITSètus
 
FMC_GëITSètus
(
uöt32_t
 
FMC_B™k
, uöt32_à
FMC_IT
);

1128 
FMC_CÀ¨ITPídögBô
(
uöt32_t
 
FMC_B™k
, uöt32_à
FMC_IT
);

1130 #ifde‡
__˝lu•lus


	@stm32f4xx_fsmc.h

30 #i‚de‡
__STM32F4xx_FSMC_H


31 
	#__STM32F4xx_FSMC_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

55 
uöt32_t
 
FSMC_AddªssSëupTime
;

60 
uöt32_t
 
FSMC_AddªssHﬁdTime
;

65 
uöt32_t
 
FSMC_D©aSëupTime
;

70 
uöt32_t
 
FSMC_BusTu∫AroundDuøti⁄
;

75 
uöt32_t
 
FSMC_CLKDivisi⁄
;

79 
uöt32_t
 
FSMC_D©aL©ícy
;

87 
uöt32_t
 
FSMC_Ac˚ssMode
;

89 }
	tFSMC_NORSRAMTimögInôTy≥Def
;

96 
uöt32_t
 
FSMC_B™k
;

99 
uöt32_t
 
FSMC_D©aAddªssMux
;

103 
uöt32_t
 
FSMC_Mem‹yTy≥
;

107 
uöt32_t
 
FSMC_Mem‹yD©aWidth
;

110 
uöt32_t
 
FSMC_Bur°Ac˚ssMode
;

114 
uöt32_t
 
FSMC_Asynchr⁄ousWaô
;

118 
uöt32_t
 
FSMC_WaôSig«lPﬁ¨ôy
;

122 
uöt32_t
 
FSMC_WøpMode
;

126 
uöt32_t
 
FSMC_WaôSig«lA˘ive
;

131 
uöt32_t
 
FSMC_WrôeO≥øti⁄
;

134 
uöt32_t
 
FSMC_WaôSig«l
;

138 
uöt32_t
 
FSMC_ExãndedMode
;

141 
uöt32_t
 
FSMC_WrôeBur°
;

144 
FSMC_NORSRAMTimögInôTy≥Def
* 
FSMC_RódWrôeTimögSåu˘
;

146 
FSMC_NORSRAMTimögInôTy≥Def
* 
FSMC_WrôeTimögSåu˘
;

147 }
	tFSMC_NORSRAMInôTy≥Def
;

154 
uöt32_t
 
FSMC_SëupTime
;

160 
uöt32_t
 
FSMC_WaôSëupTime
;

166 
uöt32_t
 
FSMC_HﬁdSëupTime
;

173 
uöt32_t
 
FSMC_HiZSëupTime
;

178 }
	tFSMC_NAND_PCCARDTimögInôTy≥Def
;

185 
uöt32_t
 
FSMC_B™k
;

188 
uöt32_t
 
FSMC_Waô„©uª
;

191 
uöt32_t
 
FSMC_Mem‹yD©aWidth
;

194 
uöt32_t
 
FSMC_ECC
;

197 
uöt32_t
 
FSMC_ECCPageSize
;

200 
uöt32_t
 
FSMC_TCLRSëupTime
;

204 
uöt32_t
 
FSMC_TARSëupTime
;

208 
FSMC_NAND_PCCARDTimögInôTy≥Def
* 
FSMC_Comm⁄S∑˚TimögSåu˘
;

210 
FSMC_NAND_PCCARDTimögInôTy≥Def
* 
FSMC_AâribuãS∑˚TimögSåu˘
;

211 }
	tFSMC_NANDInôTy≥Def
;

219 
uöt32_t
 
FSMC_Waô„©uª
;

222 
uöt32_t
 
FSMC_TCLRSëupTime
;

226 
uöt32_t
 
FSMC_TARSëupTime
;

231 
FSMC_NAND_PCCARDTimögInôTy≥Def
* 
FSMC_Comm⁄S∑˚TimögSåu˘
;

233 
FSMC_NAND_PCCARDTimögInôTy≥Def
* 
FSMC_AâribuãS∑˚TimögSåu˘
;

235 
FSMC_NAND_PCCARDTimögInôTy≥Def
* 
FSMC_IOS∑˚TimögSåu˘
;

236 }
	tFSMC_PCCARDInôTy≥Def
;

247 
	#FSMC_B™k1_NORSRAM1
 ((
uöt32_t
)0x00000000)

	)

248 
	#FSMC_B™k1_NORSRAM2
 ((
uöt32_t
)0x00000002)

	)

249 
	#FSMC_B™k1_NORSRAM3
 ((
uöt32_t
)0x00000004)

	)

250 
	#FSMC_B™k1_NORSRAM4
 ((
uöt32_t
)0x00000006)

	)

258 
	#FSMC_B™k2_NAND
 ((
uöt32_t
)0x00000010)

	)

259 
	#FSMC_B™k3_NAND
 ((
uöt32_t
)0x00000100)

	)

267 
	#FSMC_B™k4_PCCARD
 ((
uöt32_t
)0x00001000)

	)

272 
	#IS_FSMC_NORSRAM_BANK
(
BANK
Ë(((BANKË=
FSMC_B™k1_NORSRAM1
Ë|| \

	)

273 ((
BANK
Ë=
FSMC_B™k1_NORSRAM2
) || \

274 ((
BANK
Ë=
FSMC_B™k1_NORSRAM3
) || \

275 ((
BANK
Ë=
FSMC_B™k1_NORSRAM4
))

277 
	#IS_FSMC_NAND_BANK
(
BANK
Ë(((BANKË=
FSMC_B™k2_NAND
Ë|| \

	)

278 ((
BANK
Ë=
FSMC_B™k3_NAND
))

280 
	#IS_FSMC_GETFLAG_BANK
(
BANK
Ë(((BANKË=
FSMC_B™k2_NAND
Ë|| \

	)

281 ((
BANK
Ë=
FSMC_B™k3_NAND
) || \

282 ((
BANK
Ë=
FSMC_B™k4_PCCARD
))

284 
	#IS_FSMC_IT_BANK
(
BANK
Ë(((BANKË=
FSMC_B™k2_NAND
Ë|| \

	)

285 ((
BANK
Ë=
FSMC_B™k3_NAND
) || \

286 ((
BANK
Ë=
FSMC_B™k4_PCCARD
))

296 
	#FSMC_D©aAddªssMux_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

297 
	#FSMC_D©aAddªssMux_E«bÀ
 ((
uöt32_t
)0x00000002)

	)

298 
	#IS_FSMC_MUX
(
MUX
Ë(((MUXË=
FSMC_D©aAddªssMux_DißbÀ
Ë|| \

	)

299 ((
MUX
Ë=
FSMC_D©aAddªssMux_E«bÀ
))

308 
	#FSMC_Mem‹yTy≥_SRAM
 ((
uöt32_t
)0x00000000)

	)

309 
	#FSMC_Mem‹yTy≥_PSRAM
 ((
uöt32_t
)0x00000004)

	)

310 
	#FSMC_Mem‹yTy≥_NOR
 ((
uöt32_t
)0x00000008)

	)

311 
	#IS_FSMC_MEMORY
(
MEMORY
Ë(((MEMORYË=
FSMC_Mem‹yTy≥_SRAM
Ë|| \

	)

312 ((
MEMORY
Ë=
FSMC_Mem‹yTy≥_PSRAM
)|| \

313 ((
MEMORY
Ë=
FSMC_Mem‹yTy≥_NOR
))

322 
	#FSMC_Mem‹yD©aWidth_8b
 ((
uöt32_t
)0x00000000)

	)

323 
	#FSMC_Mem‹yD©aWidth_16b
 ((
uöt32_t
)0x00000010)

	)

324 
	#IS_FSMC_MEMORY_WIDTH
(
WIDTH
Ë(((WIDTHË=
FSMC_Mem‹yD©aWidth_8b
Ë|| \

	)

325 ((
WIDTH
Ë=
FSMC_Mem‹yD©aWidth_16b
))

334 
	#FSMC_Bur°Ac˚ssMode_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

335 
	#FSMC_Bur°Ac˚ssMode_E«bÀ
 ((
uöt32_t
)0x00000100)

	)

336 
	#IS_FSMC_BURSTMODE
(
STATE
Ë(((STATEË=
FSMC_Bur°Ac˚ssMode_DißbÀ
Ë|| \

	)

337 ((
STATE
Ë=
FSMC_Bur°Ac˚ssMode_E«bÀ
))

345 
	#FSMC_Asynchr⁄ousWaô_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

346 
	#FSMC_Asynchr⁄ousWaô_E«bÀ
 ((
uöt32_t
)0x00008000)

	)

347 
	#IS_FSMC_ASYNWAIT
(
STATE
Ë(((STATEË=
FSMC_Asynchr⁄ousWaô_DißbÀ
Ë|| \

	)

348 ((
STATE
Ë=
FSMC_Asynchr⁄ousWaô_E«bÀ
))

356 
	#FSMC_WaôSig«lPﬁ¨ôy_Low
 ((
uöt32_t
)0x00000000)

	)

357 
	#FSMC_WaôSig«lPﬁ¨ôy_High
 ((
uöt32_t
)0x00000200)

	)

358 
	#IS_FSMC_WAIT_POLARITY
(
POLARITY
Ë(((POLARITYË=
FSMC_WaôSig«lPﬁ¨ôy_Low
Ë|| \

	)

359 ((
POLARITY
Ë=
FSMC_WaôSig«lPﬁ¨ôy_High
))

367 
	#FSMC_WøpMode_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

368 
	#FSMC_WøpMode_E«bÀ
 ((
uöt32_t
)0x00000400)

	)

369 
	#IS_FSMC_WRAP_MODE
(
MODE
Ë(((MODEË=
FSMC_WøpMode_DißbÀ
Ë|| \

	)

370 ((
MODE
Ë=
FSMC_WøpMode_E«bÀ
))

378 
	#FSMC_WaôSig«lA˘ive_Bef‹eWaôSèã
 ((
uöt32_t
)0x00000000)

	)

379 
	#FSMC_WaôSig«lA˘ive_DurögWaôSèã
 ((
uöt32_t
)0x00000800)

	)

380 
	#IS_FSMC_WAIT_SIGNAL_ACTIVE
(
ACTIVE
Ë(((ACTIVEË=
FSMC_WaôSig«lA˘ive_Bef‹eWaôSèã
Ë|| \

	)

381 ((
ACTIVE
Ë=
FSMC_WaôSig«lA˘ive_DurögWaôSèã
))

389 
	#FSMC_WrôeO≥øti⁄_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

390 
	#FSMC_WrôeO≥øti⁄_E«bÀ
 ((
uöt32_t
)0x00001000)

	)

391 
	#IS_FSMC_WRITE_OPERATION
(
OPERATION
Ë(((OPERATIONË=
FSMC_WrôeO≥øti⁄_DißbÀ
Ë|| \

	)

392 ((
OPERATION
Ë=
FSMC_WrôeO≥øti⁄_E«bÀ
))

400 
	#FSMC_WaôSig«l_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

401 
	#FSMC_WaôSig«l_E«bÀ
 ((
uöt32_t
)0x00002000)

	)

402 
	#IS_FSMC_WAITE_SIGNAL
(
SIGNAL
Ë(((SIGNALË=
FSMC_WaôSig«l_DißbÀ
Ë|| \

	)

403 ((
SIGNAL
Ë=
FSMC_WaôSig«l_E«bÀ
))

411 
	#FSMC_ExãndedMode_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

412 
	#FSMC_ExãndedMode_E«bÀ
 ((
uöt32_t
)0x00004000)

	)

414 
	#IS_FSMC_EXTENDED_MODE
(
MODE
Ë(((MODEË=
FSMC_ExãndedMode_DißbÀ
Ë|| \

	)

415 ((
MODE
Ë=
FSMC_ExãndedMode_E«bÀ
))

424 
	#FSMC_WrôeBur°_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

425 
	#FSMC_WrôeBur°_E«bÀ
 ((
uöt32_t
)0x00080000)

	)

426 
	#IS_FSMC_WRITE_BURST
(
BURST
Ë(((BURSTË=
FSMC_WrôeBur°_DißbÀ
Ë|| \

	)

427 ((
BURST
Ë=
FSMC_WrôeBur°_E«bÀ
))

435 
	#IS_FSMC_ADDRESS_SETUP_TIME
(
TIME
Ë((TIMEË<0xF)

	)

443 
	#IS_FSMC_ADDRESS_HOLD_TIME
(
TIME
Ë((TIMEË<0xF)

	)

451 
	#IS_FSMC_DATASETUP_TIME
(
TIME
Ë(((TIMEË> 0Ë&& ((TIMEË<0xFF))

	)

459 
	#IS_FSMC_TURNAROUND_TIME
(
TIME
Ë((TIMEË<0xF)

	)

467 
	#IS_FSMC_CLK_DIV
(
DIV
Ë((DIVË<0xF)

	)

475 
	#IS_FSMC_DATA_LATENCY
(
LATENCY
Ë((LATENCYË<0xF)

	)

483 
	#FSMC_Ac˚ssMode_A
 ((
uöt32_t
)0x00000000)

	)

484 
	#FSMC_Ac˚ssMode_B
 ((
uöt32_t
)0x10000000)

	)

485 
	#FSMC_Ac˚ssMode_C
 ((
uöt32_t
)0x20000000)

	)

486 
	#FSMC_Ac˚ssMode_D
 ((
uöt32_t
)0x30000000)

	)

487 
	#IS_FSMC_ACCESS_MODE
(
MODE
Ë(((MODEË=
FSMC_Ac˚ssMode_A
Ë|| \

	)

488 ((
MODE
Ë=
FSMC_Ac˚ssMode_B
) || \

489 ((
MODE
Ë=
FSMC_Ac˚ssMode_C
) || \

490 ((
MODE
Ë=
FSMC_Ac˚ssMode_D
))

506 
	#FSMC_Waô„©uª_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

507 
	#FSMC_Waô„©uª_E«bÀ
 ((
uöt32_t
)0x00000002)

	)

508 
	#IS_FSMC_WAIT_FEATURE
(
FEATURE
Ë(((FEATUREË=
FSMC_Waô„©uª_DißbÀ
Ë|| \

	)

509 ((
FEATURE
Ë=
FSMC_Waô„©uª_E«bÀ
))

518 
	#FSMC_ECC_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

519 
	#FSMC_ECC_E«bÀ
 ((
uöt32_t
)0x00000040)

	)

520 
	#IS_FSMC_ECC_STATE
(
STATE
Ë(((STATEË=
FSMC_ECC_DißbÀ
Ë|| \

	)

521 ((
STATE
Ë=
FSMC_ECC_E«bÀ
))

529 
	#FSMC_ECCPageSize_256Byãs
 ((
uöt32_t
)0x00000000)

	)

530 
	#FSMC_ECCPageSize_512Byãs
 ((
uöt32_t
)0x00020000)

	)

531 
	#FSMC_ECCPageSize_1024Byãs
 ((
uöt32_t
)0x00040000)

	)

532 
	#FSMC_ECCPageSize_2048Byãs
 ((
uöt32_t
)0x00060000)

	)

533 
	#FSMC_ECCPageSize_4096Byãs
 ((
uöt32_t
)0x00080000)

	)

534 
	#FSMC_ECCPageSize_8192Byãs
 ((
uöt32_t
)0x000A0000)

	)

535 
	#IS_FSMC_ECCPAGE_SIZE
(
SIZE
Ë(((SIZEË=
FSMC_ECCPageSize_256Byãs
Ë|| \

	)

536 ((
SIZE
Ë=
FSMC_ECCPageSize_512Byãs
) || \

537 ((
SIZE
Ë=
FSMC_ECCPageSize_1024Byãs
) || \

538 ((
SIZE
Ë=
FSMC_ECCPageSize_2048Byãs
) || \

539 ((
SIZE
Ë=
FSMC_ECCPageSize_4096Byãs
) || \

540 ((
SIZE
Ë=
FSMC_ECCPageSize_8192Byãs
))

548 
	#IS_FSMC_TCLR_TIME
(
TIME
Ë((TIMEË<0xFF)

	)

556 
	#IS_FSMC_TAR_TIME
(
TIME
Ë((TIMEË<0xFF)

	)

564 
	#IS_FSMC_SETUP_TIME
(
TIME
Ë((TIMEË<0xFF)

	)

572 
	#IS_FSMC_WAIT_TIME
(
TIME
Ë((TIMEË<0xFF)

	)

580 
	#IS_FSMC_HOLD_TIME
(
TIME
Ë((TIMEË<0xFF)

	)

588 
	#IS_FSMC_HIZ_TIME
(
TIME
Ë((TIMEË<0xFF)

	)

596 
	#FSMC_IT_RisögEdge
 ((
uöt32_t
)0x00000008)

	)

597 
	#FSMC_IT_Levñ
 ((
uöt32_t
)0x00000010)

	)

598 
	#FSMC_IT_FÆlögEdge
 ((
uöt32_t
)0x00000020)

	)

599 
	#IS_FSMC_IT
(
IT
Ë((((ITË& (
uöt32_t
)0xFFFFFFC7Ë=0x00000000Ë&& ((ITË!0x00000000))

	)

600 
	#IS_FSMC_GET_IT
(
IT
Ë(((ITË=
FSMC_IT_RisögEdge
Ë|| \

	)

601 ((
IT
Ë=
FSMC_IT_Levñ
) || \

602 ((
IT
Ë=
FSMC_IT_FÆlögEdge
))

610 
	#FSMC_FLAG_RisögEdge
 ((
uöt32_t
)0x00000001)

	)

611 
	#FSMC_FLAG_Levñ
 ((
uöt32_t
)0x00000002)

	)

612 
	#FSMC_FLAG_FÆlögEdge
 ((
uöt32_t
)0x00000004)

	)

613 
	#FSMC_FLAG_FEMPT
 ((
uöt32_t
)0x00000040)

	)

614 
	#IS_FSMC_GET_FLAG
(
FLAG
Ë(((FLAGË=
FSMC_FLAG_RisögEdge
Ë|| \

	)

615 ((
FLAG
Ë=
FSMC_FLAG_Levñ
) || \

616 ((
FLAG
Ë=
FSMC_FLAG_FÆlögEdge
) || \

617 ((
FLAG
Ë=
FSMC_FLAG_FEMPT
))

619 
	#IS_FSMC_CLEAR_FLAG
(
FLAG
Ë((((FLAGË& (
uöt32_t
)0xFFFFFFF8Ë=0x00000000Ë&& ((FLAGË!0x00000000))

	)

636 
FSMC_NORSRAMDeInô
(
uöt32_t
 
FSMC_B™k
);

637 
FSMC_NORSRAMInô
(
FSMC_NORSRAMInôTy≥Def
* 
FSMC_NORSRAMInôSåu˘
);

638 
FSMC_NORSRAMSåu˘Inô
(
FSMC_NORSRAMInôTy≥Def
* 
FSMC_NORSRAMInôSåu˘
);

639 
FSMC_NORSRAMCmd
(
uöt32_t
 
FSMC_B™k
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

642 
FSMC_NANDDeInô
(
uöt32_t
 
FSMC_B™k
);

643 
FSMC_NANDInô
(
FSMC_NANDInôTy≥Def
* 
FSMC_NANDInôSåu˘
);

644 
FSMC_NANDSåu˘Inô
(
FSMC_NANDInôTy≥Def
* 
FSMC_NANDInôSåu˘
);

645 
FSMC_NANDCmd
(
uöt32_t
 
FSMC_B™k
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

646 
FSMC_NANDECCCmd
(
uöt32_t
 
FSMC_B™k
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

647 
uöt32_t
 
FSMC_GëECC
(uöt32_à
FSMC_B™k
);

650 
FSMC_PCCARDDeInô
();

651 
FSMC_PCCARDInô
(
FSMC_PCCARDInôTy≥Def
* 
FSMC_PCCARDInôSåu˘
);

652 
FSMC_PCCARDSåu˘Inô
(
FSMC_PCCARDInôTy≥Def
* 
FSMC_PCCARDInôSåu˘
);

653 
FSMC_PCCARDCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

656 
FSMC_ITC⁄fig
(
uöt32_t
 
FSMC_B™k
, uöt32_à
FSMC_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

657 
FœgSètus
 
FSMC_GëFœgSètus
(
uöt32_t
 
FSMC_B™k
, uöt32_à
FSMC_FLAG
);

658 
FSMC_CÀ¨Fœg
(
uöt32_t
 
FSMC_B™k
, uöt32_à
FSMC_FLAG
);

659 
ITSètus
 
FSMC_GëITSètus
(
uöt32_t
 
FSMC_B™k
, uöt32_à
FSMC_IT
);

660 
FSMC_CÀ¨ITPídögBô
(
uöt32_t
 
FSMC_B™k
, uöt32_à
FSMC_IT
);

662 #ifde‡
__˝lu•lus


	@stm32f4xx_gpio.h

30 #i‚de‡
__STM32F4xx_GPIO_H


31 
	#__STM32F4xx_GPIO_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

50 
	#IS_GPIO_ALL_PERIPH
(
PERIPH
Ë(((PERIPHË=
GPIOA
Ë|| \

	)

51 ((
PERIPH
Ë=
GPIOB
) || \

52 ((
PERIPH
Ë=
GPIOC
) || \

53 ((
PERIPH
Ë=
GPIOD
) || \

54 ((
PERIPH
Ë=
GPIOE
) || \

55 ((
PERIPH
Ë=
GPIOF
) || \

56 ((
PERIPH
Ë=
GPIOG
) || \

57 ((
PERIPH
Ë=
GPIOH
) || \

58 ((
PERIPH
Ë=
GPIOI
) || \

59 ((
PERIPH
Ë=
GPIOJ
) || \

60 ((
PERIPH
Ë=
GPIOK
))

67 
GPIO_Mode_IN
 = 0x00,

68 
GPIO_Mode_OUT
 = 0x01,

69 
GPIO_Mode_AF
 = 0x02,

70 
GPIO_Mode_AN
 = 0x03

71 }
	tGPIOMode_Ty≥Def
;

72 
	#IS_GPIO_MODE
(
MODE
Ë(((MODEË=
GPIO_Mode_IN
Ë|| ((MODEË=
GPIO_Mode_OUT
Ë|| \

	)

73 ((
MODE
Ë=
GPIO_Mode_AF
)|| ((MODEË=
GPIO_Mode_AN
))

80 
GPIO_OTy≥_PP
 = 0x00,

81 
GPIO_OTy≥_OD
 = 0x01

82 }
	tGPIOOTy≥_Ty≥Def
;

83 
	#IS_GPIO_OTYPE
(
OTYPE
Ë(((OTYPEË=
GPIO_OTy≥_PP
Ë|| ((OTYPEË=
GPIO_OTy≥_OD
))

	)

91 
GPIO_Low_S≥ed
 = 0x00,

92 
GPIO_Medium_S≥ed
 = 0x01,

93 
GPIO_Fa°_S≥ed
 = 0x02,

94 
GPIO_High_S≥ed
 = 0x03

95 }
	tGPIOS≥ed_Ty≥Def
;

98 
	#GPIO_S≥ed_2MHz
 
GPIO_Low_S≥ed


	)

99 
	#GPIO_S≥ed_25MHz
 
GPIO_Medium_S≥ed


	)

100 
	#GPIO_S≥ed_50MHz
 
GPIO_Fa°_S≥ed


	)

101 
	#GPIO_S≥ed_100MHz
 
GPIO_High_S≥ed


	)

103 
	#IS_GPIO_SPEED
(
SPEED
Ë(((SPEEDË=
GPIO_Low_S≥ed
Ë|| ((SPEEDË=
GPIO_Medium_S≥ed
Ë|| \

	)

104 ((
SPEED
Ë=
GPIO_Fa°_S≥ed
)|| ((SPEEDË=
GPIO_High_S≥ed
))

111 
GPIO_PuPd_NOPULL
 = 0x00,

112 
GPIO_PuPd_UP
 = 0x01,

113 
GPIO_PuPd_DOWN
 = 0x02

114 }
	tGPIOPuPd_Ty≥Def
;

115 
	#IS_GPIO_PUPD
(
PUPD
Ë(((PUPDË=
GPIO_PuPd_NOPULL
Ë|| ((PUPDË=
GPIO_PuPd_UP
Ë|| \

	)

116 ((
PUPD
Ë=
GPIO_PuPd_DOWN
))

123 
Bô_RESET
 = 0,

124 
Bô_SET


125 }
	tBôA˘i⁄
;

126 
	#IS_GPIO_BIT_ACTION
(
ACTION
Ë(((ACTIONË=
Bô_RESET
Ë|| ((ACTIONË=
Bô_SET
))

	)

134 
uöt32_t
 
GPIO_Pö
;

137 
GPIOMode_Ty≥Def
 
GPIO_Mode
;

140 
GPIOS≥ed_Ty≥Def
 
GPIO_S≥ed
;

143 
GPIOOTy≥_Ty≥Def
 
GPIO_OTy≥
;

146 
GPIOPuPd_Ty≥Def
 
GPIO_PuPd
;

148 }
	tGPIO_InôTy≥Def
;

159 
	#GPIO_Pö_0
 ((
uöt16_t
)0x0001Ë

	)

160 
	#GPIO_Pö_1
 ((
uöt16_t
)0x0002Ë

	)

161 
	#GPIO_Pö_2
 ((
uöt16_t
)0x0004Ë

	)

162 
	#GPIO_Pö_3
 ((
uöt16_t
)0x0008Ë

	)

163 
	#GPIO_Pö_4
 ((
uöt16_t
)0x0010Ë

	)

164 
	#GPIO_Pö_5
 ((
uöt16_t
)0x0020Ë

	)

165 
	#GPIO_Pö_6
 ((
uöt16_t
)0x0040Ë

	)

166 
	#GPIO_Pö_7
 ((
uöt16_t
)0x0080Ë

	)

167 
	#GPIO_Pö_8
 ((
uöt16_t
)0x0100Ë

	)

168 
	#GPIO_Pö_9
 ((
uöt16_t
)0x0200Ë

	)

169 
	#GPIO_Pö_10
 ((
uöt16_t
)0x0400Ë

	)

170 
	#GPIO_Pö_11
 ((
uöt16_t
)0x0800Ë

	)

171 
	#GPIO_Pö_12
 ((
uöt16_t
)0x1000Ë

	)

172 
	#GPIO_Pö_13
 ((
uöt16_t
)0x2000Ë

	)

173 
	#GPIO_Pö_14
 ((
uöt16_t
)0x4000Ë

	)

174 
	#GPIO_Pö_15
 ((
uöt16_t
)0x8000Ë

	)

175 
	#GPIO_Pö_AŒ
 ((
uöt16_t
)0xFFFFË

	)

177 
	#GPIO_PIN_MASK
 ((
uöt32_t
)0x0000FFFFË

	)

178 
	#IS_GPIO_PIN
(
PIN
Ë(((PINË& 
GPIO_PIN_MASK
 ) !(
uöt32_t
)0x00)

	)

179 
	#IS_GET_GPIO_PIN
(
PIN
Ë(((PINË=
GPIO_Pö_0
Ë|| \

	)

180 ((
PIN
Ë=
GPIO_Pö_1
) || \

181 ((
PIN
Ë=
GPIO_Pö_2
) || \

182 ((
PIN
Ë=
GPIO_Pö_3
) || \

183 ((
PIN
Ë=
GPIO_Pö_4
) || \

184 ((
PIN
Ë=
GPIO_Pö_5
) || \

185 ((
PIN
Ë=
GPIO_Pö_6
) || \

186 ((
PIN
Ë=
GPIO_Pö_7
) || \

187 ((
PIN
Ë=
GPIO_Pö_8
) || \

188 ((
PIN
Ë=
GPIO_Pö_9
) || \

189 ((
PIN
Ë=
GPIO_Pö_10
) || \

190 ((
PIN
Ë=
GPIO_Pö_11
) || \

191 ((
PIN
Ë=
GPIO_Pö_12
) || \

192 ((
PIN
Ë=
GPIO_Pö_13
) || \

193 ((
PIN
Ë=
GPIO_Pö_14
) || \

194 ((
PIN
Ë=
GPIO_Pö_15
))

203 
	#GPIO_PöSour˚0
 ((
uöt8_t
)0x00)

	)

204 
	#GPIO_PöSour˚1
 ((
uöt8_t
)0x01)

	)

205 
	#GPIO_PöSour˚2
 ((
uöt8_t
)0x02)

	)

206 
	#GPIO_PöSour˚3
 ((
uöt8_t
)0x03)

	)

207 
	#GPIO_PöSour˚4
 ((
uöt8_t
)0x04)

	)

208 
	#GPIO_PöSour˚5
 ((
uöt8_t
)0x05)

	)

209 
	#GPIO_PöSour˚6
 ((
uöt8_t
)0x06)

	)

210 
	#GPIO_PöSour˚7
 ((
uöt8_t
)0x07)

	)

211 
	#GPIO_PöSour˚8
 ((
uöt8_t
)0x08)

	)

212 
	#GPIO_PöSour˚9
 ((
uöt8_t
)0x09)

	)

213 
	#GPIO_PöSour˚10
 ((
uöt8_t
)0x0A)

	)

214 
	#GPIO_PöSour˚11
 ((
uöt8_t
)0x0B)

	)

215 
	#GPIO_PöSour˚12
 ((
uöt8_t
)0x0C)

	)

216 
	#GPIO_PöSour˚13
 ((
uöt8_t
)0x0D)

	)

217 
	#GPIO_PöSour˚14
 ((
uöt8_t
)0x0E)

	)

218 
	#GPIO_PöSour˚15
 ((
uöt8_t
)0x0F)

	)

220 
	#IS_GPIO_PIN_SOURCE
(
PINSOURCE
Ë(((PINSOURCEË=
GPIO_PöSour˚0
Ë|| \

	)

221 ((
PINSOURCE
Ë=
GPIO_PöSour˚1
) || \

222 ((
PINSOURCE
Ë=
GPIO_PöSour˚2
) || \

223 ((
PINSOURCE
Ë=
GPIO_PöSour˚3
) || \

224 ((
PINSOURCE
Ë=
GPIO_PöSour˚4
) || \

225 ((
PINSOURCE
Ë=
GPIO_PöSour˚5
) || \

226 ((
PINSOURCE
Ë=
GPIO_PöSour˚6
) || \

227 ((
PINSOURCE
Ë=
GPIO_PöSour˚7
) || \

228 ((
PINSOURCE
Ë=
GPIO_PöSour˚8
) || \

229 ((
PINSOURCE
Ë=
GPIO_PöSour˚9
) || \

230 ((
PINSOURCE
Ë=
GPIO_PöSour˚10
) || \

231 ((
PINSOURCE
Ë=
GPIO_PöSour˚11
) || \

232 ((
PINSOURCE
Ë=
GPIO_PöSour˚12
) || \

233 ((
PINSOURCE
Ë=
GPIO_PöSour˚13
) || \

234 ((
PINSOURCE
Ë=
GPIO_PöSour˚14
) || \

235 ((
PINSOURCE
Ë=
GPIO_PöSour˚15
))

246 
	#GPIO_AF_RTC_50Hz
 ((
uöt8_t
)0x00Ë

	)

247 
	#GPIO_AF_MCO
 ((
uöt8_t
)0x00Ë

	)

248 
	#GPIO_AF_TAMPER
 ((
uöt8_t
)0x00Ë

	)

249 
	#GPIO_AF_SWJ
 ((
uöt8_t
)0x00Ë

	)

250 
	#GPIO_AF_TRACE
 ((
uöt8_t
)0x00Ë

	)

255 
	#GPIO_AF_TIM1
 ((
uöt8_t
)0x01Ë

	)

256 
	#GPIO_AF_TIM2
 ((
uöt8_t
)0x01Ë

	)

261 
	#GPIO_AF_TIM3
 ((
uöt8_t
)0x02Ë

	)

262 
	#GPIO_AF_TIM4
 ((
uöt8_t
)0x02Ë

	)

263 
	#GPIO_AF_TIM5
 ((
uöt8_t
)0x02Ë

	)

268 
	#GPIO_AF_TIM8
 ((
uöt8_t
)0x03Ë

	)

269 
	#GPIO_AF_TIM9
 ((
uöt8_t
)0x03Ë

	)

270 
	#GPIO_AF_TIM10
 ((
uöt8_t
)0x03Ë

	)

271 
	#GPIO_AF_TIM11
 ((
uöt8_t
)0x03Ë

	)

276 
	#GPIO_AF_I2C1
 ((
uöt8_t
)0x04Ë

	)

277 
	#GPIO_AF_I2C2
 ((
uöt8_t
)0x04Ë

	)

278 
	#GPIO_AF_I2C3
 ((
uöt8_t
)0x04Ë

	)

283 
	#GPIO_AF_SPI1
 ((
uöt8_t
)0x05Ë

	)

284 
	#GPIO_AF_SPI2
 ((
uöt8_t
)0x05Ë

	)

285 
	#GPIO_AF5_SPI3
 ((
uöt8_t
)0x05Ë

	)

286 
	#GPIO_AF_SPI4
 ((
uöt8_t
)0x05Ë

	)

287 
	#GPIO_AF_SPI5
 ((
uöt8_t
)0x05Ë

	)

288 
	#GPIO_AF_SPI6
 ((
uöt8_t
)0x05Ë

	)

293 
	#GPIO_AF_SPI3
 ((
uöt8_t
)0x06Ë

	)

294 
	#GPIO_AF6_SPI2
 ((
uöt8_t
)0x06Ë

	)

295 
	#GPIO_AF6_SPI4
 ((
uöt8_t
)0x06Ë

	)

296 
	#GPIO_AF6_SPI5
 ((
uöt8_t
)0x06Ë

	)

297 
	#GPIO_AF_SAI1
 ((
uöt8_t
)0x06Ë

	)

302 
	#GPIO_AF_USART1
 ((
uöt8_t
)0x07Ë

	)

303 
	#GPIO_AF_USART2
 ((
uöt8_t
)0x07Ë

	)

304 
	#GPIO_AF_USART3
 ((
uöt8_t
)0x07Ë

	)

305 
	#GPIO_AF7_SPI3
 ((
uöt8_t
)0x07Ë

	)

310 
	#GPIO_AF_I2S3ext
 
GPIO_AF7_SPI3


	)

315 
	#GPIO_AF_UART4
 ((
uöt8_t
)0x08Ë

	)

316 
	#GPIO_AF_UART5
 ((
uöt8_t
)0x08Ë

	)

317 
	#GPIO_AF_USART6
 ((
uöt8_t
)0x08Ë

	)

318 
	#GPIO_AF_UART7
 ((
uöt8_t
)0x08Ë

	)

319 
	#GPIO_AF_UART8
 ((
uöt8_t
)0x08Ë

	)

324 
	#GPIO_AF_CAN1
 ((
uöt8_t
)0x09Ë

	)

325 
	#GPIO_AF_CAN2
 ((
uöt8_t
)0x09Ë

	)

326 
	#GPIO_AF_TIM12
 ((
uöt8_t
)0x09Ë

	)

327 
	#GPIO_AF_TIM13
 ((
uöt8_t
)0x09Ë

	)

328 
	#GPIO_AF_TIM14
 ((
uöt8_t
)0x09Ë

	)

330 
	#GPIO_AF9_I2C2
 ((
uöt8_t
)0x09Ë

	)

331 
	#GPIO_AF9_I2C3
 ((
uöt8_t
)0x09Ë

	)

336 
	#GPIO_AF_OTG_FS
 ((
uöt8_t
)0xAË

	)

337 
	#GPIO_AF_OTG_HS
 ((
uöt8_t
)0xAË

	)

342 
	#GPIO_AF_ETH
 ((
uöt8_t
)0x0BË

	)

347 #i‡
deföed
 (
STM32F40_41xxx
)

348 
	#GPIO_AF_FSMC
 ((
uöt8_t
)0xCË

	)

351 #i‡
deföed
 (
STM32F427_437xx
Ë|| deföed (
STM32F429_439xx
)

352 
	#GPIO_AF_FMC
 ((
uöt8_t
)0xCË

	)

355 
	#GPIO_AF_OTG_HS_FS
 ((
uöt8_t
)0xCË

	)

356 
	#GPIO_AF_SDIO
 ((
uöt8_t
)0xCË

	)

361 
	#GPIO_AF_DCMI
 ((
uöt8_t
)0x0DË

	)

367 
	#GPIO_AF_LTDC
 ((
uöt8_t
)0x0EË

	)

372 
	#GPIO_AF_EVENTOUT
 ((
uöt8_t
)0x0FË

	)

374 #i‡
deföed
 (
STM32F40_41xxx
)

375 
	#IS_GPIO_AF
(
AF
Ë(((AFË=
GPIO_AF_RTC_50Hz
Ë|| ((AFË=
GPIO_AF_TIM14
Ë|| \

	)

376 ((
AF
Ë=
GPIO_AF_MCO
Ë|| ((AFË=
GPIO_AF_TAMPER
) || \

377 ((
AF
Ë=
GPIO_AF_SWJ
Ë|| ((AFË=
GPIO_AF_TRACE
) || \

378 ((
AF
Ë=
GPIO_AF_TIM1
Ë|| ((AFË=
GPIO_AF_TIM2
) || \

379 ((
AF
Ë=
GPIO_AF_TIM3
Ë|| ((AFË=
GPIO_AF_TIM4
) || \

380 ((
AF
Ë=
GPIO_AF_TIM5
Ë|| ((AFË=
GPIO_AF_TIM8
) || \

381 ((
AF
Ë=
GPIO_AF_I2C1
Ë|| ((AFË=
GPIO_AF_I2C2
) || \

382 ((
AF
Ë=
GPIO_AF_I2C3
Ë|| ((AFË=
GPIO_AF_SPI1
) || \

383 ((
AF
Ë=
GPIO_AF_SPI2
Ë|| ((AFË=
GPIO_AF_TIM13
) || \

384 ((
AF
Ë=
GPIO_AF_SPI3
Ë|| ((AFË=
GPIO_AF_TIM14
) || \

385 ((
AF
Ë=
GPIO_AF_USART1
Ë|| ((AFË=
GPIO_AF_USART2
) || \

386 ((
AF
Ë=
GPIO_AF_USART3
Ë|| ((AFË=
GPIO_AF_UART4
) || \

387 ((
AF
Ë=
GPIO_AF_UART5
Ë|| ((AFË=
GPIO_AF_USART6
) || \

388 ((
AF
Ë=
GPIO_AF_CAN1
Ë|| ((AFË=
GPIO_AF_CAN2
) || \

389 ((
AF
Ë=
GPIO_AF_OTG_FS
Ë|| ((AFË=
GPIO_AF_OTG_HS
) || \

390 ((
AF
Ë=
GPIO_AF_ETH
Ë|| ((AFË=
GPIO_AF_OTG_HS_FS
) || \

391 ((
AF
Ë=
GPIO_AF_SDIO
Ë|| ((AFË=
GPIO_AF_DCMI
) || \

392 ((
AF
Ë=
GPIO_AF_EVENTOUT
Ë|| ((AFË=
GPIO_AF_FSMC
))

395 #i‡
deföed
 (
STM32F401xx
)

396 
	#IS_GPIO_AF
(
AF
Ë(((AFË=
GPIO_AF_RTC_50Hz
Ë|| ((AFË=
GPIO_AF_TIM14
Ë|| \

	)

397 ((
AF
Ë=
GPIO_AF_MCO
Ë|| ((AFË=
GPIO_AF_TAMPER
) || \

398 ((
AF
Ë=
GPIO_AF_SWJ
Ë|| ((AFË=
GPIO_AF_TRACE
) || \

399 ((
AF
Ë=
GPIO_AF_TIM1
Ë|| ((AFË=
GPIO_AF_TIM2
) || \

400 ((
AF
Ë=
GPIO_AF_TIM3
Ë|| ((AFË=
GPIO_AF_TIM4
) || \

401 ((
AF
Ë=
GPIO_AF_TIM5
Ë|| ((AFË=
GPIO_AF_TIM8
) || \

402 ((
AF
Ë=
GPIO_AF_I2C1
Ë|| ((AFË=
GPIO_AF_I2C2
) || \

403 ((
AF
Ë=
GPIO_AF_I2C3
Ë|| ((AFË=
GPIO_AF_SPI1
) || \

404 ((
AF
Ë=
GPIO_AF_SPI2
Ë|| ((AFË=
GPIO_AF_TIM13
) || \

405 ((
AF
Ë=
GPIO_AF_SPI3
Ë|| ((AFË=
GPIO_AF_TIM14
) || \

406 ((
AF
Ë=
GPIO_AF_USART1
Ë|| ((AFË=
GPIO_AF_USART2
) || \

407 ((
AF
Ë=
GPIO_AF_SDIO
Ë|| ((AFË=
GPIO_AF_USART6
) || \

408 ((
AF
Ë=
GPIO_AF_OTG_FS
Ë|| ((AFË=
GPIO_AF_OTG_HS
) || \

409 ((
AF
Ë=
GPIO_AF_EVENTOUT
Ë|| ((AFË=
GPIO_AF_SPI4
))

412 #i‡
deföed
 (
STM32F411xE
)

413 
	#IS_GPIO_AF
(
AF
Ë(((AFË< 16Ë&& ((AFË!11Ë&& ((AFË!13Ë&& ((AFË!14))

	)

416 #i‡
deföed
 (
STM32F427_437xx
Ë|| deföed (
STM32F429_439xx
)

417 
	#IS_GPIO_AF
(
AF
Ë(((AFË=
GPIO_AF_RTC_50Hz
Ë|| ((AFË=
GPIO_AF_TIM14
Ë|| \

	)

418 ((
AF
Ë=
GPIO_AF_MCO
Ë|| ((AFË=
GPIO_AF_TAMPER
) || \

419 ((
AF
Ë=
GPIO_AF_SWJ
Ë|| ((AFË=
GPIO_AF_TRACE
) || \

420 ((
AF
Ë=
GPIO_AF_TIM1
Ë|| ((AFË=
GPIO_AF_TIM2
) || \

421 ((
AF
Ë=
GPIO_AF_TIM3
Ë|| ((AFË=
GPIO_AF_TIM4
) || \

422 ((
AF
Ë=
GPIO_AF_TIM5
Ë|| ((AFË=
GPIO_AF_TIM8
) || \

423 ((
AF
Ë=
GPIO_AF_I2C1
Ë|| ((AFË=
GPIO_AF_I2C2
) || \

424 ((
AF
Ë=
GPIO_AF_I2C3
Ë|| ((AFË=
GPIO_AF_SPI1
) || \

425 ((
AF
Ë=
GPIO_AF_SPI2
Ë|| ((AFË=
GPIO_AF_TIM13
) || \

426 ((
AF
Ë=
GPIO_AF_SPI3
Ë|| ((AFË=
GPIO_AF_TIM14
) || \

427 ((
AF
Ë=
GPIO_AF_USART1
Ë|| ((AFË=
GPIO_AF_USART2
) || \

428 ((
AF
Ë=
GPIO_AF_USART3
Ë|| ((AFË=
GPIO_AF_UART4
) || \

429 ((
AF
Ë=
GPIO_AF_UART5
Ë|| ((AFË=
GPIO_AF_USART6
) || \

430 ((
AF
Ë=
GPIO_AF_CAN1
Ë|| ((AFË=
GPIO_AF_CAN2
) || \

431 ((
AF
Ë=
GPIO_AF_OTG_FS
Ë|| ((AFË=
GPIO_AF_OTG_HS
) || \

432 ((
AF
Ë=
GPIO_AF_ETH
Ë|| ((AFË=
GPIO_AF_OTG_HS_FS
) || \

433 ((
AF
Ë=
GPIO_AF_SDIO
Ë|| ((AFË=
GPIO_AF_DCMI
) || \

434 ((
AF
Ë=
GPIO_AF_EVENTOUT
Ë|| ((AFË=
GPIO_AF_SPI4
) || \

435 ((
AF
Ë=
GPIO_AF_SPI5
Ë|| ((AFË=
GPIO_AF_SPI6
) || \

436 ((
AF
Ë=
GPIO_AF_UART7
Ë|| ((AFË=
GPIO_AF_UART8
) || \

437 ((
AF
Ë=
GPIO_AF_FMC
Ë|| ((AFË=
GPIO_AF_SAI1
) || \

438 ((
AF
Ë=
GPIO_AF_LTDC
))

449 
	#GPIO_Mode_AIN
 
GPIO_Mode_AN


	)

451 
	#GPIO_AF_OTG1_FS
 
GPIO_AF_OTG_FS


	)

452 
	#GPIO_AF_OTG2_HS
 
GPIO_AF_OTG_HS


	)

453 
	#GPIO_AF_OTG2_FS
 
GPIO_AF_OTG_HS_FS


	)

467 
GPIO_DeInô
(
GPIO_Ty≥Def
* 
GPIOx
);

470 
GPIO_Inô
(
GPIO_Ty≥Def
* 
GPIOx
, 
GPIO_InôTy≥Def
* 
GPIO_InôSåu˘
);

471 
GPIO_Såu˘Inô
(
GPIO_InôTy≥Def
* 
GPIO_InôSåu˘
);

472 
GPIO_PöLockC⁄fig
(
GPIO_Ty≥Def
* 
GPIOx
, 
uöt16_t
 
GPIO_Pö
);

475 
uöt8_t
 
GPIO_RódI≈utD©aBô
(
GPIO_Ty≥Def
* 
GPIOx
, 
uöt16_t
 
GPIO_Pö
);

476 
uöt16_t
 
GPIO_RódI≈utD©a
(
GPIO_Ty≥Def
* 
GPIOx
);

477 
uöt8_t
 
GPIO_RódOuçutD©aBô
(
GPIO_Ty≥Def
* 
GPIOx
, 
uöt16_t
 
GPIO_Pö
);

478 
uöt16_t
 
GPIO_RódOuçutD©a
(
GPIO_Ty≥Def
* 
GPIOx
);

479 
GPIO_SëBôs
(
GPIO_Ty≥Def
* 
GPIOx
, 
uöt16_t
 
GPIO_Pö
);

480 
GPIO_Re£tBôs
(
GPIO_Ty≥Def
* 
GPIOx
, 
uöt16_t
 
GPIO_Pö
);

481 
GPIO_WrôeBô
(
GPIO_Ty≥Def
* 
GPIOx
, 
uöt16_t
 
GPIO_Pö
, 
BôA˘i⁄
 
BôVÆ
);

482 
GPIO_Wrôe
(
GPIO_Ty≥Def
* 
GPIOx
, 
uöt16_t
 
P‹tVÆ
);

483 
GPIO_ToggÀBôs
(
GPIO_Ty≥Def
* 
GPIOx
, 
uöt16_t
 
GPIO_Pö
);

486 
GPIO_PöAFC⁄fig
(
GPIO_Ty≥Def
* 
GPIOx
, 
uöt16_t
 
GPIO_PöSour˚
, 
uöt8_t
 
GPIO_AF
);

488 #ifde‡
__˝lu•lus


	@stm32f4xx_hash.h

30 #i‚de‡
__STM32F4xx_HASH_H


31 
	#__STM32F4xx_HASH_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

55 
uöt32_t
 
HASH_AlgoSñe˘i⁄
;

57 
uöt32_t
 
HASH_AlgoMode
;

59 
uöt32_t
 
HASH_D©aTy≥
;

62 
uöt32_t
 
HASH_HMACKeyTy≥
;

64 }
	tHASH_InôTy≥Def
;

71 
uöt32_t
 
D©a
[8];

75 } 
	tHASH_MsgDige°
;

82 
uöt32_t
 
HASH_IMR
;

83 
uöt32_t
 
HASH_STR
;

84 
uöt32_t
 
HASH_CR
;

85 
uöt32_t
 
HASH_CSR
[54];

86 }
	tHASH_C⁄ãxt
;

97 
	#HASH_AlgoSñe˘i⁄_SHA1
 ((
uöt32_t
)0x0000Ë

	)

98 
	#HASH_AlgoSñe˘i⁄_SHA224
 
HASH_CR_ALGO_1


	)

99 
	#HASH_AlgoSñe˘i⁄_SHA256
 
HASH_CR_ALGO


	)

100 
	#HASH_AlgoSñe˘i⁄_MD5
 
HASH_CR_ALGO_0


	)

102 
	#IS_HASH_ALGOSELECTION
(
ALGOSELECTION
Ë(((ALGOSELECTIONË=
HASH_AlgoSñe˘i⁄_SHA1
Ë|| \

	)

103 ((
ALGOSELECTION
Ë=
HASH_AlgoSñe˘i⁄_SHA224
) || \

104 ((
ALGOSELECTION
Ë=
HASH_AlgoSñe˘i⁄_SHA256
) || \

105 ((
ALGOSELECTION
Ë=
HASH_AlgoSñe˘i⁄_MD5
))

113 
	#HASH_AlgoMode_HASH
 ((
uöt32_t
)0x00000000Ë

	)

114 
	#HASH_AlgoMode_HMAC
 
HASH_CR_MODE


	)

116 
	#IS_HASH_ALGOMODE
(
ALGOMODE
Ë(((ALGOMODEË=
HASH_AlgoMode_HASH
Ë|| \

	)

117 ((
ALGOMODE
Ë=
HASH_AlgoMode_HMAC
))

125 
	#HASH_D©aTy≥_32b
 ((
uöt32_t
)0x0000Ë

	)

126 
	#HASH_D©aTy≥_16b
 
HASH_CR_DATATYPE_0


	)

127 
	#HASH_D©aTy≥_8b
 
HASH_CR_DATATYPE_1


	)

128 
	#HASH_D©aTy≥_1b
 
HASH_CR_DATATYPE


	)

130 
	#IS_HASH_DATATYPE
(
DATATYPE
Ë(((DATATYPEË=
HASH_D©aTy≥_32b
)|| \

	)

131 ((
DATATYPE
Ë=
HASH_D©aTy≥_16b
)|| \

132 ((
DATATYPE
Ë=
HASH_D©aTy≥_8b
) || \

133 ((
DATATYPE
Ë=
HASH_D©aTy≥_1b
))

141 
	#HASH_HMACKeyTy≥_Sh‹tKey
 ((
uöt32_t
)0x00000000Ë

	)

142 
	#HASH_HMACKeyTy≥_L⁄gKey
 
HASH_CR_LKEY


	)

144 
	#IS_HASH_HMAC_KEYTYPE
(
KEYTYPE
Ë(((KEYTYPEË=
HASH_HMACKeyTy≥_Sh‹tKey
Ë|| \

	)

145 ((
KEYTYPE
Ë=
HASH_HMACKeyTy≥_L⁄gKey
))

153 
	#IS_HASH_VALIDBITSNUMBER
(
VALIDBITS
Ë((VALIDBITSË<0x1F)

	)

162 
	#HASH_IT_DINI
 
HASH_IMR_DINIM


	)

163 
	#HASH_IT_DCI
 
HASH_IMR_DCIM


	)

165 
	#IS_HASH_IT
(
IT
Ë((((ITË& (
uöt32_t
)0xFFFFFFFCË=0x00000000Ë&& ((ITË!0x00000000))

	)

166 
	#IS_HASH_GET_IT
(
IT
Ë(((ITË=
HASH_IT_DINI
Ë|| ((ITË=
HASH_IT_DCI
))

	)

175 
	#HASH_FLAG_DINIS
 
HASH_SR_DINIS


	)

176 
	#HASH_FLAG_DCIS
 
HASH_SR_DCIS


	)

177 
	#HASH_FLAG_DMAS
 
HASH_SR_DMAS


	)

178 
	#HASH_FLAG_BUSY
 
HASH_SR_BUSY


	)

179 
	#HASH_FLAG_DINNE
 
HASH_CR_DINNE


	)

181 
	#IS_HASH_GET_FLAG
(
FLAG
Ë(((FLAGË=
HASH_FLAG_DINIS
Ë|| \

	)

182 ((
FLAG
Ë=
HASH_FLAG_DCIS
) || \

183 ((
FLAG
Ë=
HASH_FLAG_DMAS
) || \

184 ((
FLAG
Ë=
HASH_FLAG_BUSY
) || \

185 ((
FLAG
Ë=
HASH_FLAG_DINNE
))

187 
	#IS_HASH_CLEAR_FLAG
(
FLAG
)(((FLAGË=
HASH_FLAG_DINIS
Ë|| \

	)

188 ((
FLAG
Ë=
HASH_FLAG_DCIS
))

202 
HASH_DeInô
();

205 
HASH_Inô
(
HASH_InôTy≥Def
* 
HASH_InôSåu˘
);

206 
HASH_Såu˘Inô
(
HASH_InôTy≥Def
* 
HASH_InôSåu˘
);

207 
HASH_Re£t
();

210 
HASH_D©aIn
(
uöt32_t
 
D©a
);

211 
uöt8_t
 
HASH_GëInFIFOW‹dsNbr
();

212 
HASH_SëLa°W‹dVÆidBôsNbr
(
uöt16_t
 
VÆidNumbî
);

213 
HASH_SèπDige°
();

214 
HASH_AutoSèπDige°
(
Fun˘i⁄ÆSèã
 
NewSèã
);

215 
HASH_GëDige°
(
HASH_MsgDige°
* 
HASH_MesßgeDige°
);

218 
HASH_SaveC⁄ãxt
(
HASH_C⁄ãxt
* 
HASH_C⁄ãxtSave
);

219 
HASH_Re°‹eC⁄ãxt
(
HASH_C⁄ãxt
* 
HASH_C⁄ãxtRe°‹e
);

222 
HASH_DMACmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

225 
HASH_ITC⁄fig
(
uöt32_t
 
HASH_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

226 
FœgSètus
 
HASH_GëFœgSètus
(
uöt32_t
 
HASH_FLAG
);

227 
HASH_CÀ¨Fœg
(
uöt32_t
 
HASH_FLAG
);

228 
ITSètus
 
HASH_GëITSètus
(
uöt32_t
 
HASH_IT
);

229 
HASH_CÀ¨ITPídögBô
(
uöt32_t
 
HASH_IT
);

232 
Eº‹Sètus
 
HASH_SHA1
(
uöt8_t
 *
I≈ut
, 
uöt32_t
 
IÀn
, uöt8_à
Ouçut
[20]);

233 
Eº‹Sètus
 
HMAC_SHA1
(
uöt8_t
 *
Key
, 
uöt32_t
 
KeyÀn
,

234 
uöt8_t
 *
I≈ut
, 
uöt32_t
 
IÀn
,

235 
uöt8_t
 
Ouçut
[20]);

238 
Eº‹Sètus
 
HASH_MD5
(
uöt8_t
 *
I≈ut
, 
uöt32_t
 
IÀn
, uöt8_à
Ouçut
[16]);

239 
Eº‹Sètus
 
HMAC_MD5
(
uöt8_t
 *
Key
, 
uöt32_t
 
KeyÀn
,

240 
uöt8_t
 *
I≈ut
, 
uöt32_t
 
IÀn
,

241 
uöt8_t
 
Ouçut
[16]);

243 #ifde‡
__˝lu•lus


	@stm32f4xx_i2c.h

30 #i‚de‡
__STM32F4xx_I2C_H


31 
	#__STM32F4xx_I2C_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

56 
uöt32_t
 
I2C_ClockS≥ed
;

59 
uöt16_t
 
I2C_Mode
;

62 
uöt16_t
 
I2C_DutyCy˛e
;

65 
uöt16_t
 
I2C_OwnAddªss1
;

68 
uöt16_t
 
I2C_Ack
;

71 
uöt16_t
 
I2C_AcknowÀdgedAddªss
;

73 }
	tI2C_InôTy≥Def
;

82 
	#IS_I2C_ALL_PERIPH
(
PERIPH
Ë(((PERIPHË=
I2C1
Ë|| \

	)

83 ((
PERIPH
Ë=
I2C2
) || \

84 ((
PERIPH
Ë=
I2C3
))

90 
	#IS_I2C_DIGITAL_FILTER
(
FILTER
Ë((FILTERË<0x0000000F)

	)

100 
	#I2C_Mode_I2C
 ((
uöt16_t
)0x0000)

	)

101 
	#I2C_Mode_SMBusDevi˚
 ((
uöt16_t
)0x0002)

	)

102 
	#I2C_Mode_SMBusHo°
 ((
uöt16_t
)0x000A)

	)

103 
	#IS_I2C_MODE
(
MODE
Ë(((MODEË=
I2C_Mode_I2C
Ë|| \

	)

104 ((
MODE
Ë=
I2C_Mode_SMBusDevi˚
) || \

105 ((
MODE
Ë=
I2C_Mode_SMBusHo°
))

114 
	#I2C_DutyCy˛e_16_9
 ((
uöt16_t
)0x4000Ë

	)

115 
	#I2C_DutyCy˛e_2
 ((
uöt16_t
)0xBFFFË

	)

116 
	#IS_I2C_DUTY_CYCLE
(
CYCLE
Ë(((CYCLEË=
I2C_DutyCy˛e_16_9
Ë|| \

	)

117 ((
CYCLE
Ë=
I2C_DutyCy˛e_2
))

126 
	#I2C_Ack_E«bÀ
 ((
uöt16_t
)0x0400)

	)

127 
	#I2C_Ack_DißbÀ
 ((
uöt16_t
)0x0000)

	)

128 
	#IS_I2C_ACK_STATE
(
STATE
Ë(((STATEË=
I2C_Ack_E«bÀ
Ë|| \

	)

129 ((
STATE
Ë=
I2C_Ack_DißbÀ
))

138 
	#I2C_Dúe˘i⁄_Tønsmôãr
 ((
uöt8_t
)0x00)

	)

139 
	#I2C_Dúe˘i⁄_Re˚ivî
 ((
uöt8_t
)0x01)

	)

140 
	#IS_I2C_DIRECTION
(
DIRECTION
Ë(((DIRECTIONË=
I2C_Dúe˘i⁄_Tønsmôãr
Ë|| \

	)

141 ((
DIRECTION
Ë=
I2C_Dúe˘i⁄_Re˚ivî
))

150 
	#I2C_AcknowÀdgedAddªss_7bô
 ((
uöt16_t
)0x4000)

	)

151 
	#I2C_AcknowÀdgedAddªss_10bô
 ((
uöt16_t
)0xC000)

	)

152 
	#IS_I2C_ACKNOWLEDGE_ADDRESS
(
ADDRESS
Ë(((ADDRESSË=
I2C_AcknowÀdgedAddªss_7bô
Ë|| \

	)

153 ((
ADDRESS
Ë=
I2C_AcknowÀdgedAddªss_10bô
))

162 
	#I2C_Regi°î_CR1
 ((
uöt8_t
)0x00)

	)

163 
	#I2C_Regi°î_CR2
 ((
uöt8_t
)0x04)

	)

164 
	#I2C_Regi°î_OAR1
 ((
uöt8_t
)0x08)

	)

165 
	#I2C_Regi°î_OAR2
 ((
uöt8_t
)0x0C)

	)

166 
	#I2C_Regi°î_DR
 ((
uöt8_t
)0x10)

	)

167 
	#I2C_Regi°î_SR1
 ((
uöt8_t
)0x14)

	)

168 
	#I2C_Regi°î_SR2
 ((
uöt8_t
)0x18)

	)

169 
	#I2C_Regi°î_CCR
 ((
uöt8_t
)0x1C)

	)

170 
	#I2C_Regi°î_TRISE
 ((
uöt8_t
)0x20)

	)

171 
	#IS_I2C_REGISTER
(
REGISTER
Ë(((REGISTERË=
I2C_Regi°î_CR1
Ë|| \

	)

172 ((
REGISTER
Ë=
I2C_Regi°î_CR2
) || \

173 ((
REGISTER
Ë=
I2C_Regi°î_OAR1
) || \

174 ((
REGISTER
Ë=
I2C_Regi°î_OAR2
) || \

175 ((
REGISTER
Ë=
I2C_Regi°î_DR
) || \

176 ((
REGISTER
Ë=
I2C_Regi°î_SR1
) || \

177 ((
REGISTER
Ë=
I2C_Regi°î_SR2
) || \

178 ((
REGISTER
Ë=
I2C_Regi°î_CCR
) || \

179 ((
REGISTER
Ë=
I2C_Regi°î_TRISE
))

188 
	#I2C_NACKPosôi⁄_Next
 ((
uöt16_t
)0x0800)

	)

189 
	#I2C_NACKPosôi⁄_Cuºít
 ((
uöt16_t
)0xF7FF)

	)

190 
	#IS_I2C_NACK_POSITION
(
POSITION
Ë(((POSITIONË=
I2C_NACKPosôi⁄_Next
Ë|| \

	)

191 ((
POSITION
Ë=
I2C_NACKPosôi⁄_Cuºít
))

200 
	#I2C_SMBusAÀπ_Low
 ((
uöt16_t
)0x2000)

	)

201 
	#I2C_SMBusAÀπ_High
 ((
uöt16_t
)0xDFFF)

	)

202 
	#IS_I2C_SMBUS_ALERT
(
ALERT
Ë(((ALERTË=
I2C_SMBusAÀπ_Low
Ë|| \

	)

203 ((
ALERT
Ë=
I2C_SMBusAÀπ_High
))

212 
	#I2C_PECPosôi⁄_Next
 ((
uöt16_t
)0x0800)

	)

213 
	#I2C_PECPosôi⁄_Cuºít
 ((
uöt16_t
)0xF7FF)

	)

214 
	#IS_I2C_PEC_POSITION
(
POSITION
Ë(((POSITIONË=
I2C_PECPosôi⁄_Next
Ë|| \

	)

215 ((
POSITION
Ë=
I2C_PECPosôi⁄_Cuºít
))

224 
	#I2C_IT_BUF
 ((
uöt16_t
)0x0400)

	)

225 
	#I2C_IT_EVT
 ((
uöt16_t
)0x0200)

	)

226 
	#I2C_IT_ERR
 ((
uöt16_t
)0x0100)

	)

227 
	#IS_I2C_CONFIG_IT
(
IT
Ë((((ITË& (
uöt16_t
)0xF8FFË=0x00Ë&& ((ITË!0x00))

	)

236 
	#I2C_IT_SMBALERT
 ((
uöt32_t
)0x01008000)

	)

237 
	#I2C_IT_TIMEOUT
 ((
uöt32_t
)0x01004000)

	)

238 
	#I2C_IT_PECERR
 ((
uöt32_t
)0x01001000)

	)

239 
	#I2C_IT_OVR
 ((
uöt32_t
)0x01000800)

	)

240 
	#I2C_IT_AF
 ((
uöt32_t
)0x01000400)

	)

241 
	#I2C_IT_ARLO
 ((
uöt32_t
)0x01000200)

	)

242 
	#I2C_IT_BERR
 ((
uöt32_t
)0x01000100)

	)

243 
	#I2C_IT_TXE
 ((
uöt32_t
)0x06000080)

	)

244 
	#I2C_IT_RXNE
 ((
uöt32_t
)0x06000040)

	)

245 
	#I2C_IT_STOPF
 ((
uöt32_t
)0x02000010)

	)

246 
	#I2C_IT_ADD10
 ((
uöt32_t
)0x02000008)

	)

247 
	#I2C_IT_BTF
 ((
uöt32_t
)0x02000004)

	)

248 
	#I2C_IT_ADDR
 ((
uöt32_t
)0x02000002)

	)

249 
	#I2C_IT_SB
 ((
uöt32_t
)0x02000001)

	)

251 
	#IS_I2C_CLEAR_IT
(
IT
Ë((((ITË& (
uöt16_t
)0x20FFË=0x00Ë&& ((ITË!(uöt16_t)0x00))

	)

253 
	#IS_I2C_GET_IT
(
IT
Ë(((ITË=
I2C_IT_SMBALERT
Ë|| ((ITË=
I2C_IT_TIMEOUT
Ë|| \

	)

254 ((
IT
Ë=
I2C_IT_PECERR
Ë|| ((ITË=
I2C_IT_OVR
) || \

255 ((
IT
Ë=
I2C_IT_AF
Ë|| ((ITË=
I2C_IT_ARLO
) || \

256 ((
IT
Ë=
I2C_IT_BERR
Ë|| ((ITË=
I2C_IT_TXE
) || \

257 ((
IT
Ë=
I2C_IT_RXNE
Ë|| ((ITË=
I2C_IT_STOPF
) || \

258 ((
IT
Ë=
I2C_IT_ADD10
Ë|| ((ITË=
I2C_IT_BTF
) || \

259 ((
IT
Ë=
I2C_IT_ADDR
Ë|| ((ITË=
I2C_IT_SB
))

272 
	#I2C_FLAG_DUALF
 ((
uöt32_t
)0x00800000)

	)

273 
	#I2C_FLAG_SMBHOST
 ((
uöt32_t
)0x00400000)

	)

274 
	#I2C_FLAG_SMBDEFAULT
 ((
uöt32_t
)0x00200000)

	)

275 
	#I2C_FLAG_GENCALL
 ((
uöt32_t
)0x00100000)

	)

276 
	#I2C_FLAG_TRA
 ((
uöt32_t
)0x00040000)

	)

277 
	#I2C_FLAG_BUSY
 ((
uöt32_t
)0x00020000)

	)

278 
	#I2C_FLAG_MSL
 ((
uöt32_t
)0x00010000)

	)

284 
	#I2C_FLAG_SMBALERT
 ((
uöt32_t
)0x10008000)

	)

285 
	#I2C_FLAG_TIMEOUT
 ((
uöt32_t
)0x10004000)

	)

286 
	#I2C_FLAG_PECERR
 ((
uöt32_t
)0x10001000)

	)

287 
	#I2C_FLAG_OVR
 ((
uöt32_t
)0x10000800)

	)

288 
	#I2C_FLAG_AF
 ((
uöt32_t
)0x10000400)

	)

289 
	#I2C_FLAG_ARLO
 ((
uöt32_t
)0x10000200)

	)

290 
	#I2C_FLAG_BERR
 ((
uöt32_t
)0x10000100)

	)

291 
	#I2C_FLAG_TXE
 ((
uöt32_t
)0x10000080)

	)

292 
	#I2C_FLAG_RXNE
 ((
uöt32_t
)0x10000040)

	)

293 
	#I2C_FLAG_STOPF
 ((
uöt32_t
)0x10000010)

	)

294 
	#I2C_FLAG_ADD10
 ((
uöt32_t
)0x10000008)

	)

295 
	#I2C_FLAG_BTF
 ((
uöt32_t
)0x10000004)

	)

296 
	#I2C_FLAG_ADDR
 ((
uöt32_t
)0x10000002)

	)

297 
	#I2C_FLAG_SB
 ((
uöt32_t
)0x10000001)

	)

299 
	#IS_I2C_CLEAR_FLAG
(
FLAG
Ë((((FLAGË& (
uöt16_t
)0x20FFË=0x00Ë&& ((FLAGË!(uöt16_t)0x00))

	)

301 
	#IS_I2C_GET_FLAG
(
FLAG
Ë(((FLAGË=
I2C_FLAG_DUALF
Ë|| ((FLAGË=
I2C_FLAG_SMBHOST
Ë|| \

	)

302 ((
FLAG
Ë=
I2C_FLAG_SMBDEFAULT
Ë|| ((FLAGË=
I2C_FLAG_GENCALL
) || \

303 ((
FLAG
Ë=
I2C_FLAG_TRA
Ë|| ((FLAGË=
I2C_FLAG_BUSY
) || \

304 ((
FLAG
Ë=
I2C_FLAG_MSL
Ë|| ((FLAGË=
I2C_FLAG_SMBALERT
) || \

305 ((
FLAG
Ë=
I2C_FLAG_TIMEOUT
Ë|| ((FLAGË=
I2C_FLAG_PECERR
) || \

306 ((
FLAG
Ë=
I2C_FLAG_OVR
Ë|| ((FLAGË=
I2C_FLAG_AF
) || \

307 ((
FLAG
Ë=
I2C_FLAG_ARLO
Ë|| ((FLAGË=
I2C_FLAG_BERR
) || \

308 ((
FLAG
Ë=
I2C_FLAG_TXE
Ë|| ((FLAGË=
I2C_FLAG_RXNE
) || \

309 ((
FLAG
Ë=
I2C_FLAG_STOPF
Ë|| ((FLAGË=
I2C_FLAG_ADD10
) || \

310 ((
FLAG
Ë=
I2C_FLAG_BTF
Ë|| ((FLAGË=
I2C_FLAG_ADDR
) || \

311 ((
FLAG
Ë=
I2C_FLAG_SB
))

335 
	#I2C_EVENT_MASTER_MODE_SELECT
 ((
uöt32_t
)0x00030001Ë

	)

363 
	#I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED
 ((
uöt32_t
)0x00070082Ë

	)

364 
	#I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED
 ((
uöt32_t
)0x00030002Ë

	)

366 
	#I2C_EVENT_MASTER_MODE_ADDRESS10
 ((
uöt32_t
)0x00030008Ë

	)

399 
	#I2C_EVENT_MASTER_BYTE_RECEIVED
 ((
uöt32_t
)0x00030040Ë

	)

403 
	#I2C_EVENT_MASTER_BYTE_TRANSMITTING
 ((
uöt32_t
)0x00070080Ë

	)

405 
	#I2C_EVENT_MASTER_BYTE_TRANSMITTED
 ((
uöt32_t
)0x00070084Ë

	)

442 
	#I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED
 ((
uöt32_t
)0x00020002Ë

	)

443 
	#I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED
 ((
uöt32_t
)0x00060082Ë

	)

446 
	#I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED
 ((
uöt32_t
)0x00820000Ë

	)

447 
	#I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED
 ((
uöt32_t
)0x00860080Ë

	)

450 
	#I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED
 ((
uöt32_t
)0x00120000Ë

	)

481 
	#I2C_EVENT_SLAVE_BYTE_RECEIVED
 ((
uöt32_t
)0x00020040Ë

	)

483 
	#I2C_EVENT_SLAVE_STOP_DETECTED
 ((
uöt32_t
)0x00000010Ë

	)

487 
	#I2C_EVENT_SLAVE_BYTE_TRANSMITTED
 ((
uöt32_t
)0x00060084Ë

	)

488 
	#I2C_EVENT_SLAVE_BYTE_TRANSMITTING
 ((
uöt32_t
)0x00060080Ë

	)

490 
	#I2C_EVENT_SLAVE_ACK_FAILURE
 ((
uöt32_t
)0x00000400Ë

	)

498 
	#IS_I2C_EVENT
(
EVENT
Ë(((EVENTË=
I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED
Ë|| \

	)

499 ((
EVENT
Ë=
I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED
) || \

500 ((
EVENT
Ë=
I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED
) || \

501 ((
EVENT
Ë=
I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED
) || \

502 ((
EVENT
Ë=
I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED
) || \

503 ((
EVENT
Ë=
I2C_EVENT_SLAVE_BYTE_RECEIVED
) || \

504 ((
EVENT
Ë=(
I2C_EVENT_SLAVE_BYTE_RECEIVED
 | 
I2C_FLAG_DUALF
)) || \

505 ((
EVENT
Ë=(
I2C_EVENT_SLAVE_BYTE_RECEIVED
 | 
I2C_FLAG_GENCALL
)) || \

506 ((
EVENT
Ë=
I2C_EVENT_SLAVE_BYTE_TRANSMITTED
) || \

507 ((
EVENT
Ë=(
I2C_EVENT_SLAVE_BYTE_TRANSMITTED
 | 
I2C_FLAG_DUALF
)) || \

508 ((
EVENT
Ë=(
I2C_EVENT_SLAVE_BYTE_TRANSMITTED
 | 
I2C_FLAG_GENCALL
)) || \

509 ((
EVENT
Ë=
I2C_EVENT_SLAVE_STOP_DETECTED
) || \

510 ((
EVENT
Ë=
I2C_EVENT_MASTER_MODE_SELECT
) || \

511 ((
EVENT
Ë=
I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED
) || \

512 ((
EVENT
Ë=
I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED
) || \

513 ((
EVENT
Ë=
I2C_EVENT_MASTER_BYTE_RECEIVED
) || \

514 ((
EVENT
Ë=
I2C_EVENT_MASTER_BYTE_TRANSMITTED
) || \

515 ((
EVENT
Ë=
I2C_EVENT_MASTER_BYTE_TRANSMITTING
) || \

516 ((
EVENT
Ë=
I2C_EVENT_MASTER_MODE_ADDRESS10
) || \

517 ((
EVENT
Ë=
I2C_EVENT_SLAVE_ACK_FAILURE
))

526 
	#IS_I2C_OWN_ADDRESS1
(
ADDRESS1
Ë((ADDRESS1Ë<0x3FF)

	)

535 
	#IS_I2C_CLOCK_SPEED
(
SPEED
Ë(((SPEEDË>0x1Ë&& ((SPEEDË<400000))

	)

548 
I2C_DeInô
(
I2C_Ty≥Def
* 
I2Cx
);

551 
I2C_Inô
(
I2C_Ty≥Def
* 
I2Cx
, 
I2C_InôTy≥Def
* 
I2C_InôSåu˘
);

552 
I2C_Såu˘Inô
(
I2C_InôTy≥Def
* 
I2C_InôSåu˘
);

553 
I2C_Cmd
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

554 
I2C_DigôÆFûãrC⁄fig
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt16_t
 
I2C_DigôÆFûãr
);

555 
I2C_A«logFûãrCmd
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

556 
I2C_Gíî©eSTART
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

557 
I2C_Gíî©eSTOP
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

558 
I2C_Síd7bôAddªss
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt8_t
 
Addªss
, uöt8_à
I2C_Dúe˘i⁄
);

559 
I2C_AcknowÀdgeC⁄fig
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

560 
I2C_OwnAddªss2C⁄fig
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt8_t
 
Addªss
);

561 
I2C_DuÆAddªssCmd
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

562 
I2C_GíîÆCÆlCmd
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

563 
I2C_So·w¨eRe£tCmd
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

564 
I2C_SåëchClockCmd
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

565 
I2C_Fa°ModeDutyCy˛eC⁄fig
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt16_t
 
I2C_DutyCy˛e
);

566 
I2C_NACKPosôi⁄C⁄fig
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt16_t
 
I2C_NACKPosôi⁄
);

567 
I2C_SMBusAÀπC⁄fig
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt16_t
 
I2C_SMBusAÀπ
);

568 
I2C_ARPCmd
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

571 
I2C_SídD©a
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt8_t
 
D©a
);

572 
uöt8_t
 
I2C_Re˚iveD©a
(
I2C_Ty≥Def
* 
I2Cx
);

575 
I2C_TønsmôPEC
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

576 
I2C_PECPosôi⁄C⁄fig
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt16_t
 
I2C_PECPosôi⁄
);

577 
I2C_CÆcuœãPEC
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

578 
uöt8_t
 
I2C_GëPEC
(
I2C_Ty≥Def
* 
I2Cx
);

581 
I2C_DMACmd
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

582 
I2C_DMALa°Tøns„rCmd
(
I2C_Ty≥Def
* 
I2Cx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

585 
uöt16_t
 
I2C_RódRegi°î
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt8_t
 
I2C_Regi°î
);

586 
I2C_ITC⁄fig
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt16_t
 
I2C_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

678 
Eº‹Sètus
 
I2C_CheckEvít
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt32_t
 
I2C_EVENT
);

684 
uöt32_t
 
I2C_GëLa°Evít
(
I2C_Ty≥Def
* 
I2Cx
);

690 
FœgSètus
 
I2C_GëFœgSètus
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt32_t
 
I2C_FLAG
);

693 
I2C_CÀ¨Fœg
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt32_t
 
I2C_FLAG
);

694 
ITSètus
 
I2C_GëITSètus
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt32_t
 
I2C_IT
);

695 
I2C_CÀ¨ITPídögBô
(
I2C_Ty≥Def
* 
I2Cx
, 
uöt32_t
 
I2C_IT
);

697 #ifde‡
__˝lu•lus


	@stm32f4xx_iwdg.h

30 #i‚de‡
__STM32F4xx_IWDG_H


31 
	#__STM32F4xx_IWDG_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

58 
	#IWDG_WrôeAc˚ss_E«bÀ
 ((
uöt16_t
)0x5555)

	)

59 
	#IWDG_WrôeAc˚ss_DißbÀ
 ((
uöt16_t
)0x0000)

	)

60 
	#IS_IWDG_WRITE_ACCESS
(
ACCESS
Ë(((ACCESSË=
IWDG_WrôeAc˚ss_E«bÀ
Ë|| \

	)

61 ((
ACCESS
Ë=
IWDG_WrôeAc˚ss_DißbÀ
))

69 
	#IWDG_PªsˇÀr_4
 ((
uöt8_t
)0x00)

	)

70 
	#IWDG_PªsˇÀr_8
 ((
uöt8_t
)0x01)

	)

71 
	#IWDG_PªsˇÀr_16
 ((
uöt8_t
)0x02)

	)

72 
	#IWDG_PªsˇÀr_32
 ((
uöt8_t
)0x03)

	)

73 
	#IWDG_PªsˇÀr_64
 ((
uöt8_t
)0x04)

	)

74 
	#IWDG_PªsˇÀr_128
 ((
uöt8_t
)0x05)

	)

75 
	#IWDG_PªsˇÀr_256
 ((
uöt8_t
)0x06)

	)

76 
	#IS_IWDG_PRESCALER
(
PRESCALER
Ë(((PRESCALERË=
IWDG_PªsˇÀr_4
Ë|| \

	)

77 ((
PRESCALER
Ë=
IWDG_PªsˇÀr_8
) || \

78 ((
PRESCALER
Ë=
IWDG_PªsˇÀr_16
) || \

79 ((
PRESCALER
Ë=
IWDG_PªsˇÀr_32
) || \

80 ((
PRESCALER
Ë=
IWDG_PªsˇÀr_64
) || \

81 ((
PRESCALER
Ë=
IWDG_PªsˇÀr_128
)|| \

82 ((
PRESCALER
Ë=
IWDG_PªsˇÀr_256
))

90 
	#IWDG_FLAG_PVU
 ((
uöt16_t
)0x0001)

	)

91 
	#IWDG_FLAG_RVU
 ((
uöt16_t
)0x0002)

	)

92 
	#IS_IWDG_FLAG
(
FLAG
Ë(((FLAGË=
IWDG_FLAG_PVU
Ë|| ((FLAGË=
IWDG_FLAG_RVU
))

	)

93 
	#IS_IWDG_RELOAD
(
RELOAD
Ë((RELOADË<0xFFF)

	)

106 
IWDG_WrôeAc˚ssCmd
(
uöt16_t
 
IWDG_WrôeAc˚ss
);

107 
IWDG_SëPªsˇÀr
(
uöt8_t
 
IWDG_PªsˇÀr
);

108 
IWDG_SëRñﬂd
(
uöt16_t
 
Rñﬂd
);

109 
IWDG_RñﬂdCou¡î
();

112 
IWDG_E«bÀ
();

115 
FœgSètus
 
IWDG_GëFœgSètus
(
uöt16_t
 
IWDG_FLAG
);

117 #ifde‡
__˝lu•lus


	@stm32f4xx_ltdc.h

30 #i‚de‡
__STM32F4xx_LTDC_H


31 
	#__STM32F4xx_LTDC_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

56 
uöt32_t
 
LTDC_HSPﬁ¨ôy
;

59 
uöt32_t
 
LTDC_VSPﬁ¨ôy
;

62 
uöt32_t
 
LTDC_DEPﬁ¨ôy
;

65 
uöt32_t
 
LTDC_PCPﬁ¨ôy
;

68 
uöt32_t
 
LTDC_H‹iz⁄èlSync
;

71 
uöt32_t
 
LTDC_VîtiˇlSync
;

74 
uöt32_t
 
LTDC_AccumuœãdHBP
;

77 
uöt32_t
 
LTDC_AccumuœãdVBP
;

80 
uöt32_t
 
LTDC_AccumuœãdA˘iveW
;

83 
uöt32_t
 
LTDC_AccumuœãdA˘iveH
;

86 
uöt32_t
 
LTDC_TŸÆWidth
;

89 
uöt32_t
 
LTDC_TŸÆHeigh
;

92 
uöt32_t
 
LTDC_BackgroundRedVÆue
;

95 
uöt32_t
 
LTDC_BackgroundGªíVÆue
;

98 
uöt32_t
 
LTDC_BackgroundBlueVÆue
;

100 } 
	tLTDC_InôTy≥Def
;

108 
uöt32_t
 
LTDC_H‹iz⁄èlSèπ
;

111 
uöt32_t
 
LTDC_H‹iz⁄èlSt›
;

114 
uöt32_t
 
LTDC_VîtiˇlSèπ
;

117 
uöt32_t
 
LTDC_VîtiˇlSt›
;

120 
uöt32_t
 
LTDC_PixñF‹m©
;

123 
uöt32_t
 
LTDC_C⁄°™tAÕha
;

126 
uöt32_t
 
LTDC_DeÁu…Cﬁ‹Blue
;

129 
uöt32_t
 
LTDC_DeÁu…Cﬁ‹Gªí
;

132 
uöt32_t
 
LTDC_DeÁu…Cﬁ‹Red
;

135 
uöt32_t
 
LTDC_DeÁu…Cﬁ‹AÕha
;

138 
uöt32_t
 
LTDC_BÀndögFa˘‹_1
;

141 
uöt32_t
 
LTDC_BÀndögFa˘‹_2
;

144 
uöt32_t
 
LTDC_CFBSèπAdªss
;

146 
uöt32_t
 
LTDC_CFBLöeLígth
;

149 
uöt32_t
 
LTDC_CFBPôch
;

152 
uöt32_t
 
LTDC_CFBLöeNumbî
;

154 } 
	tLTDC_Layî_InôTy≥Def
;

162 
uöt32_t
 
LTDC_POSX
;

163 
uöt32_t
 
LTDC_POSY
;

164 } 
	tLTDC_PosTy≥Def
;

168 
uöt32_t
 
LTDC_BlueWidth
;

169 
uöt32_t
 
LTDC_GªíWidth
;

170 
uöt32_t
 
LTDC_RedWidth
;

171 } 
	tLTDC_RGBTy≥Def
;

175 
uöt32_t
 
LTDC_Cﬁ‹KeyBlue
;

178 
uöt32_t
 
LTDC_Cﬁ‹KeyGªí
;

181 
uöt32_t
 
LTDC_Cﬁ‹KeyRed
;

183 } 
	tLTDC_Cﬁ‹Keyög_InôTy≥Def
;

187 
uöt32_t
 
LTDC_CLUTAdªss
;

190 
uöt32_t
 
LTDC_BlueVÆue
;

193 
uöt32_t
 
LTDC_GªíVÆue
;

196 
uöt32_t
 
LTDC_RedVÆue
;

198 } 
	tLTDC_CLUT_InôTy≥Def
;

210 
	#LTDC_H‹iz⁄èlSYNC
 ((
uöt32_t
)0x00000FFF)

	)

211 
	#LTDC_VîtiˇlSYNC
 ((
uöt32_t
)0x000007FF)

	)

213 
	#IS_LTDC_HSYNC
(
HSYNC
Ë((HSYNCË<
LTDC_H‹iz⁄èlSYNC
)

	)

214 
	#IS_LTDC_VSYNC
(
VSYNC
Ë((VSYNCË<
LTDC_VîtiˇlSYNC
)

	)

215 
	#IS_LTDC_AHBP
(
AHBP
Ë((AHBPË<
LTDC_H‹iz⁄èlSYNC
)

	)

216 
	#IS_LTDC_AVBP
(
AVBP
Ë((AVBPË<
LTDC_VîtiˇlSYNC
)

	)

217 
	#IS_LTDC_AAW
(
AAW
Ë((AAWË<
LTDC_H‹iz⁄èlSYNC
)

	)

218 
	#IS_LTDC_AAH
(
AAH
Ë((AAHË<
LTDC_VîtiˇlSYNC
)

	)

219 
	#IS_LTDC_TOTALW
(
TOTALW
Ë((TOTALWË<
LTDC_H‹iz⁄èlSYNC
)

	)

220 
	#IS_LTDC_TOTALH
(
TOTALH
Ë((TOTALHË<
LTDC_VîtiˇlSYNC
)

	)

229 
	#LTDC_HSPﬁ¨ôy_AL
 ((
uöt32_t
)0x00000000Ë

	)

230 
	#LTDC_HSPﬁ¨ôy_AH
 
LTDC_GCR_HSPOL


	)

232 
	#IS_LTDC_HSPOL
(
HSPOL
Ë(((HSPOLË=
LTDC_HSPﬁ¨ôy_AL
Ë|| \

	)

233 ((
HSPOL
Ë=
LTDC_HSPﬁ¨ôy_AH
))

242 
	#LTDC_VSPﬁ¨ôy_AL
 ((
uöt32_t
)0x00000000Ë

	)

243 
	#LTDC_VSPﬁ¨ôy_AH
 
LTDC_GCR_VSPOL


	)

245 
	#IS_LTDC_VSPOL
(
VSPOL
Ë(((VSPOLË=
LTDC_VSPﬁ¨ôy_AL
Ë|| \

	)

246 ((
VSPOL
Ë=
LTDC_VSPﬁ¨ôy_AH
))

255 
	#LTDC_DEPﬁ¨ôy_AL
 ((
uöt32_t
)0x00000000Ë

	)

256 
	#LTDC_DEPﬁ¨ôy_AH
 
LTDC_GCR_DEPOL


	)

258 
	#IS_LTDC_DEPOL
(
DEPOL
Ë(((DEPOLË=
LTDC_VSPﬁ¨ôy_AL
Ë|| \

	)

259 ((
DEPOL
Ë=
LTDC_DEPﬁ¨ôy_AH
))

268 
	#LTDC_PCPﬁ¨ôy_IPC
 ((
uöt32_t
)0x00000000Ë

	)

269 
	#LTDC_PCPﬁ¨ôy_IIPC
 
LTDC_GCR_PCPOL


	)

271 
	#IS_LTDC_PCPOL
(
PCPOL
Ë(((PCPOLË=
LTDC_PCPﬁ¨ôy_IPC
Ë|| \

	)

272 ((
PCPOL
Ë=
LTDC_PCPﬁ¨ôy_IIPC
))

281 
	#LTDC_IMRñﬂd
 
LTDC_SRCR_IMR


	)

282 
	#LTDC_VBRñﬂd
 
LTDC_SRCR_VBR


	)

284 
	#IS_LTDC_RELOAD
(
RELOAD
Ë(((RELOADË=
LTDC_IMRñﬂd
Ë|| \

	)

285 ((
RELOAD
Ë=
LTDC_VBRñﬂd
))

295 
	#LTDC_Back_Cﬁ‹
 ((
uöt32_t
)0x000000FF)

	)

297 
	#IS_LTDC_BackBlueVÆue
(
BBLUE
Ë((BBLUEË<
LTDC_Back_Cﬁ‹
)

	)

298 
	#IS_LTDC_BackGªíVÆue
(
BGREEN
Ë((BGREENË<
LTDC_Back_Cﬁ‹
)

	)

299 
	#IS_LTDC_BackRedVÆue
(
BRED
Ë((BREDË<
LTDC_Back_Cﬁ‹
)

	)

309 
	#LTDC_POS_CY
 
LTDC_CPSR_CYPOS


	)

310 
	#LTDC_POS_CX
 
LTDC_CPSR_CXPOS


	)

312 
	#IS_LTDC_GET_POS
(
POS
Ë(((POSË<
LTDC_POS_CY
))

	)

323 
	#IS_LTDC_LIPOS
(
LIPOS
Ë((LIPOSË<0x7FF)

	)

333 
	#LTDC_CD_VDES
 
LTDC_CDSR_VDES


	)

334 
	#LTDC_CD_HDES
 
LTDC_CDSR_HDES


	)

335 
	#LTDC_CD_VSYNC
 
LTDC_CDSR_VSYNCS


	)

336 
	#LTDC_CD_HSYNC
 
LTDC_CDSR_HSYNCS


	)

339 
	#IS_LTDC_GET_CD
(
CD
Ë(((CDË=
LTDC_CD_VDES
Ë|| ((CDË=
LTDC_CD_HDES
Ë|| \

	)

340 ((
CD
Ë=
LTDC_CD_VSYNC
Ë|| ((CDË=
LTDC_CD_HSYNC
))

351 
	#LTDC_IT_LI
 
LTDC_IER_LIE


	)

352 
	#LTDC_IT_FU
 
LTDC_IER_FUIE


	)

353 
	#LTDC_IT_TERR
 
LTDC_IER_TERRIE


	)

354 
	#LTDC_IT_RR
 
LTDC_IER_RRIE


	)

356 
	#IS_LTDC_IT
(
IT
Ë((((ITË& (
uöt32_t
)0xFFFFFFF0Ë=0x00Ë&& ((ITË!0x00))

	)

366 
	#LTDC_FLAG_LI
 
LTDC_ISR_LIF


	)

367 
	#LTDC_FLAG_FU
 
LTDC_ISR_FUIF


	)

368 
	#LTDC_FLAG_TERR
 
LTDC_ISR_TERRIF


	)

369 
	#LTDC_FLAG_RR
 
LTDC_ISR_RRIF


	)

372 
	#IS_LTDC_FLAG
(
FLAG
Ë(((FLAGË=
LTDC_FLAG_LI
Ë|| ((FLAGË=
LTDC_FLAG_FU
Ë|| \

	)

373 ((
FLAG
Ë=
LTDC_FLAG_TERR
Ë|| ((FLAGË=
LTDC_FLAG_RR
))

382 
	#LTDC_Pixñf‹m©_ARGB8888
 ((
uöt32_t
)0x00000000)

	)

383 
	#LTDC_Pixñf‹m©_RGB888
 ((
uöt32_t
)0x00000001)

	)

384 
	#LTDC_Pixñf‹m©_RGB565
 ((
uöt32_t
)0x00000002)

	)

385 
	#LTDC_Pixñf‹m©_ARGB1555
 ((
uöt32_t
)0x00000003)

	)

386 
	#LTDC_Pixñf‹m©_ARGB4444
 ((
uöt32_t
)0x00000004)

	)

387 
	#LTDC_Pixñf‹m©_L8
 ((
uöt32_t
)0x00000005)

	)

388 
	#LTDC_Pixñf‹m©_AL44
 ((
uöt32_t
)0x00000006)

	)

389 
	#LTDC_Pixñf‹m©_AL88
 ((
uöt32_t
)0x00000007)

	)

391 
	#IS_LTDC_Pixñf‹m©
(
Pixñf‹m©
Ë(((Pixñf‹m©Ë=
LTDC_Pixñf‹m©_ARGB8888
Ë|| ((Pixñf‹m©Ë=
LTDC_Pixñf‹m©_RGB888
Ë|| \

	)

392 ((
Pixñf‹m©
Ë=
LTDC_Pixñf‹m©_RGB565
Ë|| ((Pixñf‹m©Ë=
LTDC_Pixñf‹m©_ARGB1555
) || \

393 ((
Pixñf‹m©
Ë=
LTDC_Pixñf‹m©_ARGB4444
Ë|| ((Pixñf‹m©Ë=
LTDC_Pixñf‹m©_L8
) || \

394 ((
Pixñf‹m©
Ë=
LTDC_Pixñf‹m©_AL44
Ë|| ((Pixñf‹m©Ë=
LTDC_Pixñf‹m©_AL88
))

404 
	#LTDC_BÀndögFa˘‹1_CA
 ((
uöt32_t
)0x00000400)

	)

405 
	#LTDC_BÀndögFa˘‹1_PAxCA
 ((
uöt32_t
)0x00000600)

	)

407 
	#IS_LTDC_BÀndögFa˘‹1
(
BÀndögFa˘‹1
Ë(((BÀndögFa˘‹1Ë=
LTDC_BÀndögFa˘‹1_CA
Ë|| ((BÀndögFa˘‹1Ë=
LTDC_BÀndögFa˘‹1_PAxCA
))

	)

417 
	#LTDC_BÀndögFa˘‹2_CA
 ((
uöt32_t
)0x00000005)

	)

418 
	#LTDC_BÀndögFa˘‹2_PAxCA
 ((
uöt32_t
)0x00000007)

	)

420 
	#IS_LTDC_BÀndögFa˘‹2
(
BÀndögFa˘‹2
Ë(((BÀndögFa˘‹2Ë=
LTDC_BÀndögFa˘‹2_CA
Ë|| ((BÀndögFa˘‹2Ë=
LTDC_BÀndögFa˘‹2_PAxCA
))

	)

432 
	#LTDC_STOPPosôi⁄
 ((
uöt32_t
)0x0000FFFF)

	)

433 
	#LTDC_STARTPosôi⁄
 ((
uöt32_t
)0x00000FFF)

	)

435 
	#LTDC_DeÁu…Cﬁ‹C⁄fig
 ((
uöt32_t
)0x000000FF)

	)

436 
	#LTDC_Cﬁ‹FømeBuf„r
 ((
uöt32_t
)0x00001FFF)

	)

437 
	#LTDC_LöeNumbî
 ((
uöt32_t
)0x000007FF)

	)

439 
	#IS_LTDC_HCONFIGST
(
HCONFIGST
Ë((HCONFIGSTË<
LTDC_STARTPosôi⁄
)

	)

440 
	#IS_LTDC_HCONFIGSP
(
HCONFIGSP
Ë((HCONFIGSPË<
LTDC_STOPPosôi⁄
)

	)

441 
	#IS_LTDC_VCONFIGST
(
VCONFIGST
Ë((VCONFIGSTË<
LTDC_STARTPosôi⁄
)

	)

442 
	#IS_LTDC_VCONFIGSP
(
VCONFIGSP
Ë((VCONFIGSPË<
LTDC_STOPPosôi⁄
)

	)

444 
	#IS_LTDC_DEFAULTCOLOR
(
DEFAULTCOLOR
Ë((DEFAULTCOLORË<
LTDC_DeÁu…Cﬁ‹C⁄fig
)

	)

446 
	#IS_LTDC_CFBP
(
CFBP
Ë((CFBPË<
LTDC_Cﬁ‹FømeBuf„r
)

	)

447 
	#IS_LTDC_CFBLL
(
CFBLL
Ë((CFBLLË<
LTDC_Cﬁ‹FømeBuf„r
)

	)

449 
	#IS_LTDC_CFBLNBR
(
CFBLNBR
Ë((CFBLNBRË<
LTDC_LöeNumbî
)

	)

461 
	#LTDC_cﬁ‹keyögC⁄fig
 ((
uöt32_t
)0x000000FF)

	)

463 
	#IS_LTDC_CKEYING
(
CKEYING
Ë((CKEYINGË<
LTDC_cﬁ‹keyögC⁄fig
)

	)

474 
	#LTDC_CLUTWR
 ((
uöt32_t
)0x000000FF)

	)

476 
	#IS_LTDC_CLUTWR
(
CLUTWR
Ë((CLUTWRË<
LTDC_CLUTWR
)

	)

482 
LTDC_DeInô
();

485 
LTDC_Inô
(
LTDC_InôTy≥Def
* 
LTDC_InôSåu˘
);

486 
LTDC_Såu˘Inô
(
LTDC_InôTy≥Def
* 
LTDC_InôSåu˘
);

487 
LTDC_Cmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

488 
LTDC_DôhîCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

489 
LTDC_RGBTy≥Def
 
LTDC_GëRGBWidth
();

490 
LTDC_RGBSåu˘Inô
(
LTDC_RGBTy≥Def
* 
LTDC_RGB_InôSåu˘
);

491 
LTDC_LIPC⁄fig
(
uöt32_t
 
LTDC_LIPosôi⁄C⁄fig
);

492 
LTDC_RñﬂdC⁄fig
(
uöt32_t
 
LTDC_Rñﬂd
);

493 
LTDC_LayîInô
(
LTDC_Layî_Ty≥Def
* 
LTDC_Layîx
, 
LTDC_Layî_InôTy≥Def
* 
LTDC_Layî_InôSåu˘
);

494 
LTDC_LayîSåu˘Inô
(
LTDC_Layî_InôTy≥Def
 * 
LTDC_Layî_InôSåu˘
);

495 
LTDC_LayîCmd
(
LTDC_Layî_Ty≥Def
* 
LTDC_Layîx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

496 
LTDC_PosTy≥Def
 
LTDC_GëPosSètus
();

497 
LTDC_PosSåu˘Inô
(
LTDC_PosTy≥Def
* 
LTDC_Pos_InôSåu˘
);

498 
FœgSètus
 
LTDC_GëCDSètus
(
uöt32_t
 
LTDC_CD
);

499 
LTDC_Cﬁ‹KeyögC⁄fig
(
LTDC_Layî_Ty≥Def
* 
LTDC_Layîx
, 
LTDC_Cﬁ‹Keyög_InôTy≥Def
* 
LTDC_cﬁ‹keyög_InôSåu˘
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

500 
LTDC_Cﬁ‹KeyögSåu˘Inô
(
LTDC_Cﬁ‹Keyög_InôTy≥Def
* 
LTDC_cﬁ‹keyög_InôSåu˘
);

501 
LTDC_CLUTCmd
(
LTDC_Layî_Ty≥Def
* 
LTDC_Layîx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

502 
LTDC_CLUTInô
(
LTDC_Layî_Ty≥Def
* 
LTDC_Layîx
, 
LTDC_CLUT_InôTy≥Def
* 
LTDC_CLUT_InôSåu˘
);

503 
LTDC_CLUTSåu˘Inô
(
LTDC_CLUT_InôTy≥Def
* 
LTDC_CLUT_InôSåu˘
);

504 
LTDC_LayîPosôi⁄
(
LTDC_Layî_Ty≥Def
* 
LTDC_Layîx
, 
uöt16_t
 
Off£tX
, uöt16_à
Off£tY
);

505 
LTDC_LayîAÕha
(
LTDC_Layî_Ty≥Def
* 
LTDC_Layîx
, 
uöt8_t
 
C⁄°™tAÕha
);

506 
LTDC_LayîAddªss
(
LTDC_Layî_Ty≥Def
* 
LTDC_Layîx
, 
uöt32_t
 
Addªss
);

507 
LTDC_LayîSize
(
LTDC_Layî_Ty≥Def
* 
LTDC_Layîx
, 
uöt32_t
 
Width
, uöt32_à
Height
);

508 
LTDC_LayîPixñF‹m©
(
LTDC_Layî_Ty≥Def
* 
LTDC_Layîx
, 
uöt32_t
 
PixñF‹m©
);

511 
LTDC_ITC⁄fig
(
uöt32_t
 
LTDC_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

512 
FœgSètus
 
LTDC_GëFœgSètus
(
uöt32_t
 
LTDC_FLAG
);

513 
LTDC_CÀ¨Fœg
(
uöt32_t
 
LTDC_FLAG
);

514 
ITSètus
 
LTDC_GëITSètus
(
uöt32_t
 
LTDC_IT
);

515 
LTDC_CÀ¨ITPídögBô
(
uöt32_t
 
LTDC_IT
);

517 #ifde‡
__˝lu•lus


	@stm32f4xx_pwr.h

30 #i‚de‡
__STM32F4xx_PWR_H


31 
	#__STM32F4xx_PWR_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

58 
	#PWR_PVDLevñ_0
 
PWR_CR_PLS_LEV0


	)

59 
	#PWR_PVDLevñ_1
 
PWR_CR_PLS_LEV1


	)

60 
	#PWR_PVDLevñ_2
 
PWR_CR_PLS_LEV2


	)

61 
	#PWR_PVDLevñ_3
 
PWR_CR_PLS_LEV3


	)

62 
	#PWR_PVDLevñ_4
 
PWR_CR_PLS_LEV4


	)

63 
	#PWR_PVDLevñ_5
 
PWR_CR_PLS_LEV5


	)

64 
	#PWR_PVDLevñ_6
 
PWR_CR_PLS_LEV6


	)

65 
	#PWR_PVDLevñ_7
 
PWR_CR_PLS_LEV7


	)

67 
	#IS_PWR_PVD_LEVEL
(
LEVEL
Ë(((LEVELË=
PWR_PVDLevñ_0
Ë|| ((LEVELË=
PWR_PVDLevñ_1
)|| \

	)

68 ((
LEVEL
Ë=
PWR_PVDLevñ_2
Ë|| ((LEVELË=
PWR_PVDLevñ_3
)|| \

69 ((
LEVEL
Ë=
PWR_PVDLevñ_4
Ë|| ((LEVELË=
PWR_PVDLevñ_5
)|| \

70 ((
LEVEL
Ë=
PWR_PVDLevñ_6
Ë|| ((LEVELË=
PWR_PVDLevñ_7
))

79 
	#PWR_MaöReguœt‹_ON
 ((
uöt32_t
)0x00000000)

	)

80 
	#PWR_LowPowîReguœt‹_ON
 
PWR_CR_LPDS


	)

83 
	#PWR_Reguœt‹_ON
 
PWR_MaöReguœt‹_ON


	)

84 
	#PWR_Reguœt‹_LowPowî
 
PWR_LowPowîReguœt‹_ON


	)

86 
	#IS_PWR_REGULATOR
(
REGULATOR
Ë(((REGULATORË=
PWR_MaöReguœt‹_ON
Ë|| \

	)

87 ((
REGULATOR
Ë=
PWR_LowPowîReguœt‹_ON
))

96 
	#PWR_MaöReguœt‹_UndîDrive_ON
 
PWR_CR_MRUDS


	)

97 
	#PWR_LowPowîReguœt‹_UndîDrive_ON
 ((
uöt32_t
)(
PWR_CR_LPDS
 | 
PWR_CR_LPUDS
))

	)

99 
	#IS_PWR_REGULATOR_UNDERDRIVE
(
REGULATOR
Ë(((REGULATORË=
PWR_MaöReguœt‹_UndîDrive_ON
Ë|| \

	)

100 ((
REGULATOR
Ë=
PWR_LowPowîReguœt‹_UndîDrive_ON
))

109 
	#PWR_STOPE¡ry_WFI
 ((
uöt8_t
)0x01)

	)

110 
	#PWR_STOPE¡ry_WFE
 ((
uöt8_t
)0x02)

	)

111 
	#IS_PWR_STOP_ENTRY
(
ENTRY
Ë(((ENTRYË=
PWR_STOPE¡ry_WFI
Ë|| ((ENTRYË=
PWR_STOPE¡ry_WFE
))

	)

119 
	#PWR_Reguœt‹_Vﬁège_SˇÀ1
 ((
uöt32_t
)0x0000C000)

	)

120 
	#PWR_Reguœt‹_Vﬁège_SˇÀ2
 ((
uöt32_t
)0x00008000)

	)

121 
	#PWR_Reguœt‹_Vﬁège_SˇÀ3
 ((
uöt32_t
)0x00004000)

	)

122 
	#IS_PWR_REGULATOR_VOLTAGE
(
VOLTAGE
Ë(((VOLTAGEË=
PWR_Reguœt‹_Vﬁège_SˇÀ1
Ë|| \

	)

123 ((
VOLTAGE
Ë=
PWR_Reguœt‹_Vﬁège_SˇÀ2
) || \

124 ((
VOLTAGE
Ë=
PWR_Reguœt‹_Vﬁège_SˇÀ3
))

132 
	#PWR_FLAG_WU
 
PWR_CSR_WUF


	)

133 
	#PWR_FLAG_SB
 
PWR_CSR_SBF


	)

134 
	#PWR_FLAG_PVDO
 
PWR_CSR_PVDO


	)

135 
	#PWR_FLAG_BRR
 
PWR_CSR_BRR


	)

136 
	#PWR_FLAG_VOSRDY
 
PWR_CSR_VOSRDY


	)

137 
	#PWR_FLAG_ODRDY
 
PWR_CSR_ODRDY


	)

138 
	#PWR_FLAG_ODSWRDY
 
PWR_CSR_ODSWRDY


	)

139 
	#PWR_FLAG_UDRDY
 
PWR_CSR_UDSWRDY


	)

142 
	#PWR_FLAG_REGRDY
 
PWR_FLAG_VOSRDY


	)

144 
	#IS_PWR_GET_FLAG
(
FLAG
Ë(((FLAGË=
PWR_FLAG_WU
Ë|| ((FLAGË=
PWR_FLAG_SB
Ë|| \

	)

145 ((
FLAG
Ë=
PWR_FLAG_PVDO
Ë|| ((FLAGË=
PWR_FLAG_BRR
) || \

146 ((
FLAG
Ë=
PWR_FLAG_VOSRDY
Ë|| ((FLAGË=
PWR_FLAG_ODRDY
) || \

147 ((
FLAG
Ë=
PWR_FLAG_ODSWRDY
Ë|| ((FLAGË=
PWR_FLAG_UDRDY
))

150 
	#IS_PWR_CLEAR_FLAG
(
FLAG
Ë(((FLAGË=
PWR_FLAG_WU
Ë|| ((FLAGË=
PWR_FLAG_SB
Ë|| \

	)

151 ((
FLAG
Ë=
PWR_FLAG_UDRDY
))

165 
PWR_DeInô
();

168 
PWR_BackupAc˚ssCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

171 
PWR_PVDLevñC⁄fig
(
uöt32_t
 
PWR_PVDLevñ
);

172 
PWR_PVDCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

175 
PWR_WakeUpPöCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

178 
PWR_BackupReguœt‹Cmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

179 
PWR_MaöReguœt‹ModeC⁄fig
(
uöt32_t
 
PWR_Reguœt‹_Vﬁège
);

180 
PWR_OvîDriveCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

181 
PWR_OvîDriveSWCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

182 
PWR_UndîDriveCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

183 
PWR_MaöReguœt‹LowVﬁègeCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

184 
PWR_LowReguœt‹LowVﬁègeCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

187 
PWR_FœshPowîDownCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

190 
PWR_E¡îSTOPMode
(
uöt32_t
 
PWR_Reguœt‹
, 
uöt8_t
 
PWR_STOPE¡ry
);

191 
PWR_E¡îUndîDriveSTOPMode
(
uöt32_t
 
PWR_Reguœt‹
, 
uöt8_t
 
PWR_STOPE¡ry
);

192 
PWR_E¡îSTANDBYMode
();

195 
FœgSètus
 
PWR_GëFœgSètus
(
uöt32_t
 
PWR_FLAG
);

196 
PWR_CÀ¨Fœg
(
uöt32_t
 
PWR_FLAG
);

198 #ifde‡
__˝lu•lus


	@stm32f4xx_rcc.h

29 #i‚de‡
__STM32F4xx_RCC_H


30 
	#__STM32F4xx_RCC_H


	)

32 #ifde‡
__˝lu•lus


37 
	~"°m32f4xx.h
"

50 
uöt32_t
 
SYSCLK_Fªquícy
;

51 
uöt32_t
 
HCLK_Fªquícy
;

52 
uöt32_t
 
PCLK1_Fªquícy
;

53 
uöt32_t
 
PCLK2_Fªquícy
;

54 }
	tRCC_ClocksTy≥Def
;

65 
	#RCC_HSE_OFF
 ((
uöt8_t
)0x00)

	)

66 
	#RCC_HSE_ON
 ((
uöt8_t
)0x01)

	)

67 
	#RCC_HSE_By∑ss
 ((
uöt8_t
)0x05)

	)

68 
	#IS_RCC_HSE
(
HSE
Ë(((HSEË=
RCC_HSE_OFF
Ë|| ((HSEË=
RCC_HSE_ON
Ë|| \

	)

69 ((
HSE
Ë=
RCC_HSE_By∑ss
))

77 
	#RCC_LSE_LOWPOWER_MODE
 ((
uöt8_t
)0x00)

	)

78 
	#RCC_LSE_HIGHDRIVE_MODE
 ((
uöt8_t
)0x01)

	)

79 
	#IS_RCC_LSE_MODE
(
MODE
Ë(((MODEË=
RCC_LSE_LOWPOWER_MODE
Ë|| \

	)

80 ((
MODE
Ë=
RCC_LSE_HIGHDRIVE_MODE
))

88 
	#RCC_PLLSour˚_HSI
 ((
uöt32_t
)0x00000000)

	)

89 
	#RCC_PLLSour˚_HSE
 ((
uöt32_t
)0x00400000)

	)

90 
	#IS_RCC_PLL_SOURCE
(
SOURCE
Ë(((SOURCEË=
RCC_PLLSour˚_HSI
Ë|| \

	)

91 ((
SOURCE
Ë=
RCC_PLLSour˚_HSE
))

92 
	#IS_RCC_PLLM_VALUE
(
VALUE
Ë((VALUEË<63)

	)

93 
	#IS_RCC_PLLN_VALUE
(
VALUE
Ë((192 <(VALUE)Ë&& ((VALUEË<432))

	)

94 
	#IS_RCC_PLLP_VALUE
(
VALUE
Ë(((VALUEË=2Ë|| ((VALUEË=4Ë|| ((VALUEË=6Ë|| ((VALUEË=8))

	)

95 
	#IS_RCC_PLLQ_VALUE
(
VALUE
Ë((4 <(VALUE)Ë&& ((VALUEË<15))

	)

97 
	#IS_RCC_PLLI2SN_VALUE
(
VALUE
Ë((192 <(VALUE)Ë&& ((VALUEË<432))

	)

98 
	#IS_RCC_PLLI2SR_VALUE
(
VALUE
Ë((2 <(VALUE)Ë&& ((VALUEË<7))

	)

99 
	#IS_RCC_PLLI2SM_VALUE
(
VALUE
Ë((VALUEË<63)

	)

101 
	#IS_RCC_PLLI2SQ_VALUE
(
VALUE
Ë((2 <(VALUE)Ë&& ((VALUEË<15))

	)

102 
	#IS_RCC_PLLSAIN_VALUE
(
VALUE
Ë((192 <(VALUE)Ë&& ((VALUEË<432))

	)

103 
	#IS_RCC_PLLSAIQ_VALUE
(
VALUE
Ë((2 <(VALUE)Ë&& ((VALUEË<15))

	)

104 
	#IS_RCC_PLLSAIR_VALUE
(
VALUE
Ë((2 <(VALUE)Ë&& ((VALUEË<7))

	)

106 
	#IS_RCC_PLLSAI_DIVQ_VALUE
(
VALUE
Ë((1 <(VALUE)Ë&& ((VALUEË<32))

	)

107 
	#IS_RCC_PLLI2S_DIVQ_VALUE
(
VALUE
Ë((1 <(VALUE)Ë&& ((VALUEË<32))

	)

109 
	#RCC_PLLSAIDivR_Div2
 ((
uöt32_t
)0x00000000)

	)

110 
	#RCC_PLLSAIDivR_Div4
 ((
uöt32_t
)0x00010000)

	)

111 
	#RCC_PLLSAIDivR_Div8
 ((
uöt32_t
)0x00020000)

	)

112 
	#RCC_PLLSAIDivR_Div16
 ((
uöt32_t
)0x00030000)

	)

113 
	#IS_RCC_PLLSAI_DIVR_VALUE
(
VALUE
Ë(((VALUEË=
RCC_PLLSAIDivR_Div2
Ë||\

	)

114 ((
VALUE
Ë=
RCC_PLLSAIDivR_Div4
) ||\

115 ((
VALUE
Ë=
RCC_PLLSAIDivR_Div8
) ||\

116 ((
VALUE
Ë=
RCC_PLLSAIDivR_Div16
))

125 
	#RCC_SYSCLKSour˚_HSI
 ((
uöt32_t
)0x00000000)

	)

126 
	#RCC_SYSCLKSour˚_HSE
 ((
uöt32_t
)0x00000001)

	)

127 
	#RCC_SYSCLKSour˚_PLLCLK
 ((
uöt32_t
)0x00000002)

	)

128 
	#IS_RCC_SYSCLK_SOURCE
(
SOURCE
Ë(((SOURCEË=
RCC_SYSCLKSour˚_HSI
Ë|| \

	)

129 ((
SOURCE
Ë=
RCC_SYSCLKSour˚_HSE
) || \

130 ((
SOURCE
Ë=
RCC_SYSCLKSour˚_PLLCLK
))

138 
	#RCC_SYSCLK_Div1
 ((
uöt32_t
)0x00000000)

	)

139 
	#RCC_SYSCLK_Div2
 ((
uöt32_t
)0x00000080)

	)

140 
	#RCC_SYSCLK_Div4
 ((
uöt32_t
)0x00000090)

	)

141 
	#RCC_SYSCLK_Div8
 ((
uöt32_t
)0x000000A0)

	)

142 
	#RCC_SYSCLK_Div16
 ((
uöt32_t
)0x000000B0)

	)

143 
	#RCC_SYSCLK_Div64
 ((
uöt32_t
)0x000000C0)

	)

144 
	#RCC_SYSCLK_Div128
 ((
uöt32_t
)0x000000D0)

	)

145 
	#RCC_SYSCLK_Div256
 ((
uöt32_t
)0x000000E0)

	)

146 
	#RCC_SYSCLK_Div512
 ((
uöt32_t
)0x000000F0)

	)

147 
	#IS_RCC_HCLK
(
HCLK
Ë(((HCLKË=
RCC_SYSCLK_Div1
Ë|| ((HCLKË=
RCC_SYSCLK_Div2
Ë|| \

	)

148 ((
HCLK
Ë=
RCC_SYSCLK_Div4
Ë|| ((HCLKË=
RCC_SYSCLK_Div8
) || \

149 ((
HCLK
Ë=
RCC_SYSCLK_Div16
Ë|| ((HCLKË=
RCC_SYSCLK_Div64
) || \

150 ((
HCLK
Ë=
RCC_SYSCLK_Div128
Ë|| ((HCLKË=
RCC_SYSCLK_Div256
) || \

151 ((
HCLK
Ë=
RCC_SYSCLK_Div512
))

159 
	#RCC_HCLK_Div1
 ((
uöt32_t
)0x00000000)

	)

160 
	#RCC_HCLK_Div2
 ((
uöt32_t
)0x00001000)

	)

161 
	#RCC_HCLK_Div4
 ((
uöt32_t
)0x00001400)

	)

162 
	#RCC_HCLK_Div8
 ((
uöt32_t
)0x00001800)

	)

163 
	#RCC_HCLK_Div16
 ((
uöt32_t
)0x00001C00)

	)

164 
	#IS_RCC_PCLK
(
PCLK
Ë(((PCLKË=
RCC_HCLK_Div1
Ë|| ((PCLKË=
RCC_HCLK_Div2
Ë|| \

	)

165 ((
PCLK
Ë=
RCC_HCLK_Div4
Ë|| ((PCLKË=
RCC_HCLK_Div8
) || \

166 ((
PCLK
Ë=
RCC_HCLK_Div16
))

174 
	#RCC_IT_LSIRDY
 ((
uöt8_t
)0x01)

	)

175 
	#RCC_IT_LSERDY
 ((
uöt8_t
)0x02)

	)

176 
	#RCC_IT_HSIRDY
 ((
uöt8_t
)0x04)

	)

177 
	#RCC_IT_HSERDY
 ((
uöt8_t
)0x08)

	)

178 
	#RCC_IT_PLLRDY
 ((
uöt8_t
)0x10)

	)

179 
	#RCC_IT_PLLI2SRDY
 ((
uöt8_t
)0x20)

	)

180 
	#RCC_IT_PLLSAIRDY
 ((
uöt8_t
)0x40)

	)

181 
	#RCC_IT_CSS
 ((
uöt8_t
)0x80)

	)

183 
	#IS_RCC_IT
(
IT
Ë((((ITË& (
uöt8_t
)0x80Ë=0x00Ë&& ((ITË!0x00))

	)

184 
	#IS_RCC_GET_IT
(
IT
Ë(((ITË=
RCC_IT_LSIRDY
Ë|| ((ITË=
RCC_IT_LSERDY
Ë|| \

	)

185 ((
IT
Ë=
RCC_IT_HSIRDY
Ë|| ((ITË=
RCC_IT_HSERDY
) || \

186 ((
IT
Ë=
RCC_IT_PLLRDY
Ë|| ((ITË=
RCC_IT_CSS
) || \

187 ((
IT
Ë=
RCC_IT_PLLSAIRDY
Ë|| ((ITË=
RCC_IT_PLLI2SRDY
))

188 
	#IS_RCC_CLEAR_IT
(
IT
)((ITË!0x00)

	)

197 
	#RCC_LSE_OFF
 ((
uöt8_t
)0x00)

	)

198 
	#RCC_LSE_ON
 ((
uöt8_t
)0x01)

	)

199 
	#RCC_LSE_By∑ss
 ((
uöt8_t
)0x04)

	)

200 
	#IS_RCC_LSE
(
LSE
Ë(((LSEË=
RCC_LSE_OFF
Ë|| ((LSEË=
RCC_LSE_ON
Ë|| \

	)

201 ((
LSE
Ë=
RCC_LSE_By∑ss
))

209 
	#RCC_RTCCLKSour˚_LSE
 ((
uöt32_t
)0x00000100)

	)

210 
	#RCC_RTCCLKSour˚_LSI
 ((
uöt32_t
)0x00000200)

	)

211 
	#RCC_RTCCLKSour˚_HSE_Div2
 ((
uöt32_t
)0x00020300)

	)

212 
	#RCC_RTCCLKSour˚_HSE_Div3
 ((
uöt32_t
)0x00030300)

	)

213 
	#RCC_RTCCLKSour˚_HSE_Div4
 ((
uöt32_t
)0x00040300)

	)

214 
	#RCC_RTCCLKSour˚_HSE_Div5
 ((
uöt32_t
)0x00050300)

	)

215 
	#RCC_RTCCLKSour˚_HSE_Div6
 ((
uöt32_t
)0x00060300)

	)

216 
	#RCC_RTCCLKSour˚_HSE_Div7
 ((
uöt32_t
)0x00070300)

	)

217 
	#RCC_RTCCLKSour˚_HSE_Div8
 ((
uöt32_t
)0x00080300)

	)

218 
	#RCC_RTCCLKSour˚_HSE_Div9
 ((
uöt32_t
)0x00090300)

	)

219 
	#RCC_RTCCLKSour˚_HSE_Div10
 ((
uöt32_t
)0x000A0300)

	)

220 
	#RCC_RTCCLKSour˚_HSE_Div11
 ((
uöt32_t
)0x000B0300)

	)

221 
	#RCC_RTCCLKSour˚_HSE_Div12
 ((
uöt32_t
)0x000C0300)

	)

222 
	#RCC_RTCCLKSour˚_HSE_Div13
 ((
uöt32_t
)0x000D0300)

	)

223 
	#RCC_RTCCLKSour˚_HSE_Div14
 ((
uöt32_t
)0x000E0300)

	)

224 
	#RCC_RTCCLKSour˚_HSE_Div15
 ((
uöt32_t
)0x000F0300)

	)

225 
	#RCC_RTCCLKSour˚_HSE_Div16
 ((
uöt32_t
)0x00100300)

	)

226 
	#RCC_RTCCLKSour˚_HSE_Div17
 ((
uöt32_t
)0x00110300)

	)

227 
	#RCC_RTCCLKSour˚_HSE_Div18
 ((
uöt32_t
)0x00120300)

	)

228 
	#RCC_RTCCLKSour˚_HSE_Div19
 ((
uöt32_t
)0x00130300)

	)

229 
	#RCC_RTCCLKSour˚_HSE_Div20
 ((
uöt32_t
)0x00140300)

	)

230 
	#RCC_RTCCLKSour˚_HSE_Div21
 ((
uöt32_t
)0x00150300)

	)

231 
	#RCC_RTCCLKSour˚_HSE_Div22
 ((
uöt32_t
)0x00160300)

	)

232 
	#RCC_RTCCLKSour˚_HSE_Div23
 ((
uöt32_t
)0x00170300)

	)

233 
	#RCC_RTCCLKSour˚_HSE_Div24
 ((
uöt32_t
)0x00180300)

	)

234 
	#RCC_RTCCLKSour˚_HSE_Div25
 ((
uöt32_t
)0x00190300)

	)

235 
	#RCC_RTCCLKSour˚_HSE_Div26
 ((
uöt32_t
)0x001A0300)

	)

236 
	#RCC_RTCCLKSour˚_HSE_Div27
 ((
uöt32_t
)0x001B0300)

	)

237 
	#RCC_RTCCLKSour˚_HSE_Div28
 ((
uöt32_t
)0x001C0300)

	)

238 
	#RCC_RTCCLKSour˚_HSE_Div29
 ((
uöt32_t
)0x001D0300)

	)

239 
	#RCC_RTCCLKSour˚_HSE_Div30
 ((
uöt32_t
)0x001E0300)

	)

240 
	#RCC_RTCCLKSour˚_HSE_Div31
 ((
uöt32_t
)0x001F0300)

	)

241 
	#IS_RCC_RTCCLK_SOURCE
(
SOURCE
Ë(((SOURCEË=
RCC_RTCCLKSour˚_LSE
Ë|| \

	)

242 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_LSI
) || \

243 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div2
) || \

244 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div3
) || \

245 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div4
) || \

246 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div5
) || \

247 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div6
) || \

248 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div7
) || \

249 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div8
) || \

250 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div9
) || \

251 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div10
) || \

252 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div11
) || \

253 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div12
) || \

254 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div13
) || \

255 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div14
) || \

256 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div15
) || \

257 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div16
) || \

258 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div17
) || \

259 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div18
) || \

260 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div19
) || \

261 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div20
) || \

262 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div21
) || \

263 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div22
) || \

264 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div23
) || \

265 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div24
) || \

266 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div25
) || \

267 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div26
) || \

268 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div27
) || \

269 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div28
) || \

270 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div29
) || \

271 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div30
) || \

272 ((
SOURCE
Ë=
RCC_RTCCLKSour˚_HSE_Div31
))

280 
	#RCC_I2S2CLKSour˚_PLLI2S
 ((
uöt8_t
)0x00)

	)

281 
	#RCC_I2S2CLKSour˚_Ext
 ((
uöt8_t
)0x01)

	)

283 
	#IS_RCC_I2SCLK_SOURCE
(
SOURCE
Ë(((SOURCEË=
RCC_I2S2CLKSour˚_PLLI2S
Ë|| ((SOURCEË=
RCC_I2S2CLKSour˚_Ext
))

	)

291 
	#RCC_SAIACLKSour˚_PLLSAI
 ((
uöt32_t
)0x00000000)

	)

292 
	#RCC_SAIACLKSour˚_PLLI2S
 ((
uöt32_t
)0x00100000)

	)

293 
	#RCC_SAIACLKSour˚_Ext
 ((
uöt32_t
)0x00200000)

	)

295 
	#IS_RCC_SAIACLK_SOURCE
(
SOURCE
Ë(((SOURCEË=
RCC_SAIACLKSour˚_PLLI2S
Ë||\

	)

296 ((
SOURCE
Ë=
RCC_SAIACLKSour˚_PLLSAI
) ||\

297 ((
SOURCE
Ë=
RCC_SAIACLKSour˚_Ext
))

305 
	#RCC_SAIBCLKSour˚_PLLSAI
 ((
uöt32_t
)0x00000000)

	)

306 
	#RCC_SAIBCLKSour˚_PLLI2S
 ((
uöt32_t
)0x00400000)

	)

307 
	#RCC_SAIBCLKSour˚_Ext
 ((
uöt32_t
)0x00800000)

	)

309 
	#IS_RCC_SAIBCLK_SOURCE
(
SOURCE
Ë(((SOURCEË=
RCC_SAIBCLKSour˚_PLLI2S
Ë||\

	)

310 ((
SOURCE
Ë=
RCC_SAIBCLKSour˚_PLLSAI
) ||\

311 ((
SOURCE
Ë=
RCC_SAIBCLKSour˚_Ext
))

319 
	#RCC_TIMPªscDeß˘iv©ed
 ((
uöt8_t
)0x00)

	)

320 
	#RCC_TIMPªscA˘iv©ed
 ((
uöt8_t
)0x01)

	)

322 
	#IS_RCC_TIMCLK_PRESCALER
(
VALUE
Ë(((VALUEË=
RCC_TIMPªscDeß˘iv©ed
Ë|| ((VALUEË=
RCC_TIMPªscA˘iv©ed
))

	)

330 
	#RCC_AHB1Pîùh_GPIOA
 ((
uöt32_t
)0x00000001)

	)

331 
	#RCC_AHB1Pîùh_GPIOB
 ((
uöt32_t
)0x00000002)

	)

332 
	#RCC_AHB1Pîùh_GPIOC
 ((
uöt32_t
)0x00000004)

	)

333 
	#RCC_AHB1Pîùh_GPIOD
 ((
uöt32_t
)0x00000008)

	)

334 
	#RCC_AHB1Pîùh_GPIOE
 ((
uöt32_t
)0x00000010)

	)

335 
	#RCC_AHB1Pîùh_GPIOF
 ((
uöt32_t
)0x00000020)

	)

336 
	#RCC_AHB1Pîùh_GPIOG
 ((
uöt32_t
)0x00000040)

	)

337 
	#RCC_AHB1Pîùh_GPIOH
 ((
uöt32_t
)0x00000080)

	)

338 
	#RCC_AHB1Pîùh_GPIOI
 ((
uöt32_t
)0x00000100)

	)

339 
	#RCC_AHB1Pîùh_GPIOJ
 ((
uöt32_t
)0x00000200)

	)

340 
	#RCC_AHB1Pîùh_GPIOK
 ((
uöt32_t
)0x00000400)

	)

341 
	#RCC_AHB1Pîùh_CRC
 ((
uöt32_t
)0x00001000)

	)

342 
	#RCC_AHB1Pîùh_FLITF
 ((
uöt32_t
)0x00008000)

	)

343 
	#RCC_AHB1Pîùh_SRAM1
 ((
uöt32_t
)0x00010000)

	)

344 
	#RCC_AHB1Pîùh_SRAM2
 ((
uöt32_t
)0x00020000)

	)

345 
	#RCC_AHB1Pîùh_BKPSRAM
 ((
uöt32_t
)0x00040000)

	)

346 
	#RCC_AHB1Pîùh_SRAM3
 ((
uöt32_t
)0x00080000)

	)

347 
	#RCC_AHB1Pîùh_CCMDATARAMEN
 ((
uöt32_t
)0x00100000)

	)

348 
	#RCC_AHB1Pîùh_DMA1
 ((
uöt32_t
)0x00200000)

	)

349 
	#RCC_AHB1Pîùh_DMA2
 ((
uöt32_t
)0x00400000)

	)

350 
	#RCC_AHB1Pîùh_DMA2D
 ((
uöt32_t
)0x00800000)

	)

351 
	#RCC_AHB1Pîùh_ETH_MAC
 ((
uöt32_t
)0x02000000)

	)

352 
	#RCC_AHB1Pîùh_ETH_MAC_Tx
 ((
uöt32_t
)0x04000000)

	)

353 
	#RCC_AHB1Pîùh_ETH_MAC_Rx
 ((
uöt32_t
)0x08000000)

	)

354 
	#RCC_AHB1Pîùh_ETH_MAC_PTP
 ((
uöt32_t
)0x10000000)

	)

355 
	#RCC_AHB1Pîùh_OTG_HS
 ((
uöt32_t
)0x20000000)

	)

356 
	#RCC_AHB1Pîùh_OTG_HS_ULPI
 ((
uöt32_t
)0x40000000)

	)

358 
	#IS_RCC_AHB1_CLOCK_PERIPH
(
PERIPH
Ë((((PERIPHË& 0x810BE800Ë=0x00Ë&& ((PERIPHË!0x00))

	)

359 
	#IS_RCC_AHB1_RESET_PERIPH
(
PERIPH
Ë((((PERIPHË& 0xDD1FE800Ë=0x00Ë&& ((PERIPHË!0x00))

	)

360 
	#IS_RCC_AHB1_LPMODE_PERIPH
(
PERIPH
Ë((((PERIPHË& 0x81106800Ë=0x00Ë&& ((PERIPHË!0x00))

	)

369 
	#RCC_AHB2Pîùh_DCMI
 ((
uöt32_t
)0x00000001)

	)

370 
	#RCC_AHB2Pîùh_CRYP
 ((
uöt32_t
)0x00000010)

	)

371 
	#RCC_AHB2Pîùh_HASH
 ((
uöt32_t
)0x00000020)

	)

372 
	#RCC_AHB2Pîùh_RNG
 ((
uöt32_t
)0x00000040)

	)

373 
	#RCC_AHB2Pîùh_OTG_FS
 ((
uöt32_t
)0x00000080)

	)

374 
	#IS_RCC_AHB2_PERIPH
(
PERIPH
Ë((((PERIPHË& 0xFFFFFF0EË=0x00Ë&& ((PERIPHË!0x00))

	)

382 #i‡
deföed
 (
STM32F40_41xxx
)

383 
	#RCC_AHB3Pîùh_FSMC
 ((
uöt32_t
)0x00000001)

	)

386 #i‡
deföed
 (
STM32F427_437xx
Ë|| deföed (
STM32F429_439xx
)

387 
	#RCC_AHB3Pîùh_FMC
 ((
uöt32_t
)0x00000001)

	)

390 
	#IS_RCC_AHB3_PERIPH
(
PERIPH
Ë((((PERIPHË& 0xFFFFFFFEË=0x00Ë&& ((PERIPHË!0x00))

	)

398 
	#RCC_APB1Pîùh_TIM2
 ((
uöt32_t
)0x00000001)

	)

399 
	#RCC_APB1Pîùh_TIM3
 ((
uöt32_t
)0x00000002)

	)

400 
	#RCC_APB1Pîùh_TIM4
 ((
uöt32_t
)0x00000004)

	)

401 
	#RCC_APB1Pîùh_TIM5
 ((
uöt32_t
)0x00000008)

	)

402 
	#RCC_APB1Pîùh_TIM6
 ((
uöt32_t
)0x00000010)

	)

403 
	#RCC_APB1Pîùh_TIM7
 ((
uöt32_t
)0x00000020)

	)

404 
	#RCC_APB1Pîùh_TIM12
 ((
uöt32_t
)0x00000040)

	)

405 
	#RCC_APB1Pîùh_TIM13
 ((
uöt32_t
)0x00000080)

	)

406 
	#RCC_APB1Pîùh_TIM14
 ((
uöt32_t
)0x00000100)

	)

407 
	#RCC_APB1Pîùh_WWDG
 ((
uöt32_t
)0x00000800)

	)

408 
	#RCC_APB1Pîùh_SPI2
 ((
uöt32_t
)0x00004000)

	)

409 
	#RCC_APB1Pîùh_SPI3
 ((
uöt32_t
)0x00008000)

	)

410 
	#RCC_APB1Pîùh_USART2
 ((
uöt32_t
)0x00020000)

	)

411 
	#RCC_APB1Pîùh_USART3
 ((
uöt32_t
)0x00040000)

	)

412 
	#RCC_APB1Pîùh_UART4
 ((
uöt32_t
)0x00080000)

	)

413 
	#RCC_APB1Pîùh_UART5
 ((
uöt32_t
)0x00100000)

	)

414 
	#RCC_APB1Pîùh_I2C1
 ((
uöt32_t
)0x00200000)

	)

415 
	#RCC_APB1Pîùh_I2C2
 ((
uöt32_t
)0x00400000)

	)

416 
	#RCC_APB1Pîùh_I2C3
 ((
uöt32_t
)0x00800000)

	)

417 
	#RCC_APB1Pîùh_CAN1
 ((
uöt32_t
)0x02000000)

	)

418 
	#RCC_APB1Pîùh_CAN2
 ((
uöt32_t
)0x04000000)

	)

419 
	#RCC_APB1Pîùh_PWR
 ((
uöt32_t
)0x10000000)

	)

420 
	#RCC_APB1Pîùh_DAC
 ((
uöt32_t
)0x20000000)

	)

421 
	#RCC_APB1Pîùh_UART7
 ((
uöt32_t
)0x40000000)

	)

422 
	#RCC_APB1Pîùh_UART8
 ((
uöt32_t
)0x80000000)

	)

423 
	#IS_RCC_APB1_PERIPH
(
PERIPH
Ë((((PERIPHË& 0x09013600Ë=0x00Ë&& ((PERIPHË!0x00))

	)

431 
	#RCC_APB2Pîùh_TIM1
 ((
uöt32_t
)0x00000001)

	)

432 
	#RCC_APB2Pîùh_TIM8
 ((
uöt32_t
)0x00000002)

	)

433 
	#RCC_APB2Pîùh_USART1
 ((
uöt32_t
)0x00000010)

	)

434 
	#RCC_APB2Pîùh_USART6
 ((
uöt32_t
)0x00000020)

	)

435 
	#RCC_APB2Pîùh_ADC
 ((
uöt32_t
)0x00000100)

	)

436 
	#RCC_APB2Pîùh_ADC1
 ((
uöt32_t
)0x00000100)

	)

437 
	#RCC_APB2Pîùh_ADC2
 ((
uöt32_t
)0x00000200)

	)

438 
	#RCC_APB2Pîùh_ADC3
 ((
uöt32_t
)0x00000400)

	)

439 
	#RCC_APB2Pîùh_SDIO
 ((
uöt32_t
)0x00000800)

	)

440 
	#RCC_APB2Pîùh_SPI1
 ((
uöt32_t
)0x00001000)

	)

441 
	#RCC_APB2Pîùh_SPI4
 ((
uöt32_t
)0x00002000)

	)

442 
	#RCC_APB2Pîùh_SYSCFG
 ((
uöt32_t
)0x00004000)

	)

443 
	#RCC_APB2Pîùh_TIM9
 ((
uöt32_t
)0x00010000)

	)

444 
	#RCC_APB2Pîùh_TIM10
 ((
uöt32_t
)0x00020000)

	)

445 
	#RCC_APB2Pîùh_TIM11
 ((
uöt32_t
)0x00040000)

	)

446 
	#RCC_APB2Pîùh_SPI5
 ((
uöt32_t
)0x00100000)

	)

447 
	#RCC_APB2Pîùh_SPI6
 ((
uöt32_t
)0x00200000)

	)

448 
	#RCC_APB2Pîùh_SAI1
 ((
uöt32_t
)0x00400000)

	)

449 
	#RCC_APB2Pîùh_LTDC
 ((
uöt32_t
)0x04000000)

	)

451 
	#IS_RCC_APB2_PERIPH
(
PERIPH
Ë((((PERIPHË& 0xFB8880CCË=0x00Ë&& ((PERIPHË!0x00))

	)

452 
	#IS_RCC_APB2_RESET_PERIPH
(
PERIPH
Ë((((PERIPHË& 0xFB8886CCË=0x00Ë&& ((PERIPHË!0x00))

	)

461 
	#RCC_MCO1Sour˚_HSI
 ((
uöt32_t
)0x00000000)

	)

462 
	#RCC_MCO1Sour˚_LSE
 ((
uöt32_t
)0x00200000)

	)

463 
	#RCC_MCO1Sour˚_HSE
 ((
uöt32_t
)0x00400000)

	)

464 
	#RCC_MCO1Sour˚_PLLCLK
 ((
uöt32_t
)0x00600000)

	)

465 
	#RCC_MCO1Div_1
 ((
uöt32_t
)0x00000000)

	)

466 
	#RCC_MCO1Div_2
 ((
uöt32_t
)0x04000000)

	)

467 
	#RCC_MCO1Div_3
 ((
uöt32_t
)0x05000000)

	)

468 
	#RCC_MCO1Div_4
 ((
uöt32_t
)0x06000000)

	)

469 
	#RCC_MCO1Div_5
 ((
uöt32_t
)0x07000000)

	)

470 
	#IS_RCC_MCO1SOURCE
(
SOURCE
Ë(((SOURCEË=
RCC_MCO1Sour˚_HSI
Ë|| ((SOURCEË=
RCC_MCO1Sour˚_LSE
Ë|| \

	)

471 ((
SOURCE
Ë=
RCC_MCO1Sour˚_HSE
Ë|| ((SOURCEË=
RCC_MCO1Sour˚_PLLCLK
))

473 
	#IS_RCC_MCO1DIV
(
DIV
Ë(((DIVË=
RCC_MCO1Div_1
Ë|| ((DIVË=
RCC_MCO1Div_2
Ë|| \

	)

474 ((
DIV
Ë=
RCC_MCO1Div_3
Ë|| ((DIVË=
RCC_MCO1Div_4
) || \

475 ((
DIV
Ë=
RCC_MCO1Div_5
))

483 
	#RCC_MCO2Sour˚_SYSCLK
 ((
uöt32_t
)0x00000000)

	)

484 
	#RCC_MCO2Sour˚_PLLI2SCLK
 ((
uöt32_t
)0x40000000)

	)

485 
	#RCC_MCO2Sour˚_HSE
 ((
uöt32_t
)0x80000000)

	)

486 
	#RCC_MCO2Sour˚_PLLCLK
 ((
uöt32_t
)0xC0000000)

	)

487 
	#RCC_MCO2Div_1
 ((
uöt32_t
)0x00000000)

	)

488 
	#RCC_MCO2Div_2
 ((
uöt32_t
)0x20000000)

	)

489 
	#RCC_MCO2Div_3
 ((
uöt32_t
)0x28000000)

	)

490 
	#RCC_MCO2Div_4
 ((
uöt32_t
)0x30000000)

	)

491 
	#RCC_MCO2Div_5
 ((
uöt32_t
)0x38000000)

	)

492 
	#IS_RCC_MCO2SOURCE
(
SOURCE
Ë(((SOURCEË=
RCC_MCO2Sour˚_SYSCLK
Ë|| ((SOURCEË=
RCC_MCO2Sour˚_PLLI2SCLK
)|| \

	)

493 ((
SOURCE
Ë=
RCC_MCO2Sour˚_HSE
Ë|| ((SOURCEË=
RCC_MCO2Sour˚_PLLCLK
))

495 
	#IS_RCC_MCO2DIV
(
DIV
Ë(((DIVË=
RCC_MCO2Div_1
Ë|| ((DIVË=
RCC_MCO2Div_2
Ë|| \

	)

496 ((
DIV
Ë=
RCC_MCO2Div_3
Ë|| ((DIVË=
RCC_MCO2Div_4
) || \

497 ((
DIV
Ë=
RCC_MCO2Div_5
))

505 
	#RCC_FLAG_HSIRDY
 ((
uöt8_t
)0x21)

	)

506 
	#RCC_FLAG_HSERDY
 ((
uöt8_t
)0x31)

	)

507 
	#RCC_FLAG_PLLRDY
 ((
uöt8_t
)0x39)

	)

508 
	#RCC_FLAG_PLLI2SRDY
 ((
uöt8_t
)0x3B)

	)

509 
	#RCC_FLAG_PLLSAIRDY
 ((
uöt8_t
)0x3D)

	)

510 
	#RCC_FLAG_LSERDY
 ((
uöt8_t
)0x41)

	)

511 
	#RCC_FLAG_LSIRDY
 ((
uöt8_t
)0x61)

	)

512 
	#RCC_FLAG_BORRST
 ((
uöt8_t
)0x79)

	)

513 
	#RCC_FLAG_PINRST
 ((
uöt8_t
)0x7A)

	)

514 
	#RCC_FLAG_PORRST
 ((
uöt8_t
)0x7B)

	)

515 
	#RCC_FLAG_SFTRST
 ((
uöt8_t
)0x7C)

	)

516 
	#RCC_FLAG_IWDGRST
 ((
uöt8_t
)0x7D)

	)

517 
	#RCC_FLAG_WWDGRST
 ((
uöt8_t
)0x7E)

	)

518 
	#RCC_FLAG_LPWRRST
 ((
uöt8_t
)0x7F)

	)

520 
	#IS_RCC_FLAG
(
FLAG
Ë(((FLAGË=
RCC_FLAG_HSIRDY
Ë|| ((FLAGË=
RCC_FLAG_HSERDY
Ë|| \

	)

521 ((
FLAG
Ë=
RCC_FLAG_PLLRDY
Ë|| ((FLAGË=
RCC_FLAG_LSERDY
) || \

522 ((
FLAG
Ë=
RCC_FLAG_LSIRDY
Ë|| ((FLAGË=
RCC_FLAG_BORRST
) || \

523 ((
FLAG
Ë=
RCC_FLAG_PINRST
Ë|| ((FLAGË=
RCC_FLAG_PORRST
) || \

524 ((
FLAG
Ë=
RCC_FLAG_SFTRST
Ë|| ((FLAGË=
RCC_FLAG_IWDGRST
)|| \

525 ((
FLAG
Ë=
RCC_FLAG_WWDGRST
Ë|| ((FLAGË=
RCC_FLAG_LPWRRST
)|| \

526 ((
FLAG
Ë=
RCC_FLAG_PLLI2SRDY
)|| ((FLAGË=
RCC_FLAG_PLLSAIRDY
))

528 
	#IS_RCC_CALIBRATION_VALUE
(
VALUE
Ë((VALUEË<0x1F)

	)

541 
RCC_DeInô
();

544 
RCC_HSEC⁄fig
(
uöt8_t
 
RCC_HSE
);

545 
Eº‹Sètus
 
RCC_WaôF‹HSESèπUp
();

546 
RCC_Adju°HSICÆibøti⁄VÆue
(
uöt8_t
 
HSICÆibøti⁄VÆue
);

547 
RCC_HSICmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

548 
RCC_LSEC⁄fig
(
uöt8_t
 
RCC_LSE
);

549 
RCC_LSICmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

550 
RCC_PLLC⁄fig
(
uöt32_t
 
RCC_PLLSour˚
, uöt32_à
PLLM
, uöt32_à
PLLN
, uöt32_à
PLLP
, uöt32_à
PLLQ
);

551 
RCC_PLLCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

553 #i‡
deföed
 (
STM32F40_41xxx
Ë|| deföed (
STM32F401xx
)

554 
RCC_PLLI2SC⁄fig
(
uöt32_t
 
PLLI2SN
, uöt32_à
PLLI2SR
);

555 #ñi‡
deföed
 (
STM32F411xE
)

556 
RCC_PLLI2SC⁄fig
(
uöt32_t
 
PLLI2SN
, uöt32_à
PLLI2SR
, uöt32_à
PLLI2SM
);

557 #ñi‡
deföed
 (
STM32F427_437xx
Ë|| deföed (
STM32F429_439xx
)

558 
RCC_PLLI2SC⁄fig
(
uöt32_t
 
PLLI2SN
, uöt32_à
PLLI2SQ
, uöt32_à
PLLI2SR
);

562 
RCC_PLLI2SCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

563 
RCC_PLLSAIC⁄fig
(
uöt32_t
 
PLLSAIN
, uöt32_à
PLLSAIQ
, uöt32_à
PLLSAIR
);

564 
RCC_PLLSAICmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

565 
RCC_ClockSecurôySy°emCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

566 
RCC_MCO1C⁄fig
(
uöt32_t
 
RCC_MCO1Sour˚
, uöt32_à
RCC_MCO1Div
);

567 
RCC_MCO2C⁄fig
(
uöt32_t
 
RCC_MCO2Sour˚
, uöt32_à
RCC_MCO2Div
);

570 
RCC_SYSCLKC⁄fig
(
uöt32_t
 
RCC_SYSCLKSour˚
);

571 
uöt8_t
 
RCC_GëSYSCLKSour˚
();

572 
RCC_HCLKC⁄fig
(
uöt32_t
 
RCC_SYSCLK
);

573 
RCC_PCLK1C⁄fig
(
uöt32_t
 
RCC_HCLK
);

574 
RCC_PCLK2C⁄fig
(
uöt32_t
 
RCC_HCLK
);

575 
RCC_GëClocksFªq
(
RCC_ClocksTy≥Def
* 
RCC_Clocks
);

578 
RCC_RTCCLKC⁄fig
(
uöt32_t
 
RCC_RTCCLKSour˚
);

579 
RCC_RTCCLKCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

580 
RCC_BackupRe£tCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

581 
RCC_I2SCLKC⁄fig
(
uöt32_t
 
RCC_I2SCLKSour˚
);

582 
RCC_SAIPLLI2SClkDivC⁄fig
(
uöt32_t
 
RCC_PLLI2SDivQ
);

583 
RCC_SAIPLLSAIClkDivC⁄fig
(
uöt32_t
 
RCC_PLLSAIDivQ
);

584 
RCC_SAIBlockACLKC⁄fig
(
uöt32_t
 
RCC_SAIBlockACLKSour˚
);

585 
RCC_SAIBlockBCLKC⁄fig
(
uöt32_t
 
RCC_SAIBlockBCLKSour˚
);

586 
RCC_LTDCCLKDivC⁄fig
(
uöt32_t
 
RCC_PLLSAIDivR
);

587 
RCC_TIMCLKPªsC⁄fig
(
uöt32_t
 
RCC_TIMCLKPªsˇÀr
);

589 
RCC_AHB1PîùhClockCmd
(
uöt32_t
 
RCC_AHB1Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

590 
RCC_AHB2PîùhClockCmd
(
uöt32_t
 
RCC_AHB2Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

591 
RCC_AHB3PîùhClockCmd
(
uöt32_t
 
RCC_AHB3Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

592 
RCC_APB1PîùhClockCmd
(
uöt32_t
 
RCC_APB1Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

593 
RCC_APB2PîùhClockCmd
(
uöt32_t
 
RCC_APB2Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

595 
RCC_AHB1PîùhRe£tCmd
(
uöt32_t
 
RCC_AHB1Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

596 
RCC_AHB2PîùhRe£tCmd
(
uöt32_t
 
RCC_AHB2Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

597 
RCC_AHB3PîùhRe£tCmd
(
uöt32_t
 
RCC_AHB3Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

598 
RCC_APB1PîùhRe£tCmd
(
uöt32_t
 
RCC_APB1Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

599 
RCC_APB2PîùhRe£tCmd
(
uöt32_t
 
RCC_APB2Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

601 
RCC_AHB1PîùhClockLPModeCmd
(
uöt32_t
 
RCC_AHB1Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

602 
RCC_AHB2PîùhClockLPModeCmd
(
uöt32_t
 
RCC_AHB2Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

603 
RCC_AHB3PîùhClockLPModeCmd
(
uöt32_t
 
RCC_AHB3Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

604 
RCC_APB1PîùhClockLPModeCmd
(
uöt32_t
 
RCC_APB1Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

605 
RCC_APB2PîùhClockLPModeCmd
(
uöt32_t
 
RCC_APB2Pîùh
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

607 
RCC_LSEModeC⁄fig
(
uöt8_t
 
Mode
);

610 
RCC_ITC⁄fig
(
uöt8_t
 
RCC_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

611 
FœgSètus
 
RCC_GëFœgSètus
(
uöt8_t
 
RCC_FLAG
);

612 
RCC_CÀ¨Fœg
();

613 
ITSètus
 
RCC_GëITSètus
(
uöt8_t
 
RCC_IT
);

614 
RCC_CÀ¨ITPídögBô
(
uöt8_t
 
RCC_IT
);

616 #ifde‡
__˝lu•lus


	@stm32f4xx_rng.h

30 #i‚de‡
__STM32F4xx_RNG_H


31 
	#__STM32F4xx_RNG_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

58 
	#RNG_FLAG_DRDY
 ((
uöt8_t
)0x0001Ë

	)

59 
	#RNG_FLAG_CECS
 ((
uöt8_t
)0x0002Ë

	)

60 
	#RNG_FLAG_SECS
 ((
uöt8_t
)0x0004Ë

	)

62 
	#IS_RNG_GET_FLAG
(
RNG_FLAG
Ë(((RNG_FLAGË=
RNG_FLAG_DRDY
Ë|| \

	)

63 ((
RNG_FLAG
Ë=
RNG_FLAG_CECS
) || \

64 ((
RNG_FLAG
Ë=
RNG_FLAG_SECS
))

65 
	#IS_RNG_CLEAR_FLAG
(
RNG_FLAG
Ë(((RNG_FLAGË=
RNG_FLAG_CECS
Ë|| \

	)

66 ((
RNG_FLAG
Ë=
RNG_FLAG_SECS
))

74 
	#RNG_IT_CEI
 ((
uöt8_t
)0x20Ë

	)

75 
	#RNG_IT_SEI
 ((
uöt8_t
)0x40Ë

	)

77 
	#IS_RNG_IT
(
IT
Ë((((ITË& (
uöt8_t
)0x9FË=0x00Ë&& ((ITË!0x00))

	)

78 
	#IS_RNG_GET_IT
(
RNG_IT
Ë(((RNG_ITË=
RNG_IT_CEI
Ë|| ((RNG_ITË=
RNG_IT_SEI
))

	)

91 
RNG_DeInô
();

94 
RNG_Cmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

97 
uöt32_t
 
RNG_GëR™domNumbî
();

100 
RNG_ITC⁄fig
(
Fun˘i⁄ÆSèã
 
NewSèã
);

101 
FœgSètus
 
RNG_GëFœgSètus
(
uöt8_t
 
RNG_FLAG
);

102 
RNG_CÀ¨Fœg
(
uöt8_t
 
RNG_FLAG
);

103 
ITSètus
 
RNG_GëITSètus
(
uöt8_t
 
RNG_IT
);

104 
RNG_CÀ¨ITPídögBô
(
uöt8_t
 
RNG_IT
);

106 #ifde‡
__˝lu•lus


	@stm32f4xx_rtc.h

30 #i‚de‡
__STM32F4xx_RTC_H


31 
	#__STM32F4xx_RTC_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

55 
uöt32_t
 
RTC_HourF‹m©
;

58 
uöt32_t
 
RTC_AsynchPªdiv
;

61 
uöt32_t
 
RTC_SynchPªdiv
;

63 }
	tRTC_InôTy≥Def
;

70 
uöt8_t
 
RTC_Hours
;

75 
uöt8_t
 
RTC_Möuãs
;

78 
uöt8_t
 
RTC_Sec⁄ds
;

81 
uöt8_t
 
RTC_H12
;

83 }
	tRTC_TimeTy≥Def
;

90 
uöt8_t
 
RTC_WìkDay
;

93 
uöt8_t
 
RTC_M⁄th
;

96 
uöt8_t
 
RTC_D©e
;

99 
uöt8_t
 
RTC_Yór
;

101 }
	tRTC_D©eTy≥Def
;

108 
RTC_TimeTy≥Def
 
RTC_AœrmTime
;

110 
uöt32_t
 
RTC_AœrmMask
;

113 
uöt32_t
 
RTC_AœrmD©eWìkDaySñ
;

116 
uöt8_t
 
RTC_AœrmD©eWìkDay
;

121 }
	tRTC_AœrmTy≥Def
;

133 
	#RTC_HourF‹m©_24
 ((
uöt32_t
)0x00000000)

	)

134 
	#RTC_HourF‹m©_12
 ((
uöt32_t
)0x00000040)

	)

135 
	#IS_RTC_HOUR_FORMAT
(
FORMAT
Ë(((FORMATË=
RTC_HourF‹m©_12
Ë|| \

	)

136 ((
FORMAT
Ë=
RTC_HourF‹m©_24
))

144 
	#IS_RTC_ASYNCH_PREDIV
(
PREDIV
Ë((PREDIVË<0x7F)

	)

154 
	#IS_RTC_SYNCH_PREDIV
(
PREDIV
Ë((PREDIVË<0x7FFF)

	)

163 
	#IS_RTC_HOUR12
(
HOUR
Ë(((HOURË> 0Ë&& ((HOURË<12))

	)

164 
	#IS_RTC_HOUR24
(
HOUR
Ë((HOURË<23)

	)

165 
	#IS_RTC_MINUTES
(
MINUTES
Ë((MINUTESË<59)

	)

166 
	#IS_RTC_SECONDS
(
SECONDS
Ë((SECONDSË<59)

	)

175 
	#RTC_H12_AM
 ((
uöt8_t
)0x00)

	)

176 
	#RTC_H12_PM
 ((
uöt8_t
)0x40)

	)

177 
	#IS_RTC_H12
(
PM
Ë(((PMË=
RTC_H12_AM
Ë|| ((PMË=
RTC_H12_PM
))

	)

186 
	#IS_RTC_YEAR
(
YEAR
Ë((YEARË<99)

	)

197 
	#RTC_M⁄th_J™u¨y
 ((
uöt8_t
)0x01)

	)

198 
	#RTC_M⁄th_Febru¨y
 ((
uöt8_t
)0x02)

	)

199 
	#RTC_M⁄th_M¨ch
 ((
uöt8_t
)0x03)

	)

200 
	#RTC_M⁄th_A¥û
 ((
uöt8_t
)0x04)

	)

201 
	#RTC_M⁄th_May
 ((
uöt8_t
)0x05)

	)

202 
	#RTC_M⁄th_Ju√
 ((
uöt8_t
)0x06)

	)

203 
	#RTC_M⁄th_July
 ((
uöt8_t
)0x07)

	)

204 
	#RTC_M⁄th_Augu°
 ((
uöt8_t
)0x08)

	)

205 
	#RTC_M⁄th_Sïãmbî
 ((
uöt8_t
)0x09)

	)

206 
	#RTC_M⁄th_O˘obî
 ((
uöt8_t
)0x10)

	)

207 
	#RTC_M⁄th_Novembî
 ((
uöt8_t
)0x11)

	)

208 
	#RTC_M⁄th_De˚mbî
 ((
uöt8_t
)0x12)

	)

209 
	#IS_RTC_MONTH
(
MONTH
Ë(((MONTHË>1Ë&& ((MONTHË<12))

	)

210 
	#IS_RTC_DATE
(
DATE
Ë(((DATEË>1Ë&& ((DATEË<31))

	)

220 
	#RTC_Wìkday_M⁄day
 ((
uöt8_t
)0x01)

	)

221 
	#RTC_Wìkday_Tuesday
 ((
uöt8_t
)0x02)

	)

222 
	#RTC_Wìkday_Wed√sday
 ((
uöt8_t
)0x03)

	)

223 
	#RTC_Wìkday_Thursday
 ((
uöt8_t
)0x04)

	)

224 
	#RTC_Wìkday_Friday
 ((
uöt8_t
)0x05)

	)

225 
	#RTC_Wìkday_S©urday
 ((
uöt8_t
)0x06)

	)

226 
	#RTC_Wìkday_Sunday
 ((
uöt8_t
)0x07)

	)

227 
	#IS_RTC_WEEKDAY
(
WEEKDAY
Ë(((WEEKDAYË=
RTC_Wìkday_M⁄day
Ë|| \

	)

228 ((
WEEKDAY
Ë=
RTC_Wìkday_Tuesday
) || \

229 ((
WEEKDAY
Ë=
RTC_Wìkday_Wed√sday
) || \

230 ((
WEEKDAY
Ë=
RTC_Wìkday_Thursday
) || \

231 ((
WEEKDAY
Ë=
RTC_Wìkday_Friday
) || \

232 ((
WEEKDAY
Ë=
RTC_Wìkday_S©urday
) || \

233 ((
WEEKDAY
Ë=
RTC_Wìkday_Sunday
))

242 
	#IS_RTC_ALARM_DATE_WEEKDAY_DATE
(
DATE
Ë(((DATEË> 0Ë&& ((DATEË<31))

	)

243 
	#IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY
(
WEEKDAY
Ë(((WEEKDAYË=
RTC_Wìkday_M⁄day
Ë|| \

	)

244 ((
WEEKDAY
Ë=
RTC_Wìkday_Tuesday
) || \

245 ((
WEEKDAY
Ë=
RTC_Wìkday_Wed√sday
) || \

246 ((
WEEKDAY
Ë=
RTC_Wìkday_Thursday
) || \

247 ((
WEEKDAY
Ë=
RTC_Wìkday_Friday
) || \

248 ((
WEEKDAY
Ë=
RTC_Wìkday_S©urday
) || \

249 ((
WEEKDAY
Ë=
RTC_Wìkday_Sunday
))

259 
	#RTC_AœrmD©eWìkDaySñ_D©e
 ((
uöt32_t
)0x00000000)

	)

260 
	#RTC_AœrmD©eWìkDaySñ_WìkDay
 ((
uöt32_t
)0x40000000)

	)

262 
	#IS_RTC_ALARM_DATE_WEEKDAY_SEL
(
SEL
Ë(((SELË=
RTC_AœrmD©eWìkDaySñ_D©e
Ë|| \

	)

263 ((
SEL
Ë=
RTC_AœrmD©eWìkDaySñ_WìkDay
))

273 
	#RTC_AœrmMask_N⁄e
 ((
uöt32_t
)0x00000000)

	)

274 
	#RTC_AœrmMask_D©eWìkDay
 ((
uöt32_t
)0x80000000)

	)

275 
	#RTC_AœrmMask_Hours
 ((
uöt32_t
)0x00800000)

	)

276 
	#RTC_AœrmMask_Möuãs
 ((
uöt32_t
)0x00008000)

	)

277 
	#RTC_AœrmMask_Sec⁄ds
 ((
uöt32_t
)0x00000080)

	)

278 
	#RTC_AœrmMask_AŒ
 ((
uöt32_t
)0x80808080)

	)

279 
	#IS_ALARM_MASK
(
MASK
Ë(((MASKË& 0x7F7F7F7FË=(
uöt32_t
)
RESET
)

	)

288 
	#RTC_Aœrm_A
 ((
uöt32_t
)0x00000100)

	)

289 
	#RTC_Aœrm_B
 ((
uöt32_t
)0x00000200)

	)

290 
	#IS_RTC_ALARM
(
ALARM
Ë(((ALARMË=
RTC_Aœrm_A
Ë|| ((ALARMË=
RTC_Aœrm_B
))

	)

291 
	#IS_RTC_CMD_ALARM
(
ALARM
Ë(((ALARMË& (
RTC_Aœrm_A
 | 
RTC_Aœrm_B
)Ë!(
uöt32_t
)
RESET
)

	)

300 
	#RTC_AœrmSubSec⁄dMask_AŒ
 ((
uöt32_t
)0x00000000Ë

	)

303 
	#RTC_AœrmSubSec⁄dMask_SS14_1
 ((
uöt32_t
)0x01000000Ë

	)

305 
	#RTC_AœrmSubSec⁄dMask_SS14_2
 ((
uöt32_t
)0x02000000Ë

	)

307 
	#RTC_AœrmSubSec⁄dMask_SS14_3
 ((
uöt32_t
)0x03000000Ë

	)

309 
	#RTC_AœrmSubSec⁄dMask_SS14_4
 ((
uöt32_t
)0x04000000Ë

	)

311 
	#RTC_AœrmSubSec⁄dMask_SS14_5
 ((
uöt32_t
)0x05000000Ë

	)

313 
	#RTC_AœrmSubSec⁄dMask_SS14_6
 ((
uöt32_t
)0x06000000Ë

	)

315 
	#RTC_AœrmSubSec⁄dMask_SS14_7
 ((
uöt32_t
)0x07000000Ë

	)

317 
	#RTC_AœrmSubSec⁄dMask_SS14_8
 ((
uöt32_t
)0x08000000Ë

	)

319 
	#RTC_AœrmSubSec⁄dMask_SS14_9
 ((
uöt32_t
)0x09000000Ë

	)

321 
	#RTC_AœrmSubSec⁄dMask_SS14_10
 ((
uöt32_t
)0x0A000000Ë

	)

323 
	#RTC_AœrmSubSec⁄dMask_SS14_11
 ((
uöt32_t
)0x0B000000Ë

	)

325 
	#RTC_AœrmSubSec⁄dMask_SS14_12
 ((
uöt32_t
)0x0C000000Ë

	)

327 
	#RTC_AœrmSubSec⁄dMask_SS14_13
 ((
uöt32_t
)0x0D000000Ë

	)

329 
	#RTC_AœrmSubSec⁄dMask_SS14
 ((
uöt32_t
)0x0E000000Ë

	)

331 
	#RTC_AœrmSubSec⁄dMask_N⁄e
 ((
uöt32_t
)0x0F000000Ë

	)

333 
	#IS_RTC_ALARM_SUB_SECOND_MASK
(
MASK
Ë(((MASKË=
RTC_AœrmSubSec⁄dMask_AŒ
Ë|| \

	)

334 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_1
) || \

335 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_2
) || \

336 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_3
) || \

337 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_4
) || \

338 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_5
) || \

339 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_6
) || \

340 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_7
) || \

341 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_8
) || \

342 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_9
) || \

343 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_10
) || \

344 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_11
) || \

345 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_12
) || \

346 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14_13
) || \

347 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_SS14
) || \

348 ((
MASK
Ë=
RTC_AœrmSubSec⁄dMask_N⁄e
))

357 
	#IS_RTC_ALARM_SUB_SECOND_VALUE
(
VALUE
Ë((VALUEË<0x00007FFF)

	)

366 
	#RTC_WakeUpClock_RTCCLK_Div16
 ((
uöt32_t
)0x00000000)

	)

367 
	#RTC_WakeUpClock_RTCCLK_Div8
 ((
uöt32_t
)0x00000001)

	)

368 
	#RTC_WakeUpClock_RTCCLK_Div4
 ((
uöt32_t
)0x00000002)

	)

369 
	#RTC_WakeUpClock_RTCCLK_Div2
 ((
uöt32_t
)0x00000003)

	)

370 
	#RTC_WakeUpClock_CK_SPRE_16bôs
 ((
uöt32_t
)0x00000004)

	)

371 
	#RTC_WakeUpClock_CK_SPRE_17bôs
 ((
uöt32_t
)0x00000006)

	)

372 
	#IS_RTC_WAKEUP_CLOCK
(
CLOCK
Ë(((CLOCKË=
RTC_WakeUpClock_RTCCLK_Div16
Ë|| \

	)

373 ((
CLOCK
Ë=
RTC_WakeUpClock_RTCCLK_Div8
) || \

374 ((
CLOCK
Ë=
RTC_WakeUpClock_RTCCLK_Div4
) || \

375 ((
CLOCK
Ë=
RTC_WakeUpClock_RTCCLK_Div2
) || \

376 ((
CLOCK
Ë=
RTC_WakeUpClock_CK_SPRE_16bôs
) || \

377 ((
CLOCK
Ë=
RTC_WakeUpClock_CK_SPRE_17bôs
))

378 
	#IS_RTC_WAKEUP_COUNTER
(
COUNTER
Ë((COUNTERË<0xFFFF)

	)

386 
	#RTC_TimeSèmpEdge_Risög
 ((
uöt32_t
)0x00000000)

	)

387 
	#RTC_TimeSèmpEdge_FÆlög
 ((
uöt32_t
)0x00000008)

	)

388 
	#IS_RTC_TIMESTAMP_EDGE
(
EDGE
Ë(((EDGEË=
RTC_TimeSèmpEdge_Risög
Ë|| \

	)

389 ((
EDGE
Ë=
RTC_TimeSèmpEdge_FÆlög
))

397 
	#RTC_Ouçut_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

398 
	#RTC_Ouçut_AœrmA
 ((
uöt32_t
)0x00200000)

	)

399 
	#RTC_Ouçut_AœrmB
 ((
uöt32_t
)0x00400000)

	)

400 
	#RTC_Ouçut_WakeUp
 ((
uöt32_t
)0x00600000)

	)

402 
	#IS_RTC_OUTPUT
(
OUTPUT
Ë(((OUTPUTË=
RTC_Ouçut_DißbÀ
Ë|| \

	)

403 ((
OUTPUT
Ë=
RTC_Ouçut_AœrmA
) || \

404 ((
OUTPUT
Ë=
RTC_Ouçut_AœrmB
) || \

405 ((
OUTPUT
Ë=
RTC_Ouçut_WakeUp
))

414 
	#RTC_OuçutPﬁ¨ôy_High
 ((
uöt32_t
)0x00000000)

	)

415 
	#RTC_OuçutPﬁ¨ôy_Low
 ((
uöt32_t
)0x00100000)

	)

416 
	#IS_RTC_OUTPUT_POL
(
POL
Ë(((POLË=
RTC_OuçutPﬁ¨ôy_High
Ë|| \

	)

417 ((
POL
Ë=
RTC_OuçutPﬁ¨ôy_Low
))

426 
	#RTC_CÆibSign_Posôive
 ((
uöt32_t
)0x00000000)

	)

427 
	#RTC_CÆibSign_Neg©ive
 ((
uöt32_t
)0x00000080)

	)

428 
	#IS_RTC_CALIB_SIGN
(
SIGN
Ë(((SIGNË=
RTC_CÆibSign_Posôive
Ë|| \

	)

429 ((
SIGN
Ë=
RTC_CÆibSign_Neg©ive
))

430 
	#IS_RTC_CALIB_VALUE
(
VALUE
Ë((VALUEË< 0x20)

	)

439 
	#RTC_CÆibOuçut_512Hz
 ((
uöt32_t
)0x00000000)

	)

440 
	#RTC_CÆibOuçut_1Hz
 ((
uöt32_t
)0x00080000)

	)

441 
	#IS_RTC_CALIB_OUTPUT
(
OUTPUT
Ë(((OUTPUTË=
RTC_CÆibOuçut_512Hz
Ë|| \

	)

442 ((
OUTPUT
Ë=
RTC_CÆibOuçut_1Hz
))

450 
	#RTC_SmoŸhCÆibPîiod_32£c
 ((
uöt32_t
)0x00000000Ë

	)

452 
	#RTC_SmoŸhCÆibPîiod_16£c
 ((
uöt32_t
)0x00002000Ë

	)

454 
	#RTC_SmoŸhCÆibPîiod_8£c
 ((
uöt32_t
)0x00004000Ë

	)

456 
	#IS_RTC_SMOOTH_CALIB_PERIOD
(
PERIOD
Ë(((PERIODË=
RTC_SmoŸhCÆibPîiod_32£c
Ë|| \

	)

457 ((
PERIOD
Ë=
RTC_SmoŸhCÆibPîiod_16£c
) || \

458 ((
PERIOD
Ë=
RTC_SmoŸhCÆibPîiod_8£c
))

467 
	#RTC_SmoŸhCÆibPlusPul£s_Së
 ((
uöt32_t
)0x00008000Ë

	)

470 
	#RTC_SmoŸhCÆibPlusPul£s_Re£t
 ((
uöt32_t
)0x00000000Ë

	)

472 
	#IS_RTC_SMOOTH_CALIB_PLUS
(
PLUS
Ë(((PLUSË=
RTC_SmoŸhCÆibPlusPul£s_Së
Ë|| \

	)

473 ((
PLUS
Ë=
RTC_SmoŸhCÆibPlusPul£s_Re£t
))

482 
	#IS_RTC_SMOOTH_CALIB_MINUS
(
VALUE
Ë((VALUEË<0x000001FF)

	)

491 
	#RTC_DayLightSavög_SUB1H
 ((
uöt32_t
)0x00020000)

	)

492 
	#RTC_DayLightSavög_ADD1H
 ((
uöt32_t
)0x00010000)

	)

493 
	#IS_RTC_DAYLIGHT_SAVING
(
SAVE
Ë(((SAVEË=
RTC_DayLightSavög_SUB1H
Ë|| \

	)

494 ((
SAVE
Ë=
RTC_DayLightSavög_ADD1H
))

496 
	#RTC_St‹eO≥øti⁄_Re£t
 ((
uöt32_t
)0x00000000)

	)

497 
	#RTC_St‹eO≥øti⁄_Së
 ((
uöt32_t
)0x00040000)

	)

498 
	#IS_RTC_STORE_OPERATION
(
OPERATION
Ë(((OPERATIONË=
RTC_St‹eO≥øti⁄_Re£t
Ë|| \

	)

499 ((
OPERATION
Ë=
RTC_St‹eO≥øti⁄_Së
))

507 
	#RTC_Tam≥rTriggî_RisögEdge
 ((
uöt32_t
)0x00000000)

	)

508 
	#RTC_Tam≥rTriggî_FÆlögEdge
 ((
uöt32_t
)0x00000001)

	)

509 
	#RTC_Tam≥rTriggî_LowLevñ
 ((
uöt32_t
)0x00000000)

	)

510 
	#RTC_Tam≥rTriggî_HighLevñ
 ((
uöt32_t
)0x00000001)

	)

511 
	#IS_RTC_TAMPER_TRIGGER
(
TRIGGER
Ë(((TRIGGERË=
RTC_Tam≥rTriggî_RisögEdge
Ë|| \

	)

512 ((
TRIGGER
Ë=
RTC_Tam≥rTriggî_FÆlögEdge
) || \

513 ((
TRIGGER
Ë=
RTC_Tam≥rTriggî_LowLevñ
) || \

514 ((
TRIGGER
Ë=
RTC_Tam≥rTriggî_HighLevñ
))

523 
	#RTC_Tam≥rFûãr_DißbÀ
 ((
uöt32_t
)0x00000000Ë

	)

525 
	#RTC_Tam≥rFûãr_2Sam∂e
 ((
uöt32_t
)0x00000800Ë

	)

527 
	#RTC_Tam≥rFûãr_4Sam∂e
 ((
uöt32_t
)0x00001000Ë

	)

529 
	#RTC_Tam≥rFûãr_8Sam∂e
 ((
uöt32_t
)0x00001800Ë

	)

531 
	#IS_RTC_TAMPER_FILTER
(
FILTER
Ë(((FILTERË=
RTC_Tam≥rFûãr_DißbÀ
Ë|| \

	)

532 ((
FILTER
Ë=
RTC_Tam≥rFûãr_2Sam∂e
) || \

533 ((
FILTER
Ë=
RTC_Tam≥rFûãr_4Sam∂e
) || \

534 ((
FILTER
Ë=
RTC_Tam≥rFûãr_8Sam∂e
))

542 
	#RTC_Tam≥rSam∂ögFªq_RTCCLK_Div32768
 ((
uöt32_t
)0x00000000Ë

	)

544 
	#RTC_Tam≥rSam∂ögFªq_RTCCLK_Div16384
 ((
uöt32_t
)0x000000100Ë

	)

546 
	#RTC_Tam≥rSam∂ögFªq_RTCCLK_Div8192
 ((
uöt32_t
)0x00000200Ë

	)

548 
	#RTC_Tam≥rSam∂ögFªq_RTCCLK_Div4096
 ((
uöt32_t
)0x00000300Ë

	)

550 
	#RTC_Tam≥rSam∂ögFªq_RTCCLK_Div2048
 ((
uöt32_t
)0x00000400Ë

	)

552 
	#RTC_Tam≥rSam∂ögFªq_RTCCLK_Div1024
 ((
uöt32_t
)0x00000500Ë

	)

554 
	#RTC_Tam≥rSam∂ögFªq_RTCCLK_Div512
 ((
uöt32_t
)0x00000600Ë

	)

556 
	#RTC_Tam≥rSam∂ögFªq_RTCCLK_Div256
 ((
uöt32_t
)0x00000700Ë

	)

558 
	#IS_RTC_TAMPER_SAMPLING_FREQ
(
FREQ
Ë(((FREQË==
RTC_Tam≥rSam∂ögFªq_RTCCLK_Div32768
Ë|| \

	)

559 ((
FREQ
Ë==
RTC_Tam≥rSam∂ögFªq_RTCCLK_Div16384
) || \

560 ((
FREQ
Ë==
RTC_Tam≥rSam∂ögFªq_RTCCLK_Div8192
) || \

561 ((
FREQ
Ë==
RTC_Tam≥rSam∂ögFªq_RTCCLK_Div4096
) || \

562 ((
FREQ
Ë==
RTC_Tam≥rSam∂ögFªq_RTCCLK_Div2048
) || \

563 ((
FREQ
Ë==
RTC_Tam≥rSam∂ögFªq_RTCCLK_Div1024
) || \

564 ((
FREQ
Ë==
RTC_Tam≥rSam∂ögFªq_RTCCLK_Div512
) || \

565 ((
FREQ
Ë==
RTC_Tam≥rSam∂ögFªq_RTCCLK_Div256
))

574 
	#RTC_Tam≥rPªch¨geDuøti⁄_1RTCCLK
 ((
uöt32_t
)0x00000000Ë

	)

576 
	#RTC_Tam≥rPªch¨geDuøti⁄_2RTCCLK
 ((
uöt32_t
)0x00002000Ë

	)

578 
	#RTC_Tam≥rPªch¨geDuøti⁄_4RTCCLK
 ((
uöt32_t
)0x00004000Ë

	)

580 
	#RTC_Tam≥rPªch¨geDuøti⁄_8RTCCLK
 ((
uöt32_t
)0x00006000Ë

	)

583 
	#IS_RTC_TAMPER_PRECHARGE_DURATION
(
DURATION
Ë(((DURATIONË=
RTC_Tam≥rPªch¨geDuøti⁄_1RTCCLK
Ë|| \

	)

584 ((
DURATION
Ë=
RTC_Tam≥rPªch¨geDuøti⁄_2RTCCLK
) || \

585 ((
DURATION
Ë=
RTC_Tam≥rPªch¨geDuøti⁄_4RTCCLK
) || \

586 ((
DURATION
Ë=
RTC_Tam≥rPªch¨geDuøti⁄_8RTCCLK
))

594 
	#RTC_Tam≥r_1
 
RTC_TAFCR_TAMP1E


	)

595 
	#IS_RTC_TAMPER
(
TAMPER
Ë(((TAMPERË=
RTC_Tam≥r_1
))

	)

604 
	#RTC_Tam≥rPö_PC13
 ((
uöt32_t
)0x00000000)

	)

605 
	#RTC_Tam≥rPö_PI8
 ((
uöt32_t
)0x00010000)

	)

606 
	#IS_RTC_TAMPER_PIN
(
PIN
Ë(((PINË=
RTC_Tam≥rPö_PC13
Ë|| \

	)

607 ((
PIN
Ë=
RTC_Tam≥rPö_PI8
))

615 
	#RTC_TimeSèmpPö_PC13
 ((
uöt32_t
)0x00000000)

	)

616 
	#RTC_TimeSèmpPö_PI8
 ((
uöt32_t
)0x00020000)

	)

617 
	#IS_RTC_TIMESTAMP_PIN
(
PIN
Ë(((PINË=
RTC_TimeSèmpPö_PC13
Ë|| \

	)

618 ((
PIN
Ë=
RTC_TimeSèmpPö_PI8
))

626 
	#RTC_OuçutTy≥_O≥nDøö
 ((
uöt32_t
)0x00000000)

	)

627 
	#RTC_OuçutTy≥_PushPuŒ
 ((
uöt32_t
)0x00040000)

	)

628 
	#IS_RTC_OUTPUT_TYPE
(
TYPE
Ë(((TYPEË=
RTC_OuçutTy≥_O≥nDøö
Ë|| \

	)

629 ((
TYPE
Ë=
RTC_OuçutTy≥_PushPuŒ
))

638 
	#RTC_Shi·Add1S_Re£t
 ((
uöt32_t
)0x00000000)

	)

639 
	#RTC_Shi·Add1S_Së
 ((
uöt32_t
)0x80000000)

	)

640 
	#IS_RTC_SHIFT_ADD1S
(
SEL
Ë(((SELË=
RTC_Shi·Add1S_Re£t
Ë|| \

	)

641 ((
SEL
Ë=
RTC_Shi·Add1S_Së
))

649 
	#IS_RTC_SHIFT_SUBFS
(
FS
Ë((FSË<0x00007FFF)

	)

659 
	#RTC_BKP_DR0
 ((
uöt32_t
)0x00000000)

	)

660 
	#RTC_BKP_DR1
 ((
uöt32_t
)0x00000001)

	)

661 
	#RTC_BKP_DR2
 ((
uöt32_t
)0x00000002)

	)

662 
	#RTC_BKP_DR3
 ((
uöt32_t
)0x00000003)

	)

663 
	#RTC_BKP_DR4
 ((
uöt32_t
)0x00000004)

	)

664 
	#RTC_BKP_DR5
 ((
uöt32_t
)0x00000005)

	)

665 
	#RTC_BKP_DR6
 ((
uöt32_t
)0x00000006)

	)

666 
	#RTC_BKP_DR7
 ((
uöt32_t
)0x00000007)

	)

667 
	#RTC_BKP_DR8
 ((
uöt32_t
)0x00000008)

	)

668 
	#RTC_BKP_DR9
 ((
uöt32_t
)0x00000009)

	)

669 
	#RTC_BKP_DR10
 ((
uöt32_t
)0x0000000A)

	)

670 
	#RTC_BKP_DR11
 ((
uöt32_t
)0x0000000B)

	)

671 
	#RTC_BKP_DR12
 ((
uöt32_t
)0x0000000C)

	)

672 
	#RTC_BKP_DR13
 ((
uöt32_t
)0x0000000D)

	)

673 
	#RTC_BKP_DR14
 ((
uöt32_t
)0x0000000E)

	)

674 
	#RTC_BKP_DR15
 ((
uöt32_t
)0x0000000F)

	)

675 
	#RTC_BKP_DR16
 ((
uöt32_t
)0x00000010)

	)

676 
	#RTC_BKP_DR17
 ((
uöt32_t
)0x00000011)

	)

677 
	#RTC_BKP_DR18
 ((
uöt32_t
)0x00000012)

	)

678 
	#RTC_BKP_DR19
 ((
uöt32_t
)0x00000013)

	)

679 
	#IS_RTC_BKP
(
BKP
Ë(((BKPË=
RTC_BKP_DR0
Ë|| \

	)

680 ((
BKP
Ë=
RTC_BKP_DR1
) || \

681 ((
BKP
Ë=
RTC_BKP_DR2
) || \

682 ((
BKP
Ë=
RTC_BKP_DR3
) || \

683 ((
BKP
Ë=
RTC_BKP_DR4
) || \

684 ((
BKP
Ë=
RTC_BKP_DR5
) || \

685 ((
BKP
Ë=
RTC_BKP_DR6
) || \

686 ((
BKP
Ë=
RTC_BKP_DR7
) || \

687 ((
BKP
Ë=
RTC_BKP_DR8
) || \

688 ((
BKP
Ë=
RTC_BKP_DR9
) || \

689 ((
BKP
Ë=
RTC_BKP_DR10
) || \

690 ((
BKP
Ë=
RTC_BKP_DR11
) || \

691 ((
BKP
Ë=
RTC_BKP_DR12
) || \

692 ((
BKP
Ë=
RTC_BKP_DR13
) || \

693 ((
BKP
Ë=
RTC_BKP_DR14
) || \

694 ((
BKP
Ë=
RTC_BKP_DR15
) || \

695 ((
BKP
Ë=
RTC_BKP_DR16
) || \

696 ((
BKP
Ë=
RTC_BKP_DR17
) || \

697 ((
BKP
Ë=
RTC_BKP_DR18
) || \

698 ((
BKP
Ë=
RTC_BKP_DR19
))

706 
	#RTC_F‹m©_BIN
 ((
uöt32_t
)0x000000000)

	)

707 
	#RTC_F‹m©_BCD
 ((
uöt32_t
)0x000000001)

	)

708 
	#IS_RTC_FORMAT
(
FORMAT
Ë(((FORMATË=
RTC_F‹m©_BIN
Ë|| ((FORMATË=
RTC_F‹m©_BCD
))

	)

717 
	#RTC_FLAG_RECALPF
 ((
uöt32_t
)0x00010000)

	)

718 
	#RTC_FLAG_TAMP1F
 ((
uöt32_t
)0x00002000)

	)

719 
	#RTC_FLAG_TSOVF
 ((
uöt32_t
)0x00001000)

	)

720 
	#RTC_FLAG_TSF
 ((
uöt32_t
)0x00000800)

	)

721 
	#RTC_FLAG_WUTF
 ((
uöt32_t
)0x00000400)

	)

722 
	#RTC_FLAG_ALRBF
 ((
uöt32_t
)0x00000200)

	)

723 
	#RTC_FLAG_ALRAF
 ((
uöt32_t
)0x00000100)

	)

724 
	#RTC_FLAG_INITF
 ((
uöt32_t
)0x00000040)

	)

725 
	#RTC_FLAG_RSF
 ((
uöt32_t
)0x00000020)

	)

726 
	#RTC_FLAG_INITS
 ((
uöt32_t
)0x00000010)

	)

727 
	#RTC_FLAG_SHPF
 ((
uöt32_t
)0x00000008)

	)

728 
	#RTC_FLAG_WUTWF
 ((
uöt32_t
)0x00000004)

	)

729 
	#RTC_FLAG_ALRBWF
 ((
uöt32_t
)0x00000002)

	)

730 
	#RTC_FLAG_ALRAWF
 ((
uöt32_t
)0x00000001)

	)

731 
	#IS_RTC_GET_FLAG
(
FLAG
Ë(((FLAGË=
RTC_FLAG_TSOVF
Ë|| ((FLAGË=
RTC_FLAG_TSF
Ë|| \

	)

732 ((
FLAG
Ë=
RTC_FLAG_WUTF
Ë|| ((FLAGË=
RTC_FLAG_ALRBF
) || \

733 ((
FLAG
Ë=
RTC_FLAG_ALRAF
Ë|| ((FLAGË=
RTC_FLAG_INITF
) || \

734 ((
FLAG
Ë=
RTC_FLAG_RSF
Ë|| ((FLAGË=
RTC_FLAG_WUTWF
) || \

735 ((
FLAG
Ë=
RTC_FLAG_ALRBWF
Ë|| ((FLAGË=
RTC_FLAG_ALRAWF
) || \

736 ((
FLAG
Ë=
RTC_FLAG_TAMP1F
Ë|| ((FLAGË=
RTC_FLAG_RECALPF
) || \

737 ((
FLAG
Ë=
RTC_FLAG_SHPF
))

738 
	#IS_RTC_CLEAR_FLAG
(
FLAG
Ë(((FLAGË!(
uöt32_t
)
RESET
Ë&& (((FLAGË& 0xFFFF00DFË=(uöt32_t)RESET))

	)

746 
	#RTC_IT_TS
 ((
uöt32_t
)0x00008000)

	)

747 
	#RTC_IT_WUT
 ((
uöt32_t
)0x00004000)

	)

748 
	#RTC_IT_ALRB
 ((
uöt32_t
)0x00002000)

	)

749 
	#RTC_IT_ALRA
 ((
uöt32_t
)0x00001000)

	)

750 
	#RTC_IT_TAMP
 ((
uöt32_t
)0x00000004Ë

	)

751 
	#RTC_IT_TAMP1
 ((
uöt32_t
)0x00020000)

	)

753 
	#IS_RTC_CONFIG_IT
(
IT
Ë(((ITË!(
uöt32_t
)
RESET
Ë&& (((ITË& 0xFFFF0FFBË=(uöt32_t)RESET))

	)

754 
	#IS_RTC_GET_IT
(
IT
Ë(((ITË=
RTC_IT_TS
Ë|| ((ITË=
RTC_IT_WUT
Ë|| \

	)

755 ((
IT
Ë=
RTC_IT_ALRB
Ë|| ((ITË=
RTC_IT_ALRA
) || \

756 ((
IT
Ë=
RTC_IT_TAMP1
))

757 
	#IS_RTC_CLEAR_IT
(
IT
Ë(((ITË!(
uöt32_t
)
RESET
Ë&& (((ITË& 0xFFFD0FFFË=(uöt32_t)RESET))

	)

766 
	#RTC_DigôÆCÆibC⁄fig
 
RTC_Cﬂr£CÆibC⁄fig


	)

767 
	#RTC_DigôÆCÆibCmd
 
RTC_Cﬂr£CÆibCmd


	)

781 
Eº‹Sètus
 
RTC_DeInô
();

784 
Eº‹Sètus
 
RTC_Inô
(
RTC_InôTy≥Def
* 
RTC_InôSåu˘
);

785 
RTC_Såu˘Inô
(
RTC_InôTy≥Def
* 
RTC_InôSåu˘
);

786 
RTC_WrôePrŸe˘i⁄Cmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

787 
Eº‹Sètus
 
RTC_E¡îInôMode
();

788 
RTC_ExôInôMode
();

789 
Eº‹Sètus
 
RTC_WaôF‹Synchro
();

790 
Eº‹Sètus
 
RTC_RefClockCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

791 
RTC_By∑ssShadowCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

794 
Eº‹Sètus
 
RTC_SëTime
(
uöt32_t
 
RTC_F‹m©
, 
RTC_TimeTy≥Def
* 
RTC_TimeSåu˘
);

795 
RTC_TimeSåu˘Inô
(
RTC_TimeTy≥Def
* 
RTC_TimeSåu˘
);

796 
RTC_GëTime
(
uöt32_t
 
RTC_F‹m©
, 
RTC_TimeTy≥Def
* 
RTC_TimeSåu˘
);

797 
uöt32_t
 
RTC_GëSubSec⁄d
();

798 
Eº‹Sètus
 
RTC_SëD©e
(
uöt32_t
 
RTC_F‹m©
, 
RTC_D©eTy≥Def
* 
RTC_D©eSåu˘
);

799 
RTC_D©eSåu˘Inô
(
RTC_D©eTy≥Def
* 
RTC_D©eSåu˘
);

800 
RTC_GëD©e
(
uöt32_t
 
RTC_F‹m©
, 
RTC_D©eTy≥Def
* 
RTC_D©eSåu˘
);

803 
RTC_SëAœrm
(
uöt32_t
 
RTC_F‹m©
, uöt32_à
RTC_Aœrm
, 
RTC_AœrmTy≥Def
* 
RTC_AœrmSåu˘
);

804 
RTC_AœrmSåu˘Inô
(
RTC_AœrmTy≥Def
* 
RTC_AœrmSåu˘
);

805 
RTC_GëAœrm
(
uöt32_t
 
RTC_F‹m©
, uöt32_à
RTC_Aœrm
, 
RTC_AœrmTy≥Def
* 
RTC_AœrmSåu˘
);

806 
Eº‹Sètus
 
RTC_AœrmCmd
(
uöt32_t
 
RTC_Aœrm
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

807 
RTC_AœrmSubSec⁄dC⁄fig
(
uöt32_t
 
RTC_Aœrm
, uöt32_à
RTC_AœrmSubSec⁄dVÆue
, uöt32_à
RTC_AœrmSubSec⁄dMask
);

808 
uöt32_t
 
RTC_GëAœrmSubSec⁄d
(uöt32_à
RTC_Aœrm
);

811 
RTC_WakeUpClockC⁄fig
(
uöt32_t
 
RTC_WakeUpClock
);

812 
RTC_SëWakeUpCou¡î
(
uöt32_t
 
RTC_WakeUpCou¡î
);

813 
uöt32_t
 
RTC_GëWakeUpCou¡î
();

814 
Eº‹Sètus
 
RTC_WakeUpCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

817 
RTC_DayLightSavögC⁄fig
(
uöt32_t
 
RTC_DayLightSavög
, uöt32_à
RTC_St‹eO≥øti⁄
);

818 
uöt32_t
 
RTC_GëSt‹eO≥øti⁄
();

821 
RTC_OuçutC⁄fig
(
uöt32_t
 
RTC_Ouçut
, uöt32_à
RTC_OuçutPﬁ¨ôy
);

824 
Eº‹Sètus
 
RTC_Cﬂr£CÆibC⁄fig
(
uöt32_t
 
RTC_CÆibSign
, uöt32_à
VÆue
);

825 
Eº‹Sètus
 
RTC_Cﬂr£CÆibCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

826 
RTC_CÆibOuçutCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

827 
RTC_CÆibOuçutC⁄fig
(
uöt32_t
 
RTC_CÆibOuçut
);

828 
Eº‹Sètus
 
RTC_SmoŸhCÆibC⁄fig
(
uöt32_t
 
RTC_SmoŸhCÆibPîiod
,

829 
uöt32_t
 
RTC_SmoŸhCÆibPlusPul£s
,

830 
uöt32_t
 
RTC_SmouthCÆibMöusPul£sVÆue
);

833 
RTC_TimeSèmpCmd
(
uöt32_t
 
RTC_TimeSèmpEdge
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

834 
RTC_GëTimeSèmp
(
uöt32_t
 
RTC_F‹m©
, 
RTC_TimeTy≥Def
* 
RTC_SèmpTimeSåu˘
,

835 
RTC_D©eTy≥Def
* 
RTC_SèmpD©eSåu˘
);

836 
uöt32_t
 
RTC_GëTimeSèmpSubSec⁄d
();

839 
RTC_Tam≥rTriggîC⁄fig
(
uöt32_t
 
RTC_Tam≥r
, uöt32_à
RTC_Tam≥rTriggî
);

840 
RTC_Tam≥rCmd
(
uöt32_t
 
RTC_Tam≥r
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

841 
RTC_Tam≥rFûãrC⁄fig
(
uöt32_t
 
RTC_Tam≥rFûãr
);

842 
RTC_Tam≥rSam∂ögFªqC⁄fig
(
uöt32_t
 
RTC_Tam≥rSam∂ögFªq
);

843 
RTC_Tam≥rPösPªch¨geDuøti⁄
(
uöt32_t
 
RTC_Tam≥rPªch¨geDuøti⁄
);

844 
RTC_TimeSèmpOnTam≥rDëe˘i⁄Cmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

845 
RTC_Tam≥rPuŒUpCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

848 
RTC_WrôeBackupRegi°î
(
uöt32_t
 
RTC_BKP_DR
, uöt32_à
D©a
);

849 
uöt32_t
 
RTC_RódBackupRegi°î
(uöt32_à
RTC_BKP_DR
);

853 
RTC_Tam≥rPöSñe˘i⁄
(
uöt32_t
 
RTC_Tam≥rPö
);

854 
RTC_TimeSèmpPöSñe˘i⁄
(
uöt32_t
 
RTC_TimeSèmpPö
);

855 
RTC_OuçutTy≥C⁄fig
(
uöt32_t
 
RTC_OuçutTy≥
);

858 
Eº‹Sètus
 
RTC_SynchroShi·C⁄fig
(
uöt32_t
 
RTC_Shi·Add1S
, uöt32_à
RTC_Shi·SubFS
);

861 
RTC_ITC⁄fig
(
uöt32_t
 
RTC_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

862 
FœgSètus
 
RTC_GëFœgSètus
(
uöt32_t
 
RTC_FLAG
);

863 
RTC_CÀ¨Fœg
(
uöt32_t
 
RTC_FLAG
);

864 
ITSètus
 
RTC_GëITSètus
(
uöt32_t
 
RTC_IT
);

865 
RTC_CÀ¨ITPídögBô
(
uöt32_t
 
RTC_IT
);

867 #ifde‡
__˝lu•lus


	@stm32f4xx_sai.h

30 #i‚de‡
__STM32F4xx_SAI_H


31 
	#__STM32F4xx_SAI_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

56 
uöt32_t
 
SAI_AudioMode
;

59 
uöt32_t
 
SAI_PrŸocﬁ
;

62 
uöt32_t
 
SAI_D©aSize
;

66 
uöt32_t
 
SAI_Fú°Bô
;

70 
uöt32_t
 
SAI_ClockSåobög
;

73 
uöt32_t
 
SAI_Synchro
;

76 
uöt32_t
 
SAI_OUTDRIV
;

81 
uöt32_t
 
SAI_NoDividî
;

84 
uöt32_t
 
SAI_Ma°îDividî
;

88 
uöt32_t
 
SAI_FIFOThªshﬁd
;

90 }
	tSAI_InôTy≥Def
;

99 
uöt32_t
 
SAI_FømeLígth
;

107 
uöt32_t
 
SAI_A˘iveFømeLígth
;

113 
uöt32_t
 
SAI_FSDeföôi⁄
;

117 
uöt32_t
 
SAI_FSPﬁ¨ôy
;

121 
uöt32_t
 
SAI_FSOff£t
;

125 }
	tSAI_FømeInôTy≥Def
;

133 
uöt32_t
 
SAI_Fú°BôOff£t
;

137 
uöt32_t
 
SAI_SlŸSize
;

141 
uöt32_t
 
SAI_SlŸNumbî
;

145 
uöt32_t
 
SAI_SlŸA˘ive
;

148 }
	tSAI_SlŸInôTy≥Def
;

156 
	#IS_SAI_PERIPH
(
PERIPH
Ë((PERIPHË=
SAI1
)

	)

158 
	#IS_SAI_BLOCK_PERIPH
(
PERIPH
Ë(((PERIPHË=
SAI1_Block_A
Ë|| \

	)

159 ((
PERIPH
Ë=
SAI1_Block_B
))

165 
	#SAI_Mode_Ma°îTx
 ((
uöt32_t
)0x00000000)

	)

166 
	#SAI_Mode_Ma°îRx
 ((
uöt32_t
)0x00000001)

	)

167 
	#SAI_Mode_SœveTx
 ((
uöt32_t
)0x00000002)

	)

168 
	#SAI_Mode_SœveRx
 ((
uöt32_t
)0x00000003)

	)

169 
	#IS_SAI_BLOCK_MODE
(
MODE
Ë(((MODEË=
SAI_Mode_Ma°îTx
Ë|| \

	)

170 ((
MODE
Ë=
SAI_Mode_Ma°îRx
) || \

171 ((
MODE
Ë=
SAI_Mode_SœveTx
) || \

172 ((
MODE
Ë=
SAI_Mode_SœveRx
))

181 
	#SAI_Fªe_PrŸocﬁ
 ((
uöt32_t
)0x00000000)

	)

182 
	#SAI_SPDIF_PrŸocﬁ
 ((
uöt32_t
)
SAI_xCR1_PRTCFG_0
)

	)

183 
	#SAI_AC97_PrŸocﬁ
 ((
uöt32_t
)
SAI_xCR1_PRTCFG_1
)

	)

184 
	#IS_SAI_BLOCK_PROTOCOL
(
PROTOCOL
Ë(((PROTOCOLË=
SAI_Fªe_PrŸocﬁ
Ë|| \

	)

185 ((
PROTOCOL
Ë=
SAI_SPDIF_PrŸocﬁ
) || \

186 ((
PROTOCOL
Ë=
SAI_AC97_PrŸocﬁ
))

195 
	#SAI_D©aSize_8b
 ((
uöt32_t
)0x00000040)

	)

196 
	#SAI_D©aSize_10b
 ((
uöt32_t
)0x00000060)

	)

197 
	#SAI_D©aSize_16b
 ((
uöt32_t
)0x00000080)

	)

198 
	#SAI_D©aSize_20b
 ((
uöt32_t
)0x000000A0)

	)

199 
	#SAI_D©aSize_24b
 ((
uöt32_t
)0x000000C0)

	)

200 
	#SAI_D©aSize_32b
 ((
uöt32_t
)0x000000E0)

	)

201 
	#IS_SAI_BLOCK_DATASIZE
(
DATASIZE
Ë(((DATASIZEË=
SAI_D©aSize_8b
Ë|| \

	)

202 ((
DATASIZE
Ë=
SAI_D©aSize_10b
) || \

203 ((
DATASIZE
Ë=
SAI_D©aSize_16b
) || \

204 ((
DATASIZE
Ë=
SAI_D©aSize_20b
) || \

205 ((
DATASIZE
Ë=
SAI_D©aSize_24b
) || \

206 ((
DATASIZE
Ë=
SAI_D©aSize_32b
))

215 
	#SAI_Fú°Bô_MSB
 ((
uöt32_t
)0x00000000)

	)

216 
	#SAI_Fú°Bô_LSB
 ((
uöt32_t
)
SAI_xCR1_LSBFIRST
)

	)

217 
	#IS_SAI_BLOCK_FIRST_BIT
(
BIT
Ë(((BITË=
SAI_Fú°Bô_MSB
Ë|| \

	)

218 ((
BIT
Ë=
SAI_Fú°Bô_LSB
))

227 
	#SAI_ClockSåobög_FÆlögEdge
 ((
uöt32_t
)0x00000000)

	)

228 
	#SAI_ClockSåobög_RisögEdge
 ((
uöt32_t
)
SAI_xCR1_CKSTR
)

	)

229 
	#IS_SAI_BLOCK_CLOCK_STROBING
(
CLOCK
Ë(((CLOCKË=
SAI_ClockSåobög_FÆlögEdge
Ë|| \

	)

230 ((
CLOCK
Ë=
SAI_ClockSåobög_RisögEdge
))

239 
	#SAI_Asynchr⁄ous
 ((
uöt32_t
)0x00000000)

	)

240 
	#SAI_Synchr⁄ous
 ((
uöt32_t
)
SAI_xCR1_SYNCEN_0
)

	)

241 
	#IS_SAI_BLOCK_SYNCHRO
(
SYNCHRO
Ë(((SYNCHROË=
SAI_Synchr⁄ous
Ë|| \

	)

242 ((
SYNCHRO
Ë=
SAI_Asynchr⁄ous
))

251 
	#SAI_OuçutDrive_DißbÀd
 ((
uöt32_t
)0x00000000)

	)

252 
	#SAI_OuçutDrive_E«bÀd
 ((
uöt32_t
)
SAI_xCR1_OUTDRIV
)

	)

253 
	#IS_SAI_BLOCK_OUTPUT_DRIVE
(
DRIVE
Ë(((DRIVEË=
SAI_OuçutDrive_DißbÀd
Ë|| \

	)

254 ((
DRIVE
Ë=
SAI_OuçutDrive_E«bÀd
))

265 
	#SAI_Ma°îDividî_E«bÀd
 ((
uöt32_t
)0x00000000)

	)

266 
	#SAI_Ma°îDividî_DißbÀd
 ((
uöt32_t
)
SAI_xCR1_NODIV
)

	)

267 
	#IS_SAI_BLOCK_NODIVIDER
(
NODIVIDER
Ë(((NODIVIDERË=
SAI_Ma°îDividî_E«bÀd
Ë|| \

	)

268 ((
NODIVIDER
Ë=
SAI_Ma°îDividî_DißbÀd
))

277 
	#IS_SAI_BLOCK_MASTER_DIVIDER
(
DIVIDER
Ë((DIVIDERË<15)

	)

286 
	#IS_SAI_BLOCK_FRAME_LENGTH
(
LENGTH
Ë((8 <(LENGTH)Ë&& ((LENGTHË<256))

	)

295 
	#IS_SAI_BLOCK_ACTIVE_FRAME
(
LENGTH
Ë((1 <(LENGTH)Ë&& ((LENGTHË<128))

	)

305 
	#SAI_FS_SèπFøme
 ((
uöt32_t
)0x00000000)

	)

306 
	#I2S_FS_Ch™√lIdítifiˇti⁄
 ((
uöt32_t
)
SAI_xFRCR_FSDEF
)

	)

307 
	#IS_SAI_BLOCK_FS_DEFINITION
(
DEFINITION
Ë(((DEFINITIONË=
SAI_FS_SèπFøme
Ë|| \

	)

308 ((
DEFINITION
Ë=
I2S_FS_Ch™√lIdítifiˇti⁄
))

317 
	#SAI_FS_A˘iveLow
 ((
uöt32_t
)0x00000000)

	)

318 
	#SAI_FS_A˘iveHigh
 ((
uöt32_t
)
SAI_xFRCR_FSPO
)

	)

319 
	#IS_SAI_BLOCK_FS_POLARITY
(
POLARITY
Ë(((POLARITYË=
SAI_FS_A˘iveLow
Ë|| \

	)

320 ((
POLARITY
Ë=
SAI_FS_A˘iveHigh
))

329 
	#SAI_FS_Fú°Bô
 ((
uöt32_t
)0x00000000)

	)

330 
	#SAI_FS_Bef‹eFú°Bô
 ((
uöt32_t
)
SAI_xFRCR_FSOFF
)

	)

331 
	#IS_SAI_BLOCK_FS_OFFSET
(
OFFSET
Ë(((OFFSETË=
SAI_FS_Fú°Bô
Ë|| \

	)

332 ((
OFFSET
Ë=
SAI_FS_Bef‹eFú°Bô
))

340 
	#IS_SAI_BLOCK_FIRSTBIT_OFFSET
(
OFFSET
Ë((OFFSETË<24)

	)

349 
	#SAI_SlŸSize_D©aSize
 ((
uöt32_t
)0x00000000)

	)

350 
	#SAI_SlŸSize_16b
 ((
uöt32_t
)
SAI_xSLOTR_SLOTSZ_0
)

	)

351 
	#SAI_SlŸSize_32b
 ((
uöt32_t
)
SAI_xSLOTR_SLOTSZ_1
)

	)

352 
	#IS_SAI_BLOCK_SLOT_SIZE
(
SIZE
Ë(((SIZEË=
SAI_SlŸSize_D©aSize
Ë|| \

	)

353 ((
SIZE
Ë=
SAI_SlŸSize_16b
) || \

354 ((
SIZE
Ë=
SAI_SlŸSize_32b
))

363 
	#IS_SAI_BLOCK_SLOT_NUMBER
(
NUMBER
Ë((1 <(NUMBER)Ë&& ((NUMBERË<16))

	)

372 
	#SAI_SlŸ_NŸA˘ive
 ((
uöt32_t
)0x00000000)

	)

373 
	#SAI_SlŸA˘ive_0
 ((
uöt32_t
)0x00010000)

	)

374 
	#SAI_SlŸA˘ive_1
 ((
uöt32_t
)0x00020000)

	)

375 
	#SAI_SlŸA˘ive_2
 ((
uöt32_t
)0x00040000)

	)

376 
	#SAI_SlŸA˘ive_3
 ((
uöt32_t
)0x00080000)

	)

377 
	#SAI_SlŸA˘ive_4
 ((
uöt32_t
)0x00100000)

	)

378 
	#SAI_SlŸA˘ive_5
 ((
uöt32_t
)0x00200000)

	)

379 
	#SAI_SlŸA˘ive_6
 ((
uöt32_t
)0x00400000)

	)

380 
	#SAI_SlŸA˘ive_7
 ((
uöt32_t
)0x00800000)

	)

381 
	#SAI_SlŸA˘ive_8
 ((
uöt32_t
)0x01000000)

	)

382 
	#SAI_SlŸA˘ive_9
 ((
uöt32_t
)0x02000000)

	)

383 
	#SAI_SlŸA˘ive_10
 ((
uöt32_t
)0x04000000)

	)

384 
	#SAI_SlŸA˘ive_11
 ((
uöt32_t
)0x08000000)

	)

385 
	#SAI_SlŸA˘ive_12
 ((
uöt32_t
)0x10000000)

	)

386 
	#SAI_SlŸA˘ive_13
 ((
uöt32_t
)0x20000000)

	)

387 
	#SAI_SlŸA˘ive_14
 ((
uöt32_t
)0x40000000)

	)

388 
	#SAI_SlŸA˘ive_15
 ((
uöt32_t
)0x80000000)

	)

389 
	#SAI_SlŸA˘ive_ALL
 ((
uöt32_t
)0xFFFF0000)

	)

391 
	#IS_SAI_SLOT_ACTIVE
(
ACTIVE
Ë((ACTIVEË!0)

	)

401 
	#SAI_M⁄oMode
 ((
uöt32_t
)
SAI_xCR1_MONO
)

	)

402 
	#SAI_SåeoMode
 ((
uöt32_t
)0x00000000)

	)

403 
	#IS_SAI_BLOCK_MONO_STREO_MODE
(
MODE
Ë(((MODEË=
SAI_M⁄oMode
Ë||\

	)

404 ((
MODE
Ë=
SAI_SåeoMode
))

413 
	#SAI_Ouçut_NŸRñó£d
 ((
uöt32_t
)0x00000000)

	)

414 
	#SAI_Ouçut_Rñó£d
 ((
uöt32_t
)
SAI_xCR2_TRIS
)

	)

415 
	#IS_SAI_BLOCK_TRISTATE_MANAGEMENT
(
STATE
Ë(((STATEË=
SAI_Ouçut_NŸRñó£d
Ë||\

	)

416 ((
STATE
Ë=
SAI_Ouçut_Rñó£d
))

425 
	#SAI_Thªshﬁd_FIFOEm±y
 ((
uöt32_t
)0x00000000)

	)

426 
	#SAI_FIFOThªshﬁd_1Qu¨ãrFuŒ
 ((
uöt32_t
)0x00000001)

	)

427 
	#SAI_FIFOThªshﬁd_HÆfFuŒ
 ((
uöt32_t
)0x00000002)

	)

428 
	#SAI_FIFOThªshﬁd_3Qu¨ãrsFuŒ
 ((
uöt32_t
)0x00000003)

	)

429 
	#SAI_FIFOThªshﬁd_FuŒ
 ((
uöt32_t
)0x00000004)

	)

430 
	#IS_SAI_BLOCK_FIFO_THRESHOLD
(
THRESHOLD
Ë(((THRESHOLDË=
SAI_Thªshﬁd_FIFOEm±y
Ë|| \

	)

431 ((
THRESHOLD
Ë=
SAI_FIFOThªshﬁd_1Qu¨ãrFuŒ
) || \

432 ((
THRESHOLD
Ë=
SAI_FIFOThªshﬁd_HÆfFuŒ
) || \

433 ((
THRESHOLD
Ë=
SAI_FIFOThªshﬁd_3Qu¨ãrsFuŒ
) || \

434 ((
THRESHOLD
Ë=
SAI_FIFOThªshﬁd_FuŒ
))

443 
	#SAI_NoCom∑ndög
 ((
uöt32_t
)0x00000000)

	)

444 
	#SAI_ULaw_1CPL_Com∑ndög
 ((
uöt32_t
)0x00008000)

	)

445 
	#SAI_ALaw_1CPL_Com∑ndög
 ((
uöt32_t
)0x0000C000)

	)

446 
	#SAI_ULaw_2CPL_Com∑ndög
 ((
uöt32_t
)0x0000A000)

	)

447 
	#SAI_ALaw_2CPL_Com∑ndög
 ((
uöt32_t
)0x0000E000)

	)

448 
	#IS_SAI_BLOCK_COMPANDING_MODE
(
MODE
Ë(((MODEË=
SAI_NoCom∑ndög
Ë|| \

	)

449 ((
MODE
Ë=
SAI_ULaw_1CPL_Com∑ndög
) || \

450 ((
MODE
Ë=
SAI_ALaw_1CPL_Com∑ndög
) || \

451 ((
MODE
Ë=
SAI_ULaw_2CPL_Com∑ndög
) || \

452 ((
MODE
Ë=
SAI_ALaw_2CPL_Com∑ndög
))

461 
	#SAI_ZîoVÆue
 ((
uöt32_t
)0x00000000)

	)

462 
	#SAI_La°SítVÆue
 ((
uöt32_t
)
SAI_xCR2_MUTEVAL
)

	)

463 
	#IS_SAI_BLOCK_MUTE_VALUE
(
VALUE
Ë(((VALUEË=
SAI_ZîoVÆue
Ë|| \

	)

464 ((
VALUE
Ë=
SAI_La°SítVÆue
))

473 
	#IS_SAI_BLOCK_MUTE_COUNTER
(
COUNTER
Ë((COUNTERË<63)

	)

483 
	#SAI_IT_OVRUDR
 ((
uöt32_t
)
SAI_xIMR_OVRUDRIE
)

	)

484 
	#SAI_IT_MUTEDET
 ((
uöt32_t
)
SAI_xIMR_MUTEDETIE
)

	)

485 
	#SAI_IT_WCKCFG
 ((
uöt32_t
)
SAI_xIMR_WCKCFGIE
)

	)

486 
	#SAI_IT_FREQ
 ((
uöt32_t
)
SAI_xIMR_FREQIE
)

	)

487 
	#SAI_IT_CNRDY
 ((
uöt32_t
)
SAI_xIMR_CNRDYIE
)

	)

488 
	#SAI_IT_AFSDET
 ((
uöt32_t
)
SAI_xIMR_AFSDETIE
)

	)

489 
	#SAI_IT_LFSDET
 ((
uöt32_t
)
SAI_xIMR_LFSDETIE
)

	)

491 
	#IS_SAI_BLOCK_CONFIG_IT
(
IT
Ë(((ITË=
SAI_IT_OVRUDR
Ë|| \

	)

492 ((
IT
Ë=
SAI_IT_MUTEDET
) || \

493 ((
IT
Ë=
SAI_IT_WCKCFG
) || \

494 ((
IT
Ë=
SAI_IT_FREQ
) || \

495 ((
IT
Ë=
SAI_IT_CNRDY
) || \

496 ((
IT
Ë=
SAI_IT_AFSDET
) || \

497 ((
IT
Ë=
SAI_IT_LFSDET
))

506 
	#SAI_FLAG_OVRUDR
 ((
uöt32_t
)
SAI_xSR_OVRUDR
)

	)

507 
	#SAI_FLAG_MUTEDET
 ((
uöt32_t
)
SAI_xSR_MUTEDET
)

	)

508 
	#SAI_FLAG_WCKCFG
 ((
uöt32_t
)
SAI_xSR_WCKCFG
)

	)

509 
	#SAI_FLAG_FREQ
 ((
uöt32_t
)
SAI_xSR_FREQ
)

	)

510 
	#SAI_FLAG_CNRDY
 ((
uöt32_t
)
SAI_xSR_CNRDY
)

	)

511 
	#SAI_FLAG_AFSDET
 ((
uöt32_t
)
SAI_xSR_AFSDET
)

	)

512 
	#SAI_FLAG_LFSDET
 ((
uöt32_t
)
SAI_xSR_LFSDET
)

	)

514 
	#IS_SAI_BLOCK_GET_FLAG
(
FLAG
Ë(((FLAGË=
SAI_FLAG_OVRUDR
Ë|| \

	)

515 ((
FLAG
Ë=
SAI_FLAG_MUTEDET
) || \

516 ((
FLAG
Ë=
SAI_FLAG_WCKCFG
) || \

517 ((
FLAG
Ë=
SAI_FLAG_FREQ
) || \

518 ((
FLAG
Ë=
SAI_FLAG_CNRDY
) || \

519 ((
FLAG
Ë=
SAI_FLAG_AFSDET
) || \

520 ((
FLAG
Ë=
SAI_FLAG_LFSDET
))

522 
	#IS_SAI_BLOCK_CLEAR_FLAG
(
FLAG
Ë(((FLAGË=
SAI_FLAG_OVRUDR
Ë|| \

	)

523 ((
FLAG
Ë=
SAI_FLAG_MUTEDET
) || \

524 ((
FLAG
Ë=
SAI_FLAG_WCKCFG
) || \

525 ((
FLAG
Ë=
SAI_FLAG_FREQ
) || \

526 ((
FLAG
Ë=
SAI_FLAG_CNRDY
) || \

527 ((
FLAG
Ë=
SAI_FLAG_AFSDET
) || \

528 ((
FLAG
Ë=
SAI_FLAG_LFSDET
))

536 
	#SAI_FIFOSètus_Em±y
 ((
uöt32_t
)0x00000000)

	)

537 
	#SAI_FIFOSètus_Less1Qu¨ãrFuŒ
 ((
uöt32_t
)0x00010000)

	)

538 
	#SAI_FIFOSètus_1Qu¨ãrFuŒ
 ((
uöt32_t
)0x00020000)

	)

539 
	#SAI_FIFOSètus_HÆfFuŒ
 ((
uöt32_t
)0x00030000)

	)

540 
	#SAI_FIFOSètus_3Qu¨ãrsFuŒ
 ((
uöt32_t
)0x00040000)

	)

541 
	#SAI_FIFOSètus_FuŒ
 ((
uöt32_t
)0x00050000)

	)

543 
	#IS_SAI_BLOCK_FIFO_STATUS
(
STATUS
Ë(((STATUSË=
SAI_FIFOSètus_Less1Qu¨ãrFuŒ
 ) || \

	)

544 ((
STATUS
Ë=
SAI_FIFOSètus_HÆfFuŒ
) || \

545 ((
STATUS
Ë=
SAI_FIFOSètus_1Qu¨ãrFuŒ
) || \

546 ((
STATUS
Ë=
SAI_FIFOSètus_3Qu¨ãrsFuŒ
) || \

547 ((
STATUS
Ë=
SAI_FIFOSètus_FuŒ
) || \

548 ((
STATUS
Ë=
SAI_FIFOSètus_Em±y
))

562 
SAI_DeInô
(
SAI_Ty≥Def
* 
SAIx
);

565 
SAI_Inô
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
SAI_InôTy≥Def
* 
SAI_InôSåu˘
);

566 
SAI_FømeInô
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
SAI_FømeInôTy≥Def
* 
SAI_FømeInôSåu˘
);

567 
SAI_SlŸInô
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
SAI_SlŸInôTy≥Def
* 
SAI_SlŸInôSåu˘
);

568 
SAI_Såu˘Inô
(
SAI_InôTy≥Def
* 
SAI_InôSåu˘
);

569 
SAI_FømeSåu˘Inô
(
SAI_FømeInôTy≥Def
* 
SAI_FømeInôSåu˘
);

570 
SAI_SlŸSåu˘Inô
(
SAI_SlŸInôTy≥Def
* 
SAI_SlŸInôSåu˘
);

572 
SAI_Cmd
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

573 
SAI_M⁄oModeC⁄fig
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
SAI_M⁄o_SåeoMode
);

574 
SAI_TRISèãC⁄fig
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
SAI_TRISèã
);

575 
SAI_Com∑ndögModeC⁄fig
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
SAI_Com∑ndögMode
);

576 
SAI_MuãModeCmd
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

577 
SAI_MuãVÆueC⁄fig
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
SAI_MuãVÆue
);

578 
SAI_MuãFømeCou¡îC⁄fig
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
SAI_MuãCou¡î
);

579 
SAI_FlushFIFO
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
);

582 
SAI_SídD©a
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
D©a
);

583 
uöt32_t
 
SAI_Re˚iveD©a
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
);

586 
SAI_DMACmd
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

589 
SAI_ITC⁄fig
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
SAI_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

590 
FœgSètus
 
SAI_GëFœgSètus
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
SAI_FLAG
);

591 
SAI_CÀ¨Fœg
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
SAI_FLAG
);

592 
ITSètus
 
SAI_GëITSètus
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
SAI_IT
);

593 
SAI_CÀ¨ITPídögBô
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
, 
uöt32_t
 
SAI_IT
);

594 
Fun˘i⁄ÆSèã
 
SAI_GëCmdSètus
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
);

595 
uöt32_t
 
SAI_GëFIFOSètus
(
SAI_Block_Ty≥Def
* 
SAI_Block_x
);

597 #ifde‡
__˝lu•lus


	@stm32f4xx_sdio.h

30 #i‚de‡
__STM32F4xx_SDIO_H


31 
	#__STM32F4xx_SDIO_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

52 
uöt32_t
 
SDIO_ClockEdge
;

55 
uöt32_t
 
SDIO_ClockBy∑ss
;

59 
uöt32_t
 
SDIO_ClockPowîSave
;

63 
uöt32_t
 
SDIO_BusWide
;

66 
uöt32_t
 
SDIO_H¨dw¨eFlowC⁄åﬁ
;

69 
uöt8_t
 
SDIO_ClockDiv
;

72 } 
	tSDIO_InôTy≥Def
;

76 
uöt32_t
 
SDIO_Argumít
;

81 
uöt32_t
 
SDIO_CmdIndex
;

83 
uöt32_t
 
SDIO_Re•⁄£
;

86 
uöt32_t
 
SDIO_Waô
;

89 
uöt32_t
 
SDIO_CPSM
;

92 } 
	tSDIO_CmdInôTy≥Def
;

96 
uöt32_t
 
SDIO_D©aTimeOut
;

98 
uöt32_t
 
SDIO_D©aLígth
;

100 
uöt32_t
 
SDIO_D©aBlockSize
;

103 
uöt32_t
 
SDIO_Tøns„rDú
;

107 
uöt32_t
 
SDIO_Tøns„rMode
;

110 
uöt32_t
 
SDIO_DPSM
;

113 } 
	tSDIO_D©aInôTy≥Def
;

126 
	#SDIO_ClockEdge_Risög
 ((
uöt32_t
)0x00000000)

	)

127 
	#SDIO_ClockEdge_FÆlög
 ((
uöt32_t
)0x00002000)

	)

128 
	#IS_SDIO_CLOCK_EDGE
(
EDGE
Ë(((EDGEË=
SDIO_ClockEdge_Risög
Ë|| \

	)

129 ((
EDGE
Ë=
SDIO_ClockEdge_FÆlög
))

138 
	#SDIO_ClockBy∑ss_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

139 
	#SDIO_ClockBy∑ss_E«bÀ
 ((
uöt32_t
)0x00000400)

	)

140 
	#IS_SDIO_CLOCK_BYPASS
(
BYPASS
Ë(((BYPASSË=
SDIO_ClockBy∑ss_DißbÀ
Ë|| \

	)

141 ((
BYPASS
Ë=
SDIO_ClockBy∑ss_E«bÀ
))

150 
	#SDIO_ClockPowîSave_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

151 
	#SDIO_ClockPowîSave_E«bÀ
 ((
uöt32_t
)0x00000200)

	)

152 
	#IS_SDIO_CLOCK_POWER_SAVE
(
SAVE
Ë(((SAVEË=
SDIO_ClockPowîSave_DißbÀ
Ë|| \

	)

153 ((
SAVE
Ë=
SDIO_ClockPowîSave_E«bÀ
))

162 
	#SDIO_BusWide_1b
 ((
uöt32_t
)0x00000000)

	)

163 
	#SDIO_BusWide_4b
 ((
uöt32_t
)0x00000800)

	)

164 
	#SDIO_BusWide_8b
 ((
uöt32_t
)0x00001000)

	)

165 
	#IS_SDIO_BUS_WIDE
(
WIDE
Ë(((WIDEË=
SDIO_BusWide_1b
Ë|| ((WIDEË=
SDIO_BusWide_4b
Ë|| \

	)

166 ((
WIDE
Ë=
SDIO_BusWide_8b
))

176 
	#SDIO_H¨dw¨eFlowC⁄åﬁ_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

177 
	#SDIO_H¨dw¨eFlowC⁄åﬁ_E«bÀ
 ((
uöt32_t
)0x00004000)

	)

178 
	#IS_SDIO_HARDWARE_FLOW_CONTROL
(
CONTROL
Ë(((CONTROLË=
SDIO_H¨dw¨eFlowC⁄åﬁ_DißbÀ
Ë|| \

	)

179 ((
CONTROL
Ë=
SDIO_H¨dw¨eFlowC⁄åﬁ_E«bÀ
))

188 
	#SDIO_PowîSèã_OFF
 ((
uöt32_t
)0x00000000)

	)

189 
	#SDIO_PowîSèã_ON
 ((
uöt32_t
)0x00000003)

	)

190 
	#IS_SDIO_POWER_STATE
(
STATE
Ë(((STATEË=
SDIO_PowîSèã_OFF
Ë|| ((STATEË=
SDIO_PowîSèã_ON
))

	)

200 
	#SDIO_IT_CCRCFAIL
 ((
uöt32_t
)0x00000001)

	)

201 
	#SDIO_IT_DCRCFAIL
 ((
uöt32_t
)0x00000002)

	)

202 
	#SDIO_IT_CTIMEOUT
 ((
uöt32_t
)0x00000004)

	)

203 
	#SDIO_IT_DTIMEOUT
 ((
uöt32_t
)0x00000008)

	)

204 
	#SDIO_IT_TXUNDERR
 ((
uöt32_t
)0x00000010)

	)

205 
	#SDIO_IT_RXOVERR
 ((
uöt32_t
)0x00000020)

	)

206 
	#SDIO_IT_CMDREND
 ((
uöt32_t
)0x00000040)

	)

207 
	#SDIO_IT_CMDSENT
 ((
uöt32_t
)0x00000080)

	)

208 
	#SDIO_IT_DATAEND
 ((
uöt32_t
)0x00000100)

	)

209 
	#SDIO_IT_STBITERR
 ((
uöt32_t
)0x00000200)

	)

210 
	#SDIO_IT_DBCKEND
 ((
uöt32_t
)0x00000400)

	)

211 
	#SDIO_IT_CMDACT
 ((
uöt32_t
)0x00000800)

	)

212 
	#SDIO_IT_TXACT
 ((
uöt32_t
)0x00001000)

	)

213 
	#SDIO_IT_RXACT
 ((
uöt32_t
)0x00002000)

	)

214 
	#SDIO_IT_TXFIFOHE
 ((
uöt32_t
)0x00004000)

	)

215 
	#SDIO_IT_RXFIFOHF
 ((
uöt32_t
)0x00008000)

	)

216 
	#SDIO_IT_TXFIFOF
 ((
uöt32_t
)0x00010000)

	)

217 
	#SDIO_IT_RXFIFOF
 ((
uöt32_t
)0x00020000)

	)

218 
	#SDIO_IT_TXFIFOE
 ((
uöt32_t
)0x00040000)

	)

219 
	#SDIO_IT_RXFIFOE
 ((
uöt32_t
)0x00080000)

	)

220 
	#SDIO_IT_TXDAVL
 ((
uöt32_t
)0x00100000)

	)

221 
	#SDIO_IT_RXDAVL
 ((
uöt32_t
)0x00200000)

	)

222 
	#SDIO_IT_SDIOIT
 ((
uöt32_t
)0x00400000)

	)

223 
	#SDIO_IT_CEATAEND
 ((
uöt32_t
)0x00800000)

	)

224 
	#IS_SDIO_IT
(
IT
Ë((((ITË& (
uöt32_t
)0xFF000000Ë=0x00Ë&& ((ITË!(uöt32_t)0x00))

	)

233 
	#IS_SDIO_CMD_INDEX
(
INDEX
Ë((INDEXË< 0x40)

	)

242 
	#SDIO_Re•⁄£_No
 ((
uöt32_t
)0x00000000)

	)

243 
	#SDIO_Re•⁄£_Sh‹t
 ((
uöt32_t
)0x00000040)

	)

244 
	#SDIO_Re•⁄£_L⁄g
 ((
uöt32_t
)0x000000C0)

	)

245 
	#IS_SDIO_RESPONSE
(
RESPONSE
Ë(((RESPONSEË=
SDIO_Re•⁄£_No
Ë|| \

	)

246 ((
RESPONSE
Ë=
SDIO_Re•⁄£_Sh‹t
) || \

247 ((
RESPONSE
Ë=
SDIO_Re•⁄£_L⁄g
))

256 
	#SDIO_Waô_No
 ((
uöt32_t
)0x00000000Ë

	)

257 
	#SDIO_Waô_IT
 ((
uöt32_t
)0x00000100Ë

	)

258 
	#SDIO_Waô_Píd
 ((
uöt32_t
)0x00000200Ë

	)

259 
	#IS_SDIO_WAIT
(
WAIT
Ë(((WAITË=
SDIO_Waô_No
Ë|| ((WAITË=
SDIO_Waô_IT
Ë|| \

	)

260 ((
WAIT
Ë=
SDIO_Waô_Píd
))

269 
	#SDIO_CPSM_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

270 
	#SDIO_CPSM_E«bÀ
 ((
uöt32_t
)0x00000400)

	)

271 
	#IS_SDIO_CPSM
(
CPSM
Ë(((CPSMË=
SDIO_CPSM_E«bÀ
Ë|| ((CPSMË=
SDIO_CPSM_DißbÀ
))

	)

280 
	#SDIO_RESP1
 ((
uöt32_t
)0x00000000)

	)

281 
	#SDIO_RESP2
 ((
uöt32_t
)0x00000004)

	)

282 
	#SDIO_RESP3
 ((
uöt32_t
)0x00000008)

	)

283 
	#SDIO_RESP4
 ((
uöt32_t
)0x0000000C)

	)

284 
	#IS_SDIO_RESP
(
RESP
Ë(((RESPË=
SDIO_RESP1
Ë|| ((RESPË=
SDIO_RESP2
Ë|| \

	)

285 ((
RESP
Ë=
SDIO_RESP3
Ë|| ((RESPË=
SDIO_RESP4
))

294 
	#IS_SDIO_DATA_LENGTH
(
LENGTH
Ë((LENGTHË<0x01FFFFFF)

	)

303 
	#SDIO_D©aBlockSize_1b
 ((
uöt32_t
)0x00000000)

	)

304 
	#SDIO_D©aBlockSize_2b
 ((
uöt32_t
)0x00000010)

	)

305 
	#SDIO_D©aBlockSize_4b
 ((
uöt32_t
)0x00000020)

	)

306 
	#SDIO_D©aBlockSize_8b
 ((
uöt32_t
)0x00000030)

	)

307 
	#SDIO_D©aBlockSize_16b
 ((
uöt32_t
)0x00000040)

	)

308 
	#SDIO_D©aBlockSize_32b
 ((
uöt32_t
)0x00000050)

	)

309 
	#SDIO_D©aBlockSize_64b
 ((
uöt32_t
)0x00000060)

	)

310 
	#SDIO_D©aBlockSize_128b
 ((
uöt32_t
)0x00000070)

	)

311 
	#SDIO_D©aBlockSize_256b
 ((
uöt32_t
)0x00000080)

	)

312 
	#SDIO_D©aBlockSize_512b
 ((
uöt32_t
)0x00000090)

	)

313 
	#SDIO_D©aBlockSize_1024b
 ((
uöt32_t
)0x000000A0)

	)

314 
	#SDIO_D©aBlockSize_2048b
 ((
uöt32_t
)0x000000B0)

	)

315 
	#SDIO_D©aBlockSize_4096b
 ((
uöt32_t
)0x000000C0)

	)

316 
	#SDIO_D©aBlockSize_8192b
 ((
uöt32_t
)0x000000D0)

	)

317 
	#SDIO_D©aBlockSize_16384b
 ((
uöt32_t
)0x000000E0)

	)

318 
	#IS_SDIO_BLOCK_SIZE
(
SIZE
Ë(((SIZEË=
SDIO_D©aBlockSize_1b
Ë|| \

	)

319 ((
SIZE
Ë=
SDIO_D©aBlockSize_2b
) || \

320 ((
SIZE
Ë=
SDIO_D©aBlockSize_4b
) || \

321 ((
SIZE
Ë=
SDIO_D©aBlockSize_8b
) || \

322 ((
SIZE
Ë=
SDIO_D©aBlockSize_16b
) || \

323 ((
SIZE
Ë=
SDIO_D©aBlockSize_32b
) || \

324 ((
SIZE
Ë=
SDIO_D©aBlockSize_64b
) || \

325 ((
SIZE
Ë=
SDIO_D©aBlockSize_128b
) || \

326 ((
SIZE
Ë=
SDIO_D©aBlockSize_256b
) || \

327 ((
SIZE
Ë=
SDIO_D©aBlockSize_512b
) || \

328 ((
SIZE
Ë=
SDIO_D©aBlockSize_1024b
) || \

329 ((
SIZE
Ë=
SDIO_D©aBlockSize_2048b
) || \

330 ((
SIZE
Ë=
SDIO_D©aBlockSize_4096b
) || \

331 ((
SIZE
Ë=
SDIO_D©aBlockSize_8192b
) || \

332 ((
SIZE
Ë=
SDIO_D©aBlockSize_16384b
))

341 
	#SDIO_Tøns„rDú_ToC¨d
 ((
uöt32_t
)0x00000000)

	)

342 
	#SDIO_Tøns„rDú_ToSDIO
 ((
uöt32_t
)0x00000002)

	)

343 
	#IS_SDIO_TRANSFER_DIR
(
DIR
Ë(((DIRË=
SDIO_Tøns„rDú_ToC¨d
Ë|| \

	)

344 ((
DIR
Ë=
SDIO_Tøns„rDú_ToSDIO
))

353 
	#SDIO_Tøns„rMode_Block
 ((
uöt32_t
)0x00000000)

	)

354 
	#SDIO_Tøns„rMode_Såóm
 ((
uöt32_t
)0x00000004)

	)

355 
	#IS_SDIO_TRANSFER_MODE
(
MODE
Ë(((MODEË=
SDIO_Tøns„rMode_Såóm
Ë|| \

	)

356 ((
MODE
Ë=
SDIO_Tøns„rMode_Block
))

365 
	#SDIO_DPSM_DißbÀ
 ((
uöt32_t
)0x00000000)

	)

366 
	#SDIO_DPSM_E«bÀ
 ((
uöt32_t
)0x00000001)

	)

367 
	#IS_SDIO_DPSM
(
DPSM
Ë(((DPSMË=
SDIO_DPSM_E«bÀ
Ë|| ((DPSMË=
SDIO_DPSM_DißbÀ
))

	)

376 
	#SDIO_FLAG_CCRCFAIL
 ((
uöt32_t
)0x00000001)

	)

377 
	#SDIO_FLAG_DCRCFAIL
 ((
uöt32_t
)0x00000002)

	)

378 
	#SDIO_FLAG_CTIMEOUT
 ((
uöt32_t
)0x00000004)

	)

379 
	#SDIO_FLAG_DTIMEOUT
 ((
uöt32_t
)0x00000008)

	)

380 
	#SDIO_FLAG_TXUNDERR
 ((
uöt32_t
)0x00000010)

	)

381 
	#SDIO_FLAG_RXOVERR
 ((
uöt32_t
)0x00000020)

	)

382 
	#SDIO_FLAG_CMDREND
 ((
uöt32_t
)0x00000040)

	)

383 
	#SDIO_FLAG_CMDSENT
 ((
uöt32_t
)0x00000080)

	)

384 
	#SDIO_FLAG_DATAEND
 ((
uöt32_t
)0x00000100)

	)

385 
	#SDIO_FLAG_STBITERR
 ((
uöt32_t
)0x00000200)

	)

386 
	#SDIO_FLAG_DBCKEND
 ((
uöt32_t
)0x00000400)

	)

387 
	#SDIO_FLAG_CMDACT
 ((
uöt32_t
)0x00000800)

	)

388 
	#SDIO_FLAG_TXACT
 ((
uöt32_t
)0x00001000)

	)

389 
	#SDIO_FLAG_RXACT
 ((
uöt32_t
)0x00002000)

	)

390 
	#SDIO_FLAG_TXFIFOHE
 ((
uöt32_t
)0x00004000)

	)

391 
	#SDIO_FLAG_RXFIFOHF
 ((
uöt32_t
)0x00008000)

	)

392 
	#SDIO_FLAG_TXFIFOF
 ((
uöt32_t
)0x00010000)

	)

393 
	#SDIO_FLAG_RXFIFOF
 ((
uöt32_t
)0x00020000)

	)

394 
	#SDIO_FLAG_TXFIFOE
 ((
uöt32_t
)0x00040000)

	)

395 
	#SDIO_FLAG_RXFIFOE
 ((
uöt32_t
)0x00080000)

	)

396 
	#SDIO_FLAG_TXDAVL
 ((
uöt32_t
)0x00100000)

	)

397 
	#SDIO_FLAG_RXDAVL
 ((
uöt32_t
)0x00200000)

	)

398 
	#SDIO_FLAG_SDIOIT
 ((
uöt32_t
)0x00400000)

	)

399 
	#SDIO_FLAG_CEATAEND
 ((
uöt32_t
)0x00800000)

	)

400 
	#IS_SDIO_FLAG
(
FLAG
Ë(((FLAGË=
SDIO_FLAG_CCRCFAIL
Ë|| \

	)

401 ((
FLAG
Ë=
SDIO_FLAG_DCRCFAIL
) || \

402 ((
FLAG
Ë=
SDIO_FLAG_CTIMEOUT
) || \

403 ((
FLAG
Ë=
SDIO_FLAG_DTIMEOUT
) || \

404 ((
FLAG
Ë=
SDIO_FLAG_TXUNDERR
) || \

405 ((
FLAG
Ë=
SDIO_FLAG_RXOVERR
) || \

406 ((
FLAG
Ë=
SDIO_FLAG_CMDREND
) || \

407 ((
FLAG
Ë=
SDIO_FLAG_CMDSENT
) || \

408 ((
FLAG
Ë=
SDIO_FLAG_DATAEND
) || \

409 ((
FLAG
Ë=
SDIO_FLAG_STBITERR
) || \

410 ((
FLAG
Ë=
SDIO_FLAG_DBCKEND
) || \

411 ((
FLAG
Ë=
SDIO_FLAG_CMDACT
) || \

412 ((
FLAG
Ë=
SDIO_FLAG_TXACT
) || \

413 ((
FLAG
Ë=
SDIO_FLAG_RXACT
) || \

414 ((
FLAG
Ë=
SDIO_FLAG_TXFIFOHE
) || \

415 ((
FLAG
Ë=
SDIO_FLAG_RXFIFOHF
) || \

416 ((
FLAG
Ë=
SDIO_FLAG_TXFIFOF
) || \

417 ((
FLAG
Ë=
SDIO_FLAG_RXFIFOF
) || \

418 ((
FLAG
Ë=
SDIO_FLAG_TXFIFOE
) || \

419 ((
FLAG
Ë=
SDIO_FLAG_RXFIFOE
) || \

420 ((
FLAG
Ë=
SDIO_FLAG_TXDAVL
) || \

421 ((
FLAG
Ë=
SDIO_FLAG_RXDAVL
) || \

422 ((
FLAG
Ë=
SDIO_FLAG_SDIOIT
) || \

423 ((
FLAG
Ë=
SDIO_FLAG_CEATAEND
))

425 
	#IS_SDIO_CLEAR_FLAG
(
FLAG
Ë((((FLAGË& (
uöt32_t
)0xFF3FF800Ë=0x00Ë&& ((FLAGË!(uöt32_t)0x00))

	)

427 
	#IS_SDIO_GET_IT
(
IT
Ë(((ITË=
SDIO_IT_CCRCFAIL
Ë|| \

	)

428 ((
IT
Ë=
SDIO_IT_DCRCFAIL
) || \

429 ((
IT
Ë=
SDIO_IT_CTIMEOUT
) || \

430 ((
IT
Ë=
SDIO_IT_DTIMEOUT
) || \

431 ((
IT
Ë=
SDIO_IT_TXUNDERR
) || \

432 ((
IT
Ë=
SDIO_IT_RXOVERR
) || \

433 ((
IT
Ë=
SDIO_IT_CMDREND
) || \

434 ((
IT
Ë=
SDIO_IT_CMDSENT
) || \

435 ((
IT
Ë=
SDIO_IT_DATAEND
) || \

436 ((
IT
Ë=
SDIO_IT_STBITERR
) || \

437 ((
IT
Ë=
SDIO_IT_DBCKEND
) || \

438 ((
IT
Ë=
SDIO_IT_CMDACT
) || \

439 ((
IT
Ë=
SDIO_IT_TXACT
) || \

440 ((
IT
Ë=
SDIO_IT_RXACT
) || \

441 ((
IT
Ë=
SDIO_IT_TXFIFOHE
) || \

442 ((
IT
Ë=
SDIO_IT_RXFIFOHF
) || \

443 ((
IT
Ë=
SDIO_IT_TXFIFOF
) || \

444 ((
IT
Ë=
SDIO_IT_RXFIFOF
) || \

445 ((
IT
Ë=
SDIO_IT_TXFIFOE
) || \

446 ((
IT
Ë=
SDIO_IT_RXFIFOE
) || \

447 ((
IT
Ë=
SDIO_IT_TXDAVL
) || \

448 ((
IT
Ë=
SDIO_IT_RXDAVL
) || \

449 ((
IT
Ë=
SDIO_IT_SDIOIT
) || \

450 ((
IT
Ë=
SDIO_IT_CEATAEND
))

452 
	#IS_SDIO_CLEAR_IT
(
IT
Ë((((ITË& (
uöt32_t
)0xFF3FF800Ë=0x00Ë&& ((ITË!(uöt32_t)0x00))

	)

462 
	#SDIO_RódWaôMode_DATA2
 ((
uöt32_t
)0x00000000)

	)

463 
	#SDIO_RódWaôMode_CLK
 ((
uöt32_t
)0x00000001)

	)

464 
	#IS_SDIO_READWAIT_MODE
(
MODE
Ë(((MODEË=
SDIO_RódWaôMode_CLK
Ë|| \

	)

465 ((
MODE
Ë=
SDIO_RódWaôMode_DATA2
))

477 
SDIO_DeInô
();

480 
SDIO_Inô
(
SDIO_InôTy≥Def
* 
SDIO_InôSåu˘
);

481 
SDIO_Såu˘Inô
(
SDIO_InôTy≥Def
* 
SDIO_InôSåu˘
);

482 
SDIO_ClockCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

483 
SDIO_SëPowîSèã
(
uöt32_t
 
SDIO_PowîSèã
);

484 
uöt32_t
 
SDIO_GëPowîSèã
();

487 
SDIO_SídComm™d
(
SDIO_CmdInôTy≥Def
 *
SDIO_CmdInôSåu˘
);

488 
SDIO_CmdSåu˘Inô
(
SDIO_CmdInôTy≥Def
* 
SDIO_CmdInôSåu˘
);

489 
uöt8_t
 
SDIO_GëComm™dRe•⁄£
();

490 
uöt32_t
 
SDIO_GëRe•⁄£
(uöt32_à
SDIO_RESP
);

493 
SDIO_D©aC⁄fig
(
SDIO_D©aInôTy≥Def
* 
SDIO_D©aInôSåu˘
);

494 
SDIO_D©aSåu˘Inô
(
SDIO_D©aInôTy≥Def
* 
SDIO_D©aInôSåu˘
);

495 
uöt32_t
 
SDIO_GëD©aCou¡î
();

496 
uöt32_t
 
SDIO_RódD©a
();

497 
SDIO_WrôeD©a
(
uöt32_t
 
D©a
);

498 
uöt32_t
 
SDIO_GëFIFOCou¡
();

501 
SDIO_SèπSDIORódWaô
(
Fun˘i⁄ÆSèã
 
NewSèã
);

502 
SDIO_St›SDIORódWaô
(
Fun˘i⁄ÆSèã
 
NewSèã
);

503 
SDIO_SëSDIORódWaôMode
(
uöt32_t
 
SDIO_RódWaôMode
);

504 
SDIO_SëSDIOO≥øti⁄
(
Fun˘i⁄ÆSèã
 
NewSèã
);

505 
SDIO_SídSDIOSu•ídCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

508 
SDIO_Comm™dCom∂ëi⁄Cmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

509 
SDIO_CEATAITCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

510 
SDIO_SídCEATACmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

513 
SDIO_DMACmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

516 
SDIO_ITC⁄fig
(
uöt32_t
 
SDIO_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

517 
FœgSètus
 
SDIO_GëFœgSètus
(
uöt32_t
 
SDIO_FLAG
);

518 
SDIO_CÀ¨Fœg
(
uöt32_t
 
SDIO_FLAG
);

519 
ITSètus
 
SDIO_GëITSètus
(
uöt32_t
 
SDIO_IT
);

520 
SDIO_CÀ¨ITPídögBô
(
uöt32_t
 
SDIO_IT
);

522 #ifde‡
__˝lu•lus


	@stm32f4xx_spi.h

30 #i‚de‡
__STM32F4xx_SPI_H


31 
	#__STM32F4xx_SPI_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

56 
uöt16_t
 
SPI_Dúe˘i⁄
;

59 
uöt16_t
 
SPI_Mode
;

62 
uöt16_t
 
SPI_D©aSize
;

65 
uöt16_t
 
SPI_CPOL
;

68 
uöt16_t
 
SPI_CPHA
;

71 
uöt16_t
 
SPI_NSS
;

75 
uöt16_t
 
SPI_BaudR©ePªsˇÀr
;

81 
uöt16_t
 
SPI_Fú°Bô
;

84 
uöt16_t
 
SPI_CRCPﬁynomül
;

85 }
	tSPI_InôTy≥Def
;

94 
uöt16_t
 
I2S_Mode
;

97 
uöt16_t
 
I2S_Sènd¨d
;

100 
uöt16_t
 
I2S_D©aF‹m©
;

103 
uöt16_t
 
I2S_MCLKOuçut
;

106 
uöt32_t
 
I2S_AudioFªq
;

109 
uöt16_t
 
I2S_CPOL
;

111 }
	tI2S_InôTy≥Def
;

119 
	#IS_SPI_ALL_PERIPH
(
PERIPH
Ë(((PERIPHË=
SPI1
Ë|| \

	)

120 ((
PERIPH
Ë=
SPI2
) || \

121 ((
PERIPH
Ë=
SPI3
) || \

122 ((
PERIPH
Ë=
SPI4
) || \

123 ((
PERIPH
Ë=
SPI5
) || \

124 ((
PERIPH
Ë=
SPI6
))

126 
	#IS_SPI_ALL_PERIPH_EXT
(
PERIPH
Ë(((PERIPHË=
SPI1
Ë|| \

	)

127 ((
PERIPH
Ë=
SPI2
) || \

128 ((
PERIPH
Ë=
SPI3
) || \

129 ((
PERIPH
Ë=
SPI4
) || \

130 ((
PERIPH
Ë=
SPI5
) || \

131 ((
PERIPH
Ë=
SPI6
) || \

132 ((
PERIPH
Ë=
I2S2ext
) || \

133 ((
PERIPH
Ë=
I2S3ext
))

135 
	#IS_SPI_23_PERIPH
(
PERIPH
Ë(((PERIPHË=
SPI2
Ë|| \

	)

136 ((
PERIPH
Ë=
SPI3
))

138 
	#IS_SPI_23_PERIPH_EXT
(
PERIPH
Ë(((PERIPHË=
SPI2
Ë|| \

	)

139 ((
PERIPH
Ë=
SPI3
) || \

140 ((
PERIPH
Ë=
I2S2ext
) || \

141 ((
PERIPH
Ë=
I2S3ext
))

143 
	#IS_I2S_EXT_PERIPH
(
PERIPH
Ë(((PERIPHË=
I2S2ext
Ë|| \

	)

144 ((
PERIPH
Ë=
I2S3ext
))

151 
	#SPI_Dúe˘i⁄_2Löes_FuŒDu∂ex
 ((
uöt16_t
)0x0000)

	)

152 
	#SPI_Dúe˘i⁄_2Löes_RxO∆y
 ((
uöt16_t
)0x0400)

	)

153 
	#SPI_Dúe˘i⁄_1Löe_Rx
 ((
uöt16_t
)0x8000)

	)

154 
	#SPI_Dúe˘i⁄_1Löe_Tx
 ((
uöt16_t
)0xC000)

	)

155 
	#IS_SPI_DIRECTION_MODE
(
MODE
Ë(((MODEË=
SPI_Dúe˘i⁄_2Löes_FuŒDu∂ex
Ë|| \

	)

156 ((
MODE
Ë=
SPI_Dúe˘i⁄_2Löes_RxO∆y
) || \

157 ((
MODE
Ë=
SPI_Dúe˘i⁄_1Löe_Rx
) || \

158 ((
MODE
Ë=
SPI_Dúe˘i⁄_1Löe_Tx
))

167 
	#SPI_Mode_Ma°î
 ((
uöt16_t
)0x0104)

	)

168 
	#SPI_Mode_Sœve
 ((
uöt16_t
)0x0000)

	)

169 
	#IS_SPI_MODE
(
MODE
Ë(((MODEË=
SPI_Mode_Ma°î
Ë|| \

	)

170 ((
MODE
Ë=
SPI_Mode_Sœve
))

179 
	#SPI_D©aSize_16b
 ((
uöt16_t
)0x0800)

	)

180 
	#SPI_D©aSize_8b
 ((
uöt16_t
)0x0000)

	)

181 
	#IS_SPI_DATASIZE
(
DATASIZE
Ë(((DATASIZEË=
SPI_D©aSize_16b
Ë|| \

	)

182 ((
DATASIZE
Ë=
SPI_D©aSize_8b
))

191 
	#SPI_CPOL_Low
 ((
uöt16_t
)0x0000)

	)

192 
	#SPI_CPOL_High
 ((
uöt16_t
)0x0002)

	)

193 
	#IS_SPI_CPOL
(
CPOL
Ë(((CPOLË=
SPI_CPOL_Low
Ë|| \

	)

194 ((
CPOL
Ë=
SPI_CPOL_High
))

203 
	#SPI_CPHA_1Edge
 ((
uöt16_t
)0x0000)

	)

204 
	#SPI_CPHA_2Edge
 ((
uöt16_t
)0x0001)

	)

205 
	#IS_SPI_CPHA
(
CPHA
Ë(((CPHAË=
SPI_CPHA_1Edge
Ë|| \

	)

206 ((
CPHA
Ë=
SPI_CPHA_2Edge
))

215 
	#SPI_NSS_So·
 ((
uöt16_t
)0x0200)

	)

216 
	#SPI_NSS_H¨d
 ((
uöt16_t
)0x0000)

	)

217 
	#IS_SPI_NSS
(
NSS
Ë(((NSSË=
SPI_NSS_So·
Ë|| \

	)

218 ((
NSS
Ë=
SPI_NSS_H¨d
))

227 
	#SPI_BaudR©ePªsˇÀr_2
 ((
uöt16_t
)0x0000)

	)

228 
	#SPI_BaudR©ePªsˇÀr_4
 ((
uöt16_t
)0x0008)

	)

229 
	#SPI_BaudR©ePªsˇÀr_8
 ((
uöt16_t
)0x0010)

	)

230 
	#SPI_BaudR©ePªsˇÀr_16
 ((
uöt16_t
)0x0018)

	)

231 
	#SPI_BaudR©ePªsˇÀr_32
 ((
uöt16_t
)0x0020)

	)

232 
	#SPI_BaudR©ePªsˇÀr_64
 ((
uöt16_t
)0x0028)

	)

233 
	#SPI_BaudR©ePªsˇÀr_128
 ((
uöt16_t
)0x0030)

	)

234 
	#SPI_BaudR©ePªsˇÀr_256
 ((
uöt16_t
)0x0038)

	)

235 
	#IS_SPI_BAUDRATE_PRESCALER
(
PRESCALER
Ë(((PRESCALERË=
SPI_BaudR©ePªsˇÀr_2
Ë|| \

	)

236 ((
PRESCALER
Ë=
SPI_BaudR©ePªsˇÀr_4
) || \

237 ((
PRESCALER
Ë=
SPI_BaudR©ePªsˇÀr_8
) || \

238 ((
PRESCALER
Ë=
SPI_BaudR©ePªsˇÀr_16
) || \

239 ((
PRESCALER
Ë=
SPI_BaudR©ePªsˇÀr_32
) || \

240 ((
PRESCALER
Ë=
SPI_BaudR©ePªsˇÀr_64
) || \

241 ((
PRESCALER
Ë=
SPI_BaudR©ePªsˇÀr_128
) || \

242 ((
PRESCALER
Ë=
SPI_BaudR©ePªsˇÀr_256
))

251 
	#SPI_Fú°Bô_MSB
 ((
uöt16_t
)0x0000)

	)

252 
	#SPI_Fú°Bô_LSB
 ((
uöt16_t
)0x0080)

	)

253 
	#IS_SPI_FIRST_BIT
(
BIT
Ë(((BITË=
SPI_Fú°Bô_MSB
Ë|| \

	)

254 ((
BIT
Ë=
SPI_Fú°Bô_LSB
))

263 
	#I2S_Mode_SœveTx
 ((
uöt16_t
)0x0000)

	)

264 
	#I2S_Mode_SœveRx
 ((
uöt16_t
)0x0100)

	)

265 
	#I2S_Mode_Ma°îTx
 ((
uöt16_t
)0x0200)

	)

266 
	#I2S_Mode_Ma°îRx
 ((
uöt16_t
)0x0300)

	)

267 
	#IS_I2S_MODE
(
MODE
Ë(((MODEË=
I2S_Mode_SœveTx
Ë|| \

	)

268 ((
MODE
Ë=
I2S_Mode_SœveRx
) || \

269 ((
MODE
Ë=
I2S_Mode_Ma°îTx
)|| \

270 ((
MODE
Ë=
I2S_Mode_Ma°îRx
))

280 
	#I2S_Sènd¨d_Phûlùs
 ((
uöt16_t
)0x0000)

	)

281 
	#I2S_Sènd¨d_MSB
 ((
uöt16_t
)0x0010)

	)

282 
	#I2S_Sènd¨d_LSB
 ((
uöt16_t
)0x0020)

	)

283 
	#I2S_Sènd¨d_PCMSh‹t
 ((
uöt16_t
)0x0030)

	)

284 
	#I2S_Sènd¨d_PCML⁄g
 ((
uöt16_t
)0x00B0)

	)

285 
	#IS_I2S_STANDARD
(
STANDARD
Ë(((STANDARDË=
I2S_Sènd¨d_Phûlùs
Ë|| \

	)

286 ((
STANDARD
Ë=
I2S_Sènd¨d_MSB
) || \

287 ((
STANDARD
Ë=
I2S_Sènd¨d_LSB
) || \

288 ((
STANDARD
Ë=
I2S_Sènd¨d_PCMSh‹t
) || \

289 ((
STANDARD
Ë=
I2S_Sènd¨d_PCML⁄g
))

298 
	#I2S_D©aF‹m©_16b
 ((
uöt16_t
)0x0000)

	)

299 
	#I2S_D©aF‹m©_16bexãnded
 ((
uöt16_t
)0x0001)

	)

300 
	#I2S_D©aF‹m©_24b
 ((
uöt16_t
)0x0003)

	)

301 
	#I2S_D©aF‹m©_32b
 ((
uöt16_t
)0x0005)

	)

302 
	#IS_I2S_DATA_FORMAT
(
FORMAT
Ë(((FORMATË=
I2S_D©aF‹m©_16b
Ë|| \

	)

303 ((
FORMAT
Ë=
I2S_D©aF‹m©_16bexãnded
) || \

304 ((
FORMAT
Ë=
I2S_D©aF‹m©_24b
) || \

305 ((
FORMAT
Ë=
I2S_D©aF‹m©_32b
))

314 
	#I2S_MCLKOuçut_E«bÀ
 ((
uöt16_t
)0x0200)

	)

315 
	#I2S_MCLKOuçut_DißbÀ
 ((
uöt16_t
)0x0000)

	)

316 
	#IS_I2S_MCLK_OUTPUT
(
OUTPUT
Ë(((OUTPUTË=
I2S_MCLKOuçut_E«bÀ
Ë|| \

	)

317 ((
OUTPUT
Ë=
I2S_MCLKOuçut_DißbÀ
))

326 
	#I2S_AudioFªq_192k
 ((
uöt32_t
)192000)

	)

327 
	#I2S_AudioFªq_96k
 ((
uöt32_t
)96000)

	)

328 
	#I2S_AudioFªq_48k
 ((
uöt32_t
)48000)

	)

329 
	#I2S_AudioFªq_44k
 ((
uöt32_t
)44100)

	)

330 
	#I2S_AudioFªq_32k
 ((
uöt32_t
)32000)

	)

331 
	#I2S_AudioFªq_22k
 ((
uöt32_t
)22050)

	)

332 
	#I2S_AudioFªq_16k
 ((
uöt32_t
)16000)

	)

333 
	#I2S_AudioFªq_11k
 ((
uöt32_t
)11025)

	)

334 
	#I2S_AudioFªq_8k
 ((
uöt32_t
)8000)

	)

335 
	#I2S_AudioFªq_DeÁu…
 ((
uöt32_t
)2)

	)

337 
	#IS_I2S_AUDIO_FREQ
(
FREQ
Ë((((FREQË>
I2S_AudioFªq_8k
Ë&& \

	)

338 ((
FREQ
Ë<
I2S_AudioFªq_192k
)) || \

339 ((
FREQ
Ë=
I2S_AudioFªq_DeÁu…
))

348 
	#I2S_CPOL_Low
 ((
uöt16_t
)0x0000)

	)

349 
	#I2S_CPOL_High
 ((
uöt16_t
)0x0008)

	)

350 
	#IS_I2S_CPOL
(
CPOL
Ë(((CPOLË=
I2S_CPOL_Low
Ë|| \

	)

351 ((
CPOL
Ë=
I2S_CPOL_High
))

360 
	#SPI_I2S_DMAReq_Tx
 ((
uöt16_t
)0x0002)

	)

361 
	#SPI_I2S_DMAReq_Rx
 ((
uöt16_t
)0x0001)

	)

362 
	#IS_SPI_I2S_DMAREQ
(
DMAREQ
Ë((((DMAREQË& (
uöt16_t
)0xFFFCË=0x00Ë&& ((DMAREQË!0x00))

	)

371 
	#SPI_NSSI¡î«lSo·_Së
 ((
uöt16_t
)0x0100)

	)

372 
	#SPI_NSSI¡î«lSo·_Re£t
 ((
uöt16_t
)0xFEFF)

	)

373 
	#IS_SPI_NSS_INTERNAL
(
INTERNAL
Ë(((INTERNALË=
SPI_NSSI¡î«lSo·_Së
Ë|| \

	)

374 ((
INTERNAL
Ë=
SPI_NSSI¡î«lSo·_Re£t
))

383 
	#SPI_CRC_Tx
 ((
uöt8_t
)0x00)

	)

384 
	#SPI_CRC_Rx
 ((
uöt8_t
)0x01)

	)

385 
	#IS_SPI_CRC
(
CRC
Ë(((CRCË=
SPI_CRC_Tx
Ë|| ((CRCË=
SPI_CRC_Rx
))

	)

394 
	#SPI_Dúe˘i⁄_Rx
 ((
uöt16_t
)0xBFFF)

	)

395 
	#SPI_Dúe˘i⁄_Tx
 ((
uöt16_t
)0x4000)

	)

396 
	#IS_SPI_DIRECTION
(
DIRECTION
Ë(((DIRECTIONË=
SPI_Dúe˘i⁄_Rx
Ë|| \

	)

397 ((
DIRECTION
Ë=
SPI_Dúe˘i⁄_Tx
))

406 
	#SPI_I2S_IT_TXE
 ((
uöt8_t
)0x71)

	)

407 
	#SPI_I2S_IT_RXNE
 ((
uöt8_t
)0x60)

	)

408 
	#SPI_I2S_IT_ERR
 ((
uöt8_t
)0x50)

	)

409 
	#I2S_IT_UDR
 ((
uöt8_t
)0x53)

	)

410 
	#SPI_I2S_IT_TIFRFE
 ((
uöt8_t
)0x58)

	)

412 
	#IS_SPI_I2S_CONFIG_IT
(
IT
Ë(((ITË=
SPI_I2S_IT_TXE
Ë|| \

	)

413 ((
IT
Ë=
SPI_I2S_IT_RXNE
) || \

414 ((
IT
Ë=
SPI_I2S_IT_ERR
))

416 
	#SPI_I2S_IT_OVR
 ((
uöt8_t
)0x56)

	)

417 
	#SPI_IT_MODF
 ((
uöt8_t
)0x55)

	)

418 
	#SPI_IT_CRCERR
 ((
uöt8_t
)0x54)

	)

420 
	#IS_SPI_I2S_CLEAR_IT
(
IT
Ë(((ITË=
SPI_IT_CRCERR
))

	)

422 
	#IS_SPI_I2S_GET_IT
(
IT
Ë(((ITË=
SPI_I2S_IT_RXNE
)|| ((ITË=
SPI_I2S_IT_TXE
Ë|| \

	)

423 ((
IT
Ë=
SPI_IT_CRCERR
Ë|| ((ITË=
SPI_IT_MODF
) || \

424 ((
IT
Ë=
SPI_I2S_IT_OVR
Ë|| ((ITË=
I2S_IT_UDR
) ||\

425 ((
IT
Ë=
SPI_I2S_IT_TIFRFE
))

434 
	#SPI_I2S_FLAG_RXNE
 ((
uöt16_t
)0x0001)

	)

435 
	#SPI_I2S_FLAG_TXE
 ((
uöt16_t
)0x0002)

	)

436 
	#I2S_FLAG_CHSIDE
 ((
uöt16_t
)0x0004)

	)

437 
	#I2S_FLAG_UDR
 ((
uöt16_t
)0x0008)

	)

438 
	#SPI_FLAG_CRCERR
 ((
uöt16_t
)0x0010)

	)

439 
	#SPI_FLAG_MODF
 ((
uöt16_t
)0x0020)

	)

440 
	#SPI_I2S_FLAG_OVR
 ((
uöt16_t
)0x0040)

	)

441 
	#SPI_I2S_FLAG_BSY
 ((
uöt16_t
)0x0080)

	)

442 
	#SPI_I2S_FLAG_TIFRFE
 ((
uöt16_t
)0x0100)

	)

444 
	#IS_SPI_I2S_CLEAR_FLAG
(
FLAG
Ë(((FLAGË=
SPI_FLAG_CRCERR
))

	)

445 
	#IS_SPI_I2S_GET_FLAG
(
FLAG
Ë(((FLAGË=
SPI_I2S_FLAG_BSY
Ë|| ((FLAGË=
SPI_I2S_FLAG_OVR
Ë|| \

	)

446 ((
FLAG
Ë=
SPI_FLAG_MODF
Ë|| ((FLAGË=
SPI_FLAG_CRCERR
) || \

447 ((
FLAG
Ë=
I2S_FLAG_UDR
Ë|| ((FLAGË=
I2S_FLAG_CHSIDE
) || \

448 ((
FLAG
Ë=
SPI_I2S_FLAG_TXE
Ë|| ((FLAGË=
SPI_I2S_FLAG_RXNE
)|| \

449 ((
FLAG
Ë=
SPI_I2S_FLAG_TIFRFE
))

458 
	#IS_SPI_CRC_POLYNOMIAL
(
POLYNOMIAL
Ë((POLYNOMIALË>0x1)

	)

467 
	#SPI_DMAReq_Tx
 
SPI_I2S_DMAReq_Tx


	)

468 
	#SPI_DMAReq_Rx
 
SPI_I2S_DMAReq_Rx


	)

469 
	#SPI_IT_TXE
 
SPI_I2S_IT_TXE


	)

470 
	#SPI_IT_RXNE
 
SPI_I2S_IT_RXNE


	)

471 
	#SPI_IT_ERR
 
SPI_I2S_IT_ERR


	)

472 
	#SPI_IT_OVR
 
SPI_I2S_IT_OVR


	)

473 
	#SPI_FLAG_RXNE
 
SPI_I2S_FLAG_RXNE


	)

474 
	#SPI_FLAG_TXE
 
SPI_I2S_FLAG_TXE


	)

475 
	#SPI_FLAG_OVR
 
SPI_I2S_FLAG_OVR


	)

476 
	#SPI_FLAG_BSY
 
SPI_I2S_FLAG_BSY


	)

477 
	#SPI_DeInô
 
SPI_I2S_DeInô


	)

478 
	#SPI_ITC⁄fig
 
SPI_I2S_ITC⁄fig


	)

479 
	#SPI_DMACmd
 
SPI_I2S_DMACmd


	)

480 
	#SPI_SídD©a
 
SPI_I2S_SídD©a


	)

481 
	#SPI_Re˚iveD©a
 
SPI_I2S_Re˚iveD©a


	)

482 
	#SPI_GëFœgSètus
 
SPI_I2S_GëFœgSètus


	)

483 
	#SPI_CÀ¨Fœg
 
SPI_I2S_CÀ¨Fœg


	)

484 
	#SPI_GëITSètus
 
SPI_I2S_GëITSètus


	)

485 
	#SPI_CÀ¨ITPídögBô
 
SPI_I2S_CÀ¨ITPídögBô


	)

498 
SPI_I2S_DeInô
(
SPI_Ty≥Def
* 
SPIx
);

501 
SPI_Inô
(
SPI_Ty≥Def
* 
SPIx
, 
SPI_InôTy≥Def
* 
SPI_InôSåu˘
);

502 
I2S_Inô
(
SPI_Ty≥Def
* 
SPIx
, 
I2S_InôTy≥Def
* 
I2S_InôSåu˘
);

503 
SPI_Såu˘Inô
(
SPI_InôTy≥Def
* 
SPI_InôSåu˘
);

504 
I2S_Såu˘Inô
(
I2S_InôTy≥Def
* 
I2S_InôSåu˘
);

505 
SPI_Cmd
(
SPI_Ty≥Def
* 
SPIx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

506 
I2S_Cmd
(
SPI_Ty≥Def
* 
SPIx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

507 
SPI_D©aSizeC⁄fig
(
SPI_Ty≥Def
* 
SPIx
, 
uöt16_t
 
SPI_D©aSize
);

508 
SPI_BiDúe˘i⁄ÆLöeC⁄fig
(
SPI_Ty≥Def
* 
SPIx
, 
uöt16_t
 
SPI_Dúe˘i⁄
);

509 
SPI_NSSI¡î«lSo·w¨eC⁄fig
(
SPI_Ty≥Def
* 
SPIx
, 
uöt16_t
 
SPI_NSSI¡î«lSo·
);

510 
SPI_SSOuçutCmd
(
SPI_Ty≥Def
* 
SPIx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

511 
SPI_TIModeCmd
(
SPI_Ty≥Def
* 
SPIx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

513 
I2S_FuŒDu∂exC⁄fig
(
SPI_Ty≥Def
* 
I2Sxext
, 
I2S_InôTy≥Def
* 
I2S_InôSåu˘
);

516 
SPI_I2S_SídD©a
(
SPI_Ty≥Def
* 
SPIx
, 
uöt16_t
 
D©a
);

517 
uöt16_t
 
SPI_I2S_Re˚iveD©a
(
SPI_Ty≥Def
* 
SPIx
);

520 
SPI_CÆcuœãCRC
(
SPI_Ty≥Def
* 
SPIx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

521 
SPI_TønsmôCRC
(
SPI_Ty≥Def
* 
SPIx
);

522 
uöt16_t
 
SPI_GëCRC
(
SPI_Ty≥Def
* 
SPIx
, 
uöt8_t
 
SPI_CRC
);

523 
uöt16_t
 
SPI_GëCRCPﬁynomül
(
SPI_Ty≥Def
* 
SPIx
);

526 
SPI_I2S_DMACmd
(
SPI_Ty≥Def
* 
SPIx
, 
uöt16_t
 
SPI_I2S_DMAReq
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

529 
SPI_I2S_ITC⁄fig
(
SPI_Ty≥Def
* 
SPIx
, 
uöt8_t
 
SPI_I2S_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

530 
FœgSètus
 
SPI_I2S_GëFœgSètus
(
SPI_Ty≥Def
* 
SPIx
, 
uöt16_t
 
SPI_I2S_FLAG
);

531 
SPI_I2S_CÀ¨Fœg
(
SPI_Ty≥Def
* 
SPIx
, 
uöt16_t
 
SPI_I2S_FLAG
);

532 
ITSètus
 
SPI_I2S_GëITSètus
(
SPI_Ty≥Def
* 
SPIx
, 
uöt8_t
 
SPI_I2S_IT
);

533 
SPI_I2S_CÀ¨ITPídögBô
(
SPI_Ty≥Def
* 
SPIx
, 
uöt8_t
 
SPI_I2S_IT
);

535 #ifde‡
__˝lu•lus


	@stm32f4xx_syscfg.h

30 #i‚de‡
__STM32F4xx_SYSCFG_H


31 
	#__STM32F4xx_SYSCFG_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

58 
	#EXTI_P‹tSour˚GPIOA
 ((
uöt8_t
)0x00)

	)

59 
	#EXTI_P‹tSour˚GPIOB
 ((
uöt8_t
)0x01)

	)

60 
	#EXTI_P‹tSour˚GPIOC
 ((
uöt8_t
)0x02)

	)

61 
	#EXTI_P‹tSour˚GPIOD
 ((
uöt8_t
)0x03)

	)

62 
	#EXTI_P‹tSour˚GPIOE
 ((
uöt8_t
)0x04)

	)

63 
	#EXTI_P‹tSour˚GPIOF
 ((
uöt8_t
)0x05)

	)

64 
	#EXTI_P‹tSour˚GPIOG
 ((
uöt8_t
)0x06)

	)

65 
	#EXTI_P‹tSour˚GPIOH
 ((
uöt8_t
)0x07)

	)

66 
	#EXTI_P‹tSour˚GPIOI
 ((
uöt8_t
)0x08)

	)

67 
	#EXTI_P‹tSour˚GPIOJ
 ((
uöt8_t
)0x09)

	)

68 
	#EXTI_P‹tSour˚GPIOK
 ((
uöt8_t
)0x0A)

	)

70 
	#IS_EXTI_PORT_SOURCE
(
PORTSOURCE
Ë(((PORTSOURCEË=
EXTI_P‹tSour˚GPIOA
Ë|| \

	)

71 ((
PORTSOURCE
Ë=
EXTI_P‹tSour˚GPIOB
) || \

72 ((
PORTSOURCE
Ë=
EXTI_P‹tSour˚GPIOC
) || \

73 ((
PORTSOURCE
Ë=
EXTI_P‹tSour˚GPIOD
) || \

74 ((
PORTSOURCE
Ë=
EXTI_P‹tSour˚GPIOE
) || \

75 ((
PORTSOURCE
Ë=
EXTI_P‹tSour˚GPIOF
) || \

76 ((
PORTSOURCE
Ë=
EXTI_P‹tSour˚GPIOG
) || \

77 ((
PORTSOURCE
Ë=
EXTI_P‹tSour˚GPIOH
) || \

78 ((
PORTSOURCE
Ë=
EXTI_P‹tSour˚GPIOI
) || \

79 ((
PORTSOURCE
Ë=
EXTI_P‹tSour˚GPIOJ
) || \

80 ((
PORTSOURCE
Ë=
EXTI_P‹tSour˚GPIOK
))

90 
	#EXTI_PöSour˚0
 ((
uöt8_t
)0x00)

	)

91 
	#EXTI_PöSour˚1
 ((
uöt8_t
)0x01)

	)

92 
	#EXTI_PöSour˚2
 ((
uöt8_t
)0x02)

	)

93 
	#EXTI_PöSour˚3
 ((
uöt8_t
)0x03)

	)

94 
	#EXTI_PöSour˚4
 ((
uöt8_t
)0x04)

	)

95 
	#EXTI_PöSour˚5
 ((
uöt8_t
)0x05)

	)

96 
	#EXTI_PöSour˚6
 ((
uöt8_t
)0x06)

	)

97 
	#EXTI_PöSour˚7
 ((
uöt8_t
)0x07)

	)

98 
	#EXTI_PöSour˚8
 ((
uöt8_t
)0x08)

	)

99 
	#EXTI_PöSour˚9
 ((
uöt8_t
)0x09)

	)

100 
	#EXTI_PöSour˚10
 ((
uöt8_t
)0x0A)

	)

101 
	#EXTI_PöSour˚11
 ((
uöt8_t
)0x0B)

	)

102 
	#EXTI_PöSour˚12
 ((
uöt8_t
)0x0C)

	)

103 
	#EXTI_PöSour˚13
 ((
uöt8_t
)0x0D)

	)

104 
	#EXTI_PöSour˚14
 ((
uöt8_t
)0x0E)

	)

105 
	#EXTI_PöSour˚15
 ((
uöt8_t
)0x0F)

	)

106 
	#IS_EXTI_PIN_SOURCE
(
PINSOURCE
Ë(((PINSOURCEË=
EXTI_PöSour˚0
Ë|| \

	)

107 ((
PINSOURCE
Ë=
EXTI_PöSour˚1
) || \

108 ((
PINSOURCE
Ë=
EXTI_PöSour˚2
) || \

109 ((
PINSOURCE
Ë=
EXTI_PöSour˚3
) || \

110 ((
PINSOURCE
Ë=
EXTI_PöSour˚4
) || \

111 ((
PINSOURCE
Ë=
EXTI_PöSour˚5
) || \

112 ((
PINSOURCE
Ë=
EXTI_PöSour˚6
) || \

113 ((
PINSOURCE
Ë=
EXTI_PöSour˚7
) || \

114 ((
PINSOURCE
Ë=
EXTI_PöSour˚8
) || \

115 ((
PINSOURCE
Ë=
EXTI_PöSour˚9
) || \

116 ((
PINSOURCE
Ë=
EXTI_PöSour˚10
) || \

117 ((
PINSOURCE
Ë=
EXTI_PöSour˚11
) || \

118 ((
PINSOURCE
Ë=
EXTI_PöSour˚12
) || \

119 ((
PINSOURCE
Ë=
EXTI_PöSour˚13
) || \

120 ((
PINSOURCE
Ë=
EXTI_PöSour˚14
) || \

121 ((
PINSOURCE
Ë=
EXTI_PöSour˚15
))

130 
	#SYSCFG_Mem‹yRem≠_Fœsh
 ((
uöt8_t
)0x00)

	)

131 
	#SYSCFG_Mem‹yRem≠_Sy°emFœsh
 ((
uöt8_t
)0x01)

	)

132 
	#SYSCFG_Mem‹yRem≠_SRAM
 ((
uöt8_t
)0x03)

	)

133 
	#SYSCFG_Mem‹yRem≠_SDRAM
 ((
uöt8_t
)0x04)

	)

135 #i‡
deföed
 (
STM32F40_41xxx
)

136 
	#SYSCFG_Mem‹yRem≠_FSMC
 ((
uöt8_t
)0x02)

	)

139 #i‡
deföed
 (
STM32F427_437xx
Ë|| deföed (
STM32F429_439xx
)

140 
	#SYSCFG_Mem‹yRem≠_FMC
 ((
uöt8_t
)0x02)

	)

143 #i‡
deföed
 (
STM32F40_41xxx
)

144 
	#IS_SYSCFG_MEMORY_REMAP_CONFING
(
REMAP
Ë(((REMAPË=
SYSCFG_Mem‹yRem≠_Fœsh
Ë|| \

	)

145 ((
REMAP
Ë=
SYSCFG_Mem‹yRem≠_Sy°emFœsh
) || \

146 ((
REMAP
Ë=
SYSCFG_Mem‹yRem≠_SRAM
) || \

147 ((
REMAP
Ë=
SYSCFG_Mem‹yRem≠_FSMC
))

150 #i‡
deföed
 (
STM32F401xx
Ë|| deföed (
STM32F411xE
)

151 
	#IS_SYSCFG_MEMORY_REMAP_CONFING
(
REMAP
Ë(((REMAPË=
SYSCFG_Mem‹yRem≠_Fœsh
Ë|| \

	)

152 ((
REMAP
Ë=
SYSCFG_Mem‹yRem≠_Sy°emFœsh
) || \

153 ((
REMAP
Ë=
SYSCFG_Mem‹yRem≠_SRAM
))

156 #i‡
deföed
 (
STM32F427_437xx
Ë|| deföed (
STM32F429_439xx
)

157 
	#IS_SYSCFG_MEMORY_REMAP_CONFING
(
REMAP
Ë(((REMAPË=
SYSCFG_Mem‹yRem≠_Fœsh
Ë|| \

	)

158 ((
REMAP
Ë=
SYSCFG_Mem‹yRem≠_Sy°emFœsh
) || \

159 ((
REMAP
Ë=
SYSCFG_Mem‹yRem≠_SRAM
) || \

160 ((
REMAP
Ë=
SYSCFG_Mem‹yRem≠_SDRAM
) || \

161 ((
REMAP
Ë=
SYSCFG_Mem‹yRem≠_FMC
))

172 
	#SYSCFG_ETH_MedüI¡îÁ˚_MII
 ((
uöt32_t
)0x00000000)

	)

173 
	#SYSCFG_ETH_MedüI¡îÁ˚_RMII
 ((
uöt32_t
)0x00000001)

	)

175 
	#IS_SYSCFG_ETH_MEDIA_INTERFACE
(
INTERFACE
Ë(((INTERFACEË=
SYSCFG_ETH_MedüI¡îÁ˚_MII
Ë|| \

	)

176 ((
INTERFACE
Ë=
SYSCFG_ETH_MedüI¡îÁ˚_RMII
))

188 
SYSCFG_DeInô
();

189 
SYSCFG_Mem‹yRem≠C⁄fig
(
uöt8_t
 
SYSCFG_Mem‹yRem≠
);

190 
SYSCFG_Mem‹ySw≠pögB™k
(
Fun˘i⁄ÆSèã
 
NewSèã
);

191 
SYSCFG_EXTILöeC⁄fig
(
uöt8_t
 
EXTI_P‹tSour˚GPIOx
, uöt8_à
EXTI_PöSour˚x
);

192 
SYSCFG_ETH_MedüI¡îÁ˚C⁄fig
(
uöt32_t
 
SYSCFG_ETH_MedüI¡îÁ˚
);

193 
SYSCFG_Com≥nßti⁄CñlCmd
(
Fun˘i⁄ÆSèã
 
NewSèã
);

194 
FœgSètus
 
SYSCFG_GëCom≥nßti⁄CñlSètus
();

196 #ifde‡
__˝lu•lus


	@stm32f4xx_tim.h

30 #i‚de‡
__STM32F4xx_TIM_H


31 
	#__STM32F4xx_TIM_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

57 
uöt16_t
 
TIM_PªsˇÀr
;

60 
uöt16_t
 
TIM_Cou¡îMode
;

63 
uöt32_t
 
TIM_Pîiod
;

67 
uöt16_t
 
TIM_ClockDivisi⁄
;

70 
uöt8_t
 
TIM_Rïëôi⁄Cou¡î
;

78 } 
	tTIM_TimeBa£InôTy≥Def
;

86 
uöt16_t
 
TIM_OCMode
;

89 
uöt16_t
 
TIM_OuçutSèã
;

92 
uöt16_t
 
TIM_OuçutNSèã
;

96 
uöt32_t
 
TIM_Pul£
;

99 
uöt16_t
 
TIM_OCPﬁ¨ôy
;

102 
uöt16_t
 
TIM_OCNPﬁ¨ôy
;

106 
uöt16_t
 
TIM_OCIdÀSèã
;

110 
uöt16_t
 
TIM_OCNIdÀSèã
;

113 } 
	tTIM_OCInôTy≥Def
;

122 
uöt16_t
 
TIM_Ch™√l
;

125 
uöt16_t
 
TIM_ICPﬁ¨ôy
;

128 
uöt16_t
 
TIM_ICSñe˘i⁄
;

131 
uöt16_t
 
TIM_ICPªsˇÀr
;

134 
uöt16_t
 
TIM_ICFûãr
;

136 } 
	tTIM_ICInôTy≥Def
;

146 
uöt16_t
 
TIM_OSSRSèã
;

149 
uöt16_t
 
TIM_OSSISèã
;

152 
uöt16_t
 
TIM_LOCKLevñ
;

155 
uöt16_t
 
TIM_DódTime
;

159 
uöt16_t
 
TIM_Bªak
;

162 
uöt16_t
 
TIM_BªakPﬁ¨ôy
;

165 
uöt16_t
 
TIM_Autom©icOuçut
;

167 } 
	tTIM_BDTRInôTy≥Def
;

175 
	#IS_TIM_ALL_PERIPH
(
PERIPH
Ë(((PERIPHË=
TIM1
Ë|| \

	)

176 ((
PERIPH
Ë=
TIM2
) || \

177 ((
PERIPH
Ë=
TIM3
) || \

178 ((
PERIPH
Ë=
TIM4
) || \

179 ((
PERIPH
Ë=
TIM5
) || \

180 ((
PERIPH
Ë=
TIM6
) || \

181 ((
PERIPH
Ë=
TIM7
) || \

182 ((
PERIPH
Ë=
TIM8
) || \

183 ((
PERIPH
Ë=
TIM9
) || \

184 ((
PERIPH
Ë=
TIM10
) || \

185 ((
PERIPH
Ë=
TIM11
) || \

186 ((
PERIPH
Ë=
TIM12
) || \

187 (((
PERIPH
Ë=
TIM13
) || \

188 ((
PERIPH
Ë=
TIM14
)))

190 
	#IS_TIM_LIST1_PERIPH
(
PERIPH
Ë(((PERIPHË=
TIM1
Ë|| \

	)

191 ((
PERIPH
Ë=
TIM2
) || \

192 ((
PERIPH
Ë=
TIM3
) || \

193 ((
PERIPH
Ë=
TIM4
) || \

194 ((
PERIPH
Ë=
TIM5
) || \

195 ((
PERIPH
Ë=
TIM8
) || \

196 ((
PERIPH
Ë=
TIM9
) || \

197 ((
PERIPH
Ë=
TIM10
) || \

198 ((
PERIPH
Ë=
TIM11
) || \

199 ((
PERIPH
Ë=
TIM12
) || \

200 ((
PERIPH
Ë=
TIM13
) || \

201 ((
PERIPH
Ë=
TIM14
))

204 
	#IS_TIM_LIST2_PERIPH
(
PERIPH
Ë(((PERIPHË=
TIM1
Ë|| \

	)

205 ((
PERIPH
Ë=
TIM2
) || \

206 ((
PERIPH
Ë=
TIM3
) || \

207 ((
PERIPH
Ë=
TIM4
) || \

208 ((
PERIPH
Ë=
TIM5
) || \

209 ((
PERIPH
Ë=
TIM8
) || \

210 ((
PERIPH
Ë=
TIM9
) || \

211 ((
PERIPH
Ë=
TIM12
))

213 
	#IS_TIM_LIST3_PERIPH
(
PERIPH
Ë(((PERIPHË=
TIM1
Ë|| \

	)

214 ((
PERIPH
Ë=
TIM2
) || \

215 ((
PERIPH
Ë=
TIM3
) || \

216 ((
PERIPH
Ë=
TIM4
) || \

217 ((
PERIPH
Ë=
TIM5
) || \

218 ((
PERIPH
Ë=
TIM8
))

220 
	#IS_TIM_LIST4_PERIPH
(
PERIPH
Ë(((PERIPHË=
TIM1
Ë|| \

	)

221 ((
PERIPH
Ë=
TIM8
))

223 
	#IS_TIM_LIST5_PERIPH
(
PERIPH
Ë(((PERIPHË=
TIM1
Ë|| \

	)

224 ((
PERIPH
Ë=
TIM2
) || \

225 ((
PERIPH
Ë=
TIM3
) || \

226 ((
PERIPH
Ë=
TIM4
) || \

227 ((
PERIPH
Ë=
TIM5
) || \

228 ((
PERIPH
Ë=
TIM6
) || \

229 ((
PERIPH
Ë=
TIM7
) || \

230 ((
PERIPH
Ë=
TIM8
))

232 
	#IS_TIM_LIST6_PERIPH
(
TIMx
)(((TIMxË=
TIM2
Ë|| \

	)

233 ((
TIMx
Ë=
TIM5
) || \

234 ((
TIMx
Ë=
TIM11
))

240 
	#TIM_OCMode_Timög
 ((
uöt16_t
)0x0000)

	)

241 
	#TIM_OCMode_A˘ive
 ((
uöt16_t
)0x0010)

	)

242 
	#TIM_OCMode_I«˘ive
 ((
uöt16_t
)0x0020)

	)

243 
	#TIM_OCMode_ToggÀ
 ((
uöt16_t
)0x0030)

	)

244 
	#TIM_OCMode_PWM1
 ((
uöt16_t
)0x0060)

	)

245 
	#TIM_OCMode_PWM2
 ((
uöt16_t
)0x0070)

	)

246 
	#IS_TIM_OC_MODE
(
MODE
Ë(((MODEË=
TIM_OCMode_Timög
Ë|| \

	)

247 ((
MODE
Ë=
TIM_OCMode_A˘ive
) || \

248 ((
MODE
Ë=
TIM_OCMode_I«˘ive
) || \

249 ((
MODE
Ë=
TIM_OCMode_ToggÀ
)|| \

250 ((
MODE
Ë=
TIM_OCMode_PWM1
) || \

251 ((
MODE
Ë=
TIM_OCMode_PWM2
))

252 
	#IS_TIM_OCM
(
MODE
Ë(((MODEË=
TIM_OCMode_Timög
Ë|| \

	)

253 ((
MODE
Ë=
TIM_OCMode_A˘ive
) || \

254 ((
MODE
Ë=
TIM_OCMode_I«˘ive
) || \

255 ((
MODE
Ë=
TIM_OCMode_ToggÀ
)|| \

256 ((
MODE
Ë=
TIM_OCMode_PWM1
) || \

257 ((
MODE
Ë=
TIM_OCMode_PWM2
) || \

258 ((
MODE
Ë=
TIM_F‹˚dA˘i⁄_A˘ive
) || \

259 ((
MODE
Ë=
TIM_F‹˚dA˘i⁄_InA˘ive
))

268 
	#TIM_OPMode_SögÀ
 ((
uöt16_t
)0x0008)

	)

269 
	#TIM_OPMode_Rïëôive
 ((
uöt16_t
)0x0000)

	)

270 
	#IS_TIM_OPM_MODE
(
MODE
Ë(((MODEË=
TIM_OPMode_SögÀ
Ë|| \

	)

271 ((
MODE
Ë=
TIM_OPMode_Rïëôive
))

280 
	#TIM_Ch™√l_1
 ((
uöt16_t
)0x0000)

	)

281 
	#TIM_Ch™√l_2
 ((
uöt16_t
)0x0004)

	)

282 
	#TIM_Ch™√l_3
 ((
uöt16_t
)0x0008)

	)

283 
	#TIM_Ch™√l_4
 ((
uöt16_t
)0x000C)

	)

285 
	#IS_TIM_CHANNEL
(
CHANNEL
Ë(((CHANNELË=
TIM_Ch™√l_1
Ë|| \

	)

286 ((
CHANNEL
Ë=
TIM_Ch™√l_2
) || \

287 ((
CHANNEL
Ë=
TIM_Ch™√l_3
) || \

288 ((
CHANNEL
Ë=
TIM_Ch™√l_4
))

290 
	#IS_TIM_PWMI_CHANNEL
(
CHANNEL
Ë(((CHANNELË=
TIM_Ch™√l_1
Ë|| \

	)

291 ((
CHANNEL
Ë=
TIM_Ch™√l_2
))

292 
	#IS_TIM_COMPLEMENTARY_CHANNEL
(
CHANNEL
Ë(((CHANNELË=
TIM_Ch™√l_1
Ë|| \

	)

293 ((
CHANNEL
Ë=
TIM_Ch™√l_2
) || \

294 ((
CHANNEL
Ë=
TIM_Ch™√l_3
))

303 
	#TIM_CKD_DIV1
 ((
uöt16_t
)0x0000)

	)

304 
	#TIM_CKD_DIV2
 ((
uöt16_t
)0x0100)

	)

305 
	#TIM_CKD_DIV4
 ((
uöt16_t
)0x0200)

	)

306 
	#IS_TIM_CKD_DIV
(
DIV
Ë(((DIVË=
TIM_CKD_DIV1
Ë|| \

	)

307 ((
DIV
Ë=
TIM_CKD_DIV2
) || \

308 ((
DIV
Ë=
TIM_CKD_DIV4
))

317 
	#TIM_Cou¡îMode_Up
 ((
uöt16_t
)0x0000)

	)

318 
	#TIM_Cou¡îMode_Down
 ((
uöt16_t
)0x0010)

	)

319 
	#TIM_Cou¡îMode_CíãrAlig√d1
 ((
uöt16_t
)0x0020)

	)

320 
	#TIM_Cou¡îMode_CíãrAlig√d2
 ((
uöt16_t
)0x0040)

	)

321 
	#TIM_Cou¡îMode_CíãrAlig√d3
 ((
uöt16_t
)0x0060)

	)

322 
	#IS_TIM_COUNTER_MODE
(
MODE
Ë(((MODEË=
TIM_Cou¡îMode_Up
Ë|| \

	)

323 ((
MODE
Ë=
TIM_Cou¡îMode_Down
) || \

324 ((
MODE
Ë=
TIM_Cou¡îMode_CíãrAlig√d1
) || \

325 ((
MODE
Ë=
TIM_Cou¡îMode_CíãrAlig√d2
) || \

326 ((
MODE
Ë=
TIM_Cou¡îMode_CíãrAlig√d3
))

335 
	#TIM_OCPﬁ¨ôy_High
 ((
uöt16_t
)0x0000)

	)

336 
	#TIM_OCPﬁ¨ôy_Low
 ((
uöt16_t
)0x0002)

	)

337 
	#IS_TIM_OC_POLARITY
(
POLARITY
Ë(((POLARITYË=
TIM_OCPﬁ¨ôy_High
Ë|| \

	)

338 ((
POLARITY
Ë=
TIM_OCPﬁ¨ôy_Low
))

347 
	#TIM_OCNPﬁ¨ôy_High
 ((
uöt16_t
)0x0000)

	)

348 
	#TIM_OCNPﬁ¨ôy_Low
 ((
uöt16_t
)0x0008)

	)

349 
	#IS_TIM_OCN_POLARITY
(
POLARITY
Ë(((POLARITYË=
TIM_OCNPﬁ¨ôy_High
Ë|| \

	)

350 ((
POLARITY
Ë=
TIM_OCNPﬁ¨ôy_Low
))

359 
	#TIM_OuçutSèã_DißbÀ
 ((
uöt16_t
)0x0000)

	)

360 
	#TIM_OuçutSèã_E«bÀ
 ((
uöt16_t
)0x0001)

	)

361 
	#IS_TIM_OUTPUT_STATE
(
STATE
Ë(((STATEË=
TIM_OuçutSèã_DißbÀ
Ë|| \

	)

362 ((
STATE
Ë=
TIM_OuçutSèã_E«bÀ
))

371 
	#TIM_OuçutNSèã_DißbÀ
 ((
uöt16_t
)0x0000)

	)

372 
	#TIM_OuçutNSèã_E«bÀ
 ((
uöt16_t
)0x0004)

	)

373 
	#IS_TIM_OUTPUTN_STATE
(
STATE
Ë(((STATEË=
TIM_OuçutNSèã_DißbÀ
Ë|| \

	)

374 ((
STATE
Ë=
TIM_OuçutNSèã_E«bÀ
))

383 
	#TIM_CCx_E«bÀ
 ((
uöt16_t
)0x0001)

	)

384 
	#TIM_CCx_DißbÀ
 ((
uöt16_t
)0x0000)

	)

385 
	#IS_TIM_CCX
(
CCX
Ë(((CCXË=
TIM_CCx_E«bÀ
Ë|| \

	)

386 ((
CCX
Ë=
TIM_CCx_DißbÀ
))

395 
	#TIM_CCxN_E«bÀ
 ((
uöt16_t
)0x0004)

	)

396 
	#TIM_CCxN_DißbÀ
 ((
uöt16_t
)0x0000)

	)

397 
	#IS_TIM_CCXN
(
CCXN
Ë(((CCXNË=
TIM_CCxN_E«bÀ
Ë|| \

	)

398 ((
CCXN
Ë=
TIM_CCxN_DißbÀ
))

407 
	#TIM_Bªak_E«bÀ
 ((
uöt16_t
)0x1000)

	)

408 
	#TIM_Bªak_DißbÀ
 ((
uöt16_t
)0x0000)

	)

409 
	#IS_TIM_BREAK_STATE
(
STATE
Ë(((STATEË=
TIM_Bªak_E«bÀ
Ë|| \

	)

410 ((
STATE
Ë=
TIM_Bªak_DißbÀ
))

419 
	#TIM_BªakPﬁ¨ôy_Low
 ((
uöt16_t
)0x0000)

	)

420 
	#TIM_BªakPﬁ¨ôy_High
 ((
uöt16_t
)0x2000)

	)

421 
	#IS_TIM_BREAK_POLARITY
(
POLARITY
Ë(((POLARITYË=
TIM_BªakPﬁ¨ôy_Low
Ë|| \

	)

422 ((
POLARITY
Ë=
TIM_BªakPﬁ¨ôy_High
))

431 
	#TIM_Autom©icOuçut_E«bÀ
 ((
uöt16_t
)0x4000)

	)

432 
	#TIM_Autom©icOuçut_DißbÀ
 ((
uöt16_t
)0x0000)

	)

433 
	#IS_TIM_AUTOMATIC_OUTPUT_STATE
(
STATE
Ë(((STATEË=
TIM_Autom©icOuçut_E«bÀ
Ë|| \

	)

434 ((
STATE
Ë=
TIM_Autom©icOuçut_DißbÀ
))

443 
	#TIM_LOCKLevñ_OFF
 ((
uöt16_t
)0x0000)

	)

444 
	#TIM_LOCKLevñ_1
 ((
uöt16_t
)0x0100)

	)

445 
	#TIM_LOCKLevñ_2
 ((
uöt16_t
)0x0200)

	)

446 
	#TIM_LOCKLevñ_3
 ((
uöt16_t
)0x0300)

	)

447 
	#IS_TIM_LOCK_LEVEL
(
LEVEL
Ë(((LEVELË=
TIM_LOCKLevñ_OFF
Ë|| \

	)

448 ((
LEVEL
Ë=
TIM_LOCKLevñ_1
) || \

449 ((
LEVEL
Ë=
TIM_LOCKLevñ_2
) || \

450 ((
LEVEL
Ë=
TIM_LOCKLevñ_3
))

459 
	#TIM_OSSISèã_E«bÀ
 ((
uöt16_t
)0x0400)

	)

460 
	#TIM_OSSISèã_DißbÀ
 ((
uöt16_t
)0x0000)

	)

461 
	#IS_TIM_OSSI_STATE
(
STATE
Ë(((STATEË=
TIM_OSSISèã_E«bÀ
Ë|| \

	)

462 ((
STATE
Ë=
TIM_OSSISèã_DißbÀ
))

471 
	#TIM_OSSRSèã_E«bÀ
 ((
uöt16_t
)0x0800)

	)

472 
	#TIM_OSSRSèã_DißbÀ
 ((
uöt16_t
)0x0000)

	)

473 
	#IS_TIM_OSSR_STATE
(
STATE
Ë(((STATEË=
TIM_OSSRSèã_E«bÀ
Ë|| \

	)

474 ((
STATE
Ë=
TIM_OSSRSèã_DißbÀ
))

483 
	#TIM_OCIdÀSèã_Së
 ((
uöt16_t
)0x0100)

	)

484 
	#TIM_OCIdÀSèã_Re£t
 ((
uöt16_t
)0x0000)

	)

485 
	#IS_TIM_OCIDLE_STATE
(
STATE
Ë(((STATEË=
TIM_OCIdÀSèã_Së
Ë|| \

	)

486 ((
STATE
Ë=
TIM_OCIdÀSèã_Re£t
))

495 
	#TIM_OCNIdÀSèã_Së
 ((
uöt16_t
)0x0200)

	)

496 
	#TIM_OCNIdÀSèã_Re£t
 ((
uöt16_t
)0x0000)

	)

497 
	#IS_TIM_OCNIDLE_STATE
(
STATE
Ë(((STATEË=
TIM_OCNIdÀSèã_Së
Ë|| \

	)

498 ((
STATE
Ë=
TIM_OCNIdÀSèã_Re£t
))

507 
	#TIM_ICPﬁ¨ôy_Risög
 ((
uöt16_t
)0x0000)

	)

508 
	#TIM_ICPﬁ¨ôy_FÆlög
 ((
uöt16_t
)0x0002)

	)

509 
	#TIM_ICPﬁ¨ôy_BŸhEdge
 ((
uöt16_t
)0x000A)

	)

510 
	#IS_TIM_IC_POLARITY
(
POLARITY
Ë(((POLARITYË=
TIM_ICPﬁ¨ôy_Risög
Ë|| \

	)

511 ((
POLARITY
Ë=
TIM_ICPﬁ¨ôy_FÆlög
)|| \

512 ((
POLARITY
Ë=
TIM_ICPﬁ¨ôy_BŸhEdge
))

521 
	#TIM_ICSñe˘i⁄_Dúe˘TI
 ((
uöt16_t
)0x0001Ë

	)

523 
	#TIM_ICSñe˘i⁄_Indúe˘TI
 ((
uöt16_t
)0x0002Ë

	)

525 
	#TIM_ICSñe˘i⁄_TRC
 ((
uöt16_t
)0x0003Ë

	)

526 
	#IS_TIM_IC_SELECTION
(
SELECTION
Ë(((SELECTIONË=
TIM_ICSñe˘i⁄_Dúe˘TI
Ë|| \

	)

527 ((
SELECTION
Ë=
TIM_ICSñe˘i⁄_Indúe˘TI
) || \

528 ((
SELECTION
Ë=
TIM_ICSñe˘i⁄_TRC
))

537 
	#TIM_ICPSC_DIV1
 ((
uöt16_t
)0x0000Ë

	)

538 
	#TIM_ICPSC_DIV2
 ((
uöt16_t
)0x0004Ë

	)

539 
	#TIM_ICPSC_DIV4
 ((
uöt16_t
)0x0008Ë

	)

540 
	#TIM_ICPSC_DIV8
 ((
uöt16_t
)0x000CË

	)

541 
	#IS_TIM_IC_PRESCALER
(
PRESCALER
Ë(((PRESCALERË=
TIM_ICPSC_DIV1
Ë|| \

	)

542 ((
PRESCALER
Ë=
TIM_ICPSC_DIV2
) || \

543 ((
PRESCALER
Ë=
TIM_ICPSC_DIV4
) || \

544 ((
PRESCALER
Ë=
TIM_ICPSC_DIV8
))

553 
	#TIM_IT_Upd©e
 ((
uöt16_t
)0x0001)

	)

554 
	#TIM_IT_CC1
 ((
uöt16_t
)0x0002)

	)

555 
	#TIM_IT_CC2
 ((
uöt16_t
)0x0004)

	)

556 
	#TIM_IT_CC3
 ((
uöt16_t
)0x0008)

	)

557 
	#TIM_IT_CC4
 ((
uöt16_t
)0x0010)

	)

558 
	#TIM_IT_COM
 ((
uöt16_t
)0x0020)

	)

559 
	#TIM_IT_Triggî
 ((
uöt16_t
)0x0040)

	)

560 
	#TIM_IT_Bªak
 ((
uöt16_t
)0x0080)

	)

561 
	#IS_TIM_IT
(
IT
Ë((((ITË& (
uöt16_t
)0xFF00Ë=0x0000Ë&& ((ITË!0x0000))

	)

563 
	#IS_TIM_GET_IT
(
IT
Ë(((ITË=
TIM_IT_Upd©e
Ë|| \

	)

564 ((
IT
Ë=
TIM_IT_CC1
) || \

565 ((
IT
Ë=
TIM_IT_CC2
) || \

566 ((
IT
Ë=
TIM_IT_CC3
) || \

567 ((
IT
Ë=
TIM_IT_CC4
) || \

568 ((
IT
Ë=
TIM_IT_COM
) || \

569 ((
IT
Ë=
TIM_IT_Triggî
) || \

570 ((
IT
Ë=
TIM_IT_Bªak
))

579 
	#TIM_DMABa£_CR1
 ((
uöt16_t
)0x0000)

	)

580 
	#TIM_DMABa£_CR2
 ((
uöt16_t
)0x0001)

	)

581 
	#TIM_DMABa£_SMCR
 ((
uöt16_t
)0x0002)

	)

582 
	#TIM_DMABa£_DIER
 ((
uöt16_t
)0x0003)

	)

583 
	#TIM_DMABa£_SR
 ((
uöt16_t
)0x0004)

	)

584 
	#TIM_DMABa£_EGR
 ((
uöt16_t
)0x0005)

	)

585 
	#TIM_DMABa£_CCMR1
 ((
uöt16_t
)0x0006)

	)

586 
	#TIM_DMABa£_CCMR2
 ((
uöt16_t
)0x0007)

	)

587 
	#TIM_DMABa£_CCER
 ((
uöt16_t
)0x0008)

	)

588 
	#TIM_DMABa£_CNT
 ((
uöt16_t
)0x0009)

	)

589 
	#TIM_DMABa£_PSC
 ((
uöt16_t
)0x000A)

	)

590 
	#TIM_DMABa£_ARR
 ((
uöt16_t
)0x000B)

	)

591 
	#TIM_DMABa£_RCR
 ((
uöt16_t
)0x000C)

	)

592 
	#TIM_DMABa£_CCR1
 ((
uöt16_t
)0x000D)

	)

593 
	#TIM_DMABa£_CCR2
 ((
uöt16_t
)0x000E)

	)

594 
	#TIM_DMABa£_CCR3
 ((
uöt16_t
)0x000F)

	)

595 
	#TIM_DMABa£_CCR4
 ((
uöt16_t
)0x0010)

	)

596 
	#TIM_DMABa£_BDTR
 ((
uöt16_t
)0x0011)

	)

597 
	#TIM_DMABa£_DCR
 ((
uöt16_t
)0x0012)

	)

598 
	#TIM_DMABa£_OR
 ((
uöt16_t
)0x0013)

	)

599 
	#IS_TIM_DMA_BASE
(
BASE
Ë(((BASEË=
TIM_DMABa£_CR1
Ë|| \

	)

600 ((
BASE
Ë=
TIM_DMABa£_CR2
) || \

601 ((
BASE
Ë=
TIM_DMABa£_SMCR
) || \

602 ((
BASE
Ë=
TIM_DMABa£_DIER
) || \

603 ((
BASE
Ë=
TIM_DMABa£_SR
) || \

604 ((
BASE
Ë=
TIM_DMABa£_EGR
) || \

605 ((
BASE
Ë=
TIM_DMABa£_CCMR1
) || \

606 ((
BASE
Ë=
TIM_DMABa£_CCMR2
) || \

607 ((
BASE
Ë=
TIM_DMABa£_CCER
) || \

608 ((
BASE
Ë=
TIM_DMABa£_CNT
) || \

609 ((
BASE
Ë=
TIM_DMABa£_PSC
) || \

610 ((
BASE
Ë=
TIM_DMABa£_ARR
) || \

611 ((
BASE
Ë=
TIM_DMABa£_RCR
) || \

612 ((
BASE
Ë=
TIM_DMABa£_CCR1
) || \

613 ((
BASE
Ë=
TIM_DMABa£_CCR2
) || \

614 ((
BASE
Ë=
TIM_DMABa£_CCR3
) || \

615 ((
BASE
Ë=
TIM_DMABa£_CCR4
) || \

616 ((
BASE
Ë=
TIM_DMABa£_BDTR
) || \

617 ((
BASE
Ë=
TIM_DMABa£_DCR
) || \

618 ((
BASE
Ë=
TIM_DMABa£_OR
))

627 
	#TIM_DMABur°Lígth_1Tøns„r
 ((
uöt16_t
)0x0000)

	)

628 
	#TIM_DMABur°Lígth_2Tøns„rs
 ((
uöt16_t
)0x0100)

	)

629 
	#TIM_DMABur°Lígth_3Tøns„rs
 ((
uöt16_t
)0x0200)

	)

630 
	#TIM_DMABur°Lígth_4Tøns„rs
 ((
uöt16_t
)0x0300)

	)

631 
	#TIM_DMABur°Lígth_5Tøns„rs
 ((
uöt16_t
)0x0400)

	)

632 
	#TIM_DMABur°Lígth_6Tøns„rs
 ((
uöt16_t
)0x0500)

	)

633 
	#TIM_DMABur°Lígth_7Tøns„rs
 ((
uöt16_t
)0x0600)

	)

634 
	#TIM_DMABur°Lígth_8Tøns„rs
 ((
uöt16_t
)0x0700)

	)

635 
	#TIM_DMABur°Lígth_9Tøns„rs
 ((
uöt16_t
)0x0800)

	)

636 
	#TIM_DMABur°Lígth_10Tøns„rs
 ((
uöt16_t
)0x0900)

	)

637 
	#TIM_DMABur°Lígth_11Tøns„rs
 ((
uöt16_t
)0x0A00)

	)

638 
	#TIM_DMABur°Lígth_12Tøns„rs
 ((
uöt16_t
)0x0B00)

	)

639 
	#TIM_DMABur°Lígth_13Tøns„rs
 ((
uöt16_t
)0x0C00)

	)

640 
	#TIM_DMABur°Lígth_14Tøns„rs
 ((
uöt16_t
)0x0D00)

	)

641 
	#TIM_DMABur°Lígth_15Tøns„rs
 ((
uöt16_t
)0x0E00)

	)

642 
	#TIM_DMABur°Lígth_16Tøns„rs
 ((
uöt16_t
)0x0F00)

	)

643 
	#TIM_DMABur°Lígth_17Tøns„rs
 ((
uöt16_t
)0x1000)

	)

644 
	#TIM_DMABur°Lígth_18Tøns„rs
 ((
uöt16_t
)0x1100)

	)

645 
	#IS_TIM_DMA_LENGTH
(
LENGTH
Ë(((LENGTHË=
TIM_DMABur°Lígth_1Tøns„r
Ë|| \

	)

646 ((
LENGTH
Ë=
TIM_DMABur°Lígth_2Tøns„rs
) || \

647 ((
LENGTH
Ë=
TIM_DMABur°Lígth_3Tøns„rs
) || \

648 ((
LENGTH
Ë=
TIM_DMABur°Lígth_4Tøns„rs
) || \

649 ((
LENGTH
Ë=
TIM_DMABur°Lígth_5Tøns„rs
) || \

650 ((
LENGTH
Ë=
TIM_DMABur°Lígth_6Tøns„rs
) || \

651 ((
LENGTH
Ë=
TIM_DMABur°Lígth_7Tøns„rs
) || \

652 ((
LENGTH
Ë=
TIM_DMABur°Lígth_8Tøns„rs
) || \

653 ((
LENGTH
Ë=
TIM_DMABur°Lígth_9Tøns„rs
) || \

654 ((
LENGTH
Ë=
TIM_DMABur°Lígth_10Tøns„rs
) || \

655 ((
LENGTH
Ë=
TIM_DMABur°Lígth_11Tøns„rs
) || \

656 ((
LENGTH
Ë=
TIM_DMABur°Lígth_12Tøns„rs
) || \

657 ((
LENGTH
Ë=
TIM_DMABur°Lígth_13Tøns„rs
) || \

658 ((
LENGTH
Ë=
TIM_DMABur°Lígth_14Tøns„rs
) || \

659 ((
LENGTH
Ë=
TIM_DMABur°Lígth_15Tøns„rs
) || \

660 ((
LENGTH
Ë=
TIM_DMABur°Lígth_16Tøns„rs
) || \

661 ((
LENGTH
Ë=
TIM_DMABur°Lígth_17Tøns„rs
) || \

662 ((
LENGTH
Ë=
TIM_DMABur°Lígth_18Tøns„rs
))

671 
	#TIM_DMA_Upd©e
 ((
uöt16_t
)0x0100)

	)

672 
	#TIM_DMA_CC1
 ((
uöt16_t
)0x0200)

	)

673 
	#TIM_DMA_CC2
 ((
uöt16_t
)0x0400)

	)

674 
	#TIM_DMA_CC3
 ((
uöt16_t
)0x0800)

	)

675 
	#TIM_DMA_CC4
 ((
uöt16_t
)0x1000)

	)

676 
	#TIM_DMA_COM
 ((
uöt16_t
)0x2000)

	)

677 
	#TIM_DMA_Triggî
 ((
uöt16_t
)0x4000)

	)

678 
	#IS_TIM_DMA_SOURCE
(
SOURCE
Ë((((SOURCEË& (
uöt16_t
)0x80FFË=0x0000Ë&& ((SOURCEË!0x0000))

	)

688 
	#TIM_ExtTRGPSC_OFF
 ((
uöt16_t
)0x0000)

	)

689 
	#TIM_ExtTRGPSC_DIV2
 ((
uöt16_t
)0x1000)

	)

690 
	#TIM_ExtTRGPSC_DIV4
 ((
uöt16_t
)0x2000)

	)

691 
	#TIM_ExtTRGPSC_DIV8
 ((
uöt16_t
)0x3000)

	)

692 
	#IS_TIM_EXT_PRESCALER
(
PRESCALER
Ë(((PRESCALERË=
TIM_ExtTRGPSC_OFF
Ë|| \

	)

693 ((
PRESCALER
Ë=
TIM_ExtTRGPSC_DIV2
) || \

694 ((
PRESCALER
Ë=
TIM_ExtTRGPSC_DIV4
) || \

695 ((
PRESCALER
Ë=
TIM_ExtTRGPSC_DIV8
))

704 
	#TIM_TS_ITR0
 ((
uöt16_t
)0x0000)

	)

705 
	#TIM_TS_ITR1
 ((
uöt16_t
)0x0010)

	)

706 
	#TIM_TS_ITR2
 ((
uöt16_t
)0x0020)

	)

707 
	#TIM_TS_ITR3
 ((
uöt16_t
)0x0030)

	)

708 
	#TIM_TS_TI1F_ED
 ((
uöt16_t
)0x0040)

	)

709 
	#TIM_TS_TI1FP1
 ((
uöt16_t
)0x0050)

	)

710 
	#TIM_TS_TI2FP2
 ((
uöt16_t
)0x0060)

	)

711 
	#TIM_TS_ETRF
 ((
uöt16_t
)0x0070)

	)

712 
	#IS_TIM_TRIGGER_SELECTION
(
SELECTION
Ë(((SELECTIONË=
TIM_TS_ITR0
Ë|| \

	)

713 ((
SELECTION
Ë=
TIM_TS_ITR1
) || \

714 ((
SELECTION
Ë=
TIM_TS_ITR2
) || \

715 ((
SELECTION
Ë=
TIM_TS_ITR3
) || \

716 ((
SELECTION
Ë=
TIM_TS_TI1F_ED
) || \

717 ((
SELECTION
Ë=
TIM_TS_TI1FP1
) || \

718 ((
SELECTION
Ë=
TIM_TS_TI2FP2
) || \

719 ((
SELECTION
Ë=
TIM_TS_ETRF
))

720 
	#IS_TIM_INTERNAL_TRIGGER_SELECTION
(
SELECTION
Ë(((SELECTIONË=
TIM_TS_ITR0
Ë|| \

	)

721 ((
SELECTION
Ë=
TIM_TS_ITR1
) || \

722 ((
SELECTION
Ë=
TIM_TS_ITR2
) || \

723 ((
SELECTION
Ë=
TIM_TS_ITR3
))

732 
	#TIM_TIxExã∫ÆCLK1Sour˚_TI1
 ((
uöt16_t
)0x0050)

	)

733 
	#TIM_TIxExã∫ÆCLK1Sour˚_TI2
 ((
uöt16_t
)0x0060)

	)

734 
	#TIM_TIxExã∫ÆCLK1Sour˚_TI1ED
 ((
uöt16_t
)0x0040)

	)

743 
	#TIM_ExtTRGPﬁ¨ôy_Invîãd
 ((
uöt16_t
)0x8000)

	)

744 
	#TIM_ExtTRGPﬁ¨ôy_N⁄Invîãd
 ((
uöt16_t
)0x0000)

	)

745 
	#IS_TIM_EXT_POLARITY
(
POLARITY
Ë(((POLARITYË=
TIM_ExtTRGPﬁ¨ôy_Invîãd
Ë|| \

	)

746 ((
POLARITY
Ë=
TIM_ExtTRGPﬁ¨ôy_N⁄Invîãd
))

755 
	#TIM_PSCRñﬂdMode_Upd©e
 ((
uöt16_t
)0x0000)

	)

756 
	#TIM_PSCRñﬂdMode_Immedüã
 ((
uöt16_t
)0x0001)

	)

757 
	#IS_TIM_PRESCALER_RELOAD
(
RELOAD
Ë(((RELOADË=
TIM_PSCRñﬂdMode_Upd©e
Ë|| \

	)

758 ((
RELOAD
Ë=
TIM_PSCRñﬂdMode_Immedüã
))

767 
	#TIM_F‹˚dA˘i⁄_A˘ive
 ((
uöt16_t
)0x0050)

	)

768 
	#TIM_F‹˚dA˘i⁄_InA˘ive
 ((
uöt16_t
)0x0040)

	)

769 
	#IS_TIM_FORCED_ACTION
(
ACTION
Ë(((ACTIONË=
TIM_F‹˚dA˘i⁄_A˘ive
Ë|| \

	)

770 ((
ACTION
Ë=
TIM_F‹˚dA˘i⁄_InA˘ive
))

779 
	#TIM_EncodîMode_TI1
 ((
uöt16_t
)0x0001)

	)

780 
	#TIM_EncodîMode_TI2
 ((
uöt16_t
)0x0002)

	)

781 
	#TIM_EncodîMode_TI12
 ((
uöt16_t
)0x0003)

	)

782 
	#IS_TIM_ENCODER_MODE
(
MODE
Ë(((MODEË=
TIM_EncodîMode_TI1
Ë|| \

	)

783 ((
MODE
Ë=
TIM_EncodîMode_TI2
) || \

784 ((
MODE
Ë=
TIM_EncodîMode_TI12
))

794 
	#TIM_EvítSour˚_Upd©e
 ((
uöt16_t
)0x0001)

	)

795 
	#TIM_EvítSour˚_CC1
 ((
uöt16_t
)0x0002)

	)

796 
	#TIM_EvítSour˚_CC2
 ((
uöt16_t
)0x0004)

	)

797 
	#TIM_EvítSour˚_CC3
 ((
uöt16_t
)0x0008)

	)

798 
	#TIM_EvítSour˚_CC4
 ((
uöt16_t
)0x0010)

	)

799 
	#TIM_EvítSour˚_COM
 ((
uöt16_t
)0x0020)

	)

800 
	#TIM_EvítSour˚_Triggî
 ((
uöt16_t
)0x0040)

	)

801 
	#TIM_EvítSour˚_Bªak
 ((
uöt16_t
)0x0080)

	)

802 
	#IS_TIM_EVENT_SOURCE
(
SOURCE
Ë((((SOURCEË& (
uöt16_t
)0xFF00Ë=0x0000Ë&& ((SOURCEË!0x0000))

	)

812 
	#TIM_Upd©eSour˚_GlobÆ
 ((
uöt16_t
)0x0000Ë

	)

815 
	#TIM_Upd©eSour˚_Reguœr
 ((
uöt16_t
)0x0001Ë

	)

816 
	#IS_TIM_UPDATE_SOURCE
(
SOURCE
Ë(((SOURCEË=
TIM_Upd©eSour˚_GlobÆ
Ë|| \

	)

817 ((
SOURCE
Ë=
TIM_Upd©eSour˚_Reguœr
))

826 
	#TIM_OCPªlﬂd_E«bÀ
 ((
uöt16_t
)0x0008)

	)

827 
	#TIM_OCPªlﬂd_DißbÀ
 ((
uöt16_t
)0x0000)

	)

828 
	#IS_TIM_OCPRELOAD_STATE
(
STATE
Ë(((STATEË=
TIM_OCPªlﬂd_E«bÀ
Ë|| \

	)

829 ((
STATE
Ë=
TIM_OCPªlﬂd_DißbÀ
))

838 
	#TIM_OCFa°_E«bÀ
 ((
uöt16_t
)0x0004)

	)

839 
	#TIM_OCFa°_DißbÀ
 ((
uöt16_t
)0x0000)

	)

840 
	#IS_TIM_OCFAST_STATE
(
STATE
Ë(((STATEË=
TIM_OCFa°_E«bÀ
Ë|| \

	)

841 ((
STATE
Ë=
TIM_OCFa°_DißbÀ
))

851 
	#TIM_OCCÀ¨_E«bÀ
 ((
uöt16_t
)0x0080)

	)

852 
	#TIM_OCCÀ¨_DißbÀ
 ((
uöt16_t
)0x0000)

	)

853 
	#IS_TIM_OCCLEAR_STATE
(
STATE
Ë(((STATEË=
TIM_OCCÀ¨_E«bÀ
Ë|| \

	)

854 ((
STATE
Ë=
TIM_OCCÀ¨_DißbÀ
))

863 
	#TIM_TRGOSour˚_Re£t
 ((
uöt16_t
)0x0000)

	)

864 
	#TIM_TRGOSour˚_E«bÀ
 ((
uöt16_t
)0x0010)

	)

865 
	#TIM_TRGOSour˚_Upd©e
 ((
uöt16_t
)0x0020)

	)

866 
	#TIM_TRGOSour˚_OC1
 ((
uöt16_t
)0x0030)

	)

867 
	#TIM_TRGOSour˚_OC1Ref
 ((
uöt16_t
)0x0040)

	)

868 
	#TIM_TRGOSour˚_OC2Ref
 ((
uöt16_t
)0x0050)

	)

869 
	#TIM_TRGOSour˚_OC3Ref
 ((
uöt16_t
)0x0060)

	)

870 
	#TIM_TRGOSour˚_OC4Ref
 ((
uöt16_t
)0x0070)

	)

871 
	#IS_TIM_TRGO_SOURCE
(
SOURCE
Ë(((SOURCEË=
TIM_TRGOSour˚_Re£t
Ë|| \

	)

872 ((
SOURCE
Ë=
TIM_TRGOSour˚_E«bÀ
) || \

873 ((
SOURCE
Ë=
TIM_TRGOSour˚_Upd©e
) || \

874 ((
SOURCE
Ë=
TIM_TRGOSour˚_OC1
) || \

875 ((
SOURCE
Ë=
TIM_TRGOSour˚_OC1Ref
) || \

876 ((
SOURCE
Ë=
TIM_TRGOSour˚_OC2Ref
) || \

877 ((
SOURCE
Ë=
TIM_TRGOSour˚_OC3Ref
) || \

878 ((
SOURCE
Ë=
TIM_TRGOSour˚_OC4Ref
))

887 
	#TIM_SœveMode_Re£t
 ((
uöt16_t
)0x0004)

	)

888 
	#TIM_SœveMode_G©ed
 ((
uöt16_t
)0x0005)

	)

889 
	#TIM_SœveMode_Triggî
 ((
uöt16_t
)0x0006)

	)

890 
	#TIM_SœveMode_Exã∫Æ1
 ((
uöt16_t
)0x0007)

	)

891 
	#IS_TIM_SLAVE_MODE
(
MODE
Ë(((MODEË=
TIM_SœveMode_Re£t
Ë|| \

	)

892 ((
MODE
Ë=
TIM_SœveMode_G©ed
) || \

893 ((
MODE
Ë=
TIM_SœveMode_Triggî
) || \

894 ((
MODE
Ë=
TIM_SœveMode_Exã∫Æ1
))

903 
	#TIM_Ma°îSœveMode_E«bÀ
 ((
uöt16_t
)0x0080)

	)

904 
	#TIM_Ma°îSœveMode_DißbÀ
 ((
uöt16_t
)0x0000)

	)

905 
	#IS_TIM_MSM_STATE
(
STATE
Ë(((STATEË=
TIM_Ma°îSœveMode_E«bÀ
Ë|| \

	)

906 ((
STATE
Ë=
TIM_Ma°îSœveMode_DißbÀ
))

914 
	#TIM2_TIM8_TRGO
 ((
uöt16_t
)0x0000)

	)

915 
	#TIM2_ETH_PTP
 ((
uöt16_t
)0x0400)

	)

916 
	#TIM2_USBFS_SOF
 ((
uöt16_t
)0x0800)

	)

917 
	#TIM2_USBHS_SOF
 ((
uöt16_t
)0x0C00)

	)

919 
	#TIM5_GPIO
 ((
uöt16_t
)0x0000)

	)

920 
	#TIM5_LSI
 ((
uöt16_t
)0x0040)

	)

921 
	#TIM5_LSE
 ((
uöt16_t
)0x0080)

	)

922 
	#TIM5_RTC
 ((
uöt16_t
)0x00C0)

	)

924 
	#TIM11_GPIO
 ((
uöt16_t
)0x0000)

	)

925 
	#TIM11_HSE
 ((
uöt16_t
)0x0002)

	)

927 
	#IS_TIM_REMAP
(
TIM_REMAP
Ë(((TIM_REMAPË=
TIM2_TIM8_TRGO
)||\

	)

928 ((
TIM_REMAP
Ë=
TIM2_ETH_PTP
)||\

929 ((
TIM_REMAP
Ë=
TIM2_USBFS_SOF
)||\

930 ((
TIM_REMAP
Ë=
TIM2_USBHS_SOF
)||\

931 ((
TIM_REMAP
Ë=
TIM5_GPIO
)||\

932 ((
TIM_REMAP
Ë=
TIM5_LSI
)||\

933 ((
TIM_REMAP
Ë=
TIM5_LSE
)||\

934 ((
TIM_REMAP
Ë=
TIM5_RTC
)||\

935 ((
TIM_REMAP
Ë=
TIM11_GPIO
)||\

936 ((
TIM_REMAP
Ë=
TIM11_HSE
))

945 
	#TIM_FLAG_Upd©e
 ((
uöt16_t
)0x0001)

	)

946 
	#TIM_FLAG_CC1
 ((
uöt16_t
)0x0002)

	)

947 
	#TIM_FLAG_CC2
 ((
uöt16_t
)0x0004)

	)

948 
	#TIM_FLAG_CC3
 ((
uöt16_t
)0x0008)

	)

949 
	#TIM_FLAG_CC4
 ((
uöt16_t
)0x0010)

	)

950 
	#TIM_FLAG_COM
 ((
uöt16_t
)0x0020)

	)

951 
	#TIM_FLAG_Triggî
 ((
uöt16_t
)0x0040)

	)

952 
	#TIM_FLAG_Bªak
 ((
uöt16_t
)0x0080)

	)

953 
	#TIM_FLAG_CC1OF
 ((
uöt16_t
)0x0200)

	)

954 
	#TIM_FLAG_CC2OF
 ((
uöt16_t
)0x0400)

	)

955 
	#TIM_FLAG_CC3OF
 ((
uöt16_t
)0x0800)

	)

956 
	#TIM_FLAG_CC4OF
 ((
uöt16_t
)0x1000)

	)

957 
	#IS_TIM_GET_FLAG
(
FLAG
Ë(((FLAGË=
TIM_FLAG_Upd©e
Ë|| \

	)

958 ((
FLAG
Ë=
TIM_FLAG_CC1
) || \

959 ((
FLAG
Ë=
TIM_FLAG_CC2
) || \

960 ((
FLAG
Ë=
TIM_FLAG_CC3
) || \

961 ((
FLAG
Ë=
TIM_FLAG_CC4
) || \

962 ((
FLAG
Ë=
TIM_FLAG_COM
) || \

963 ((
FLAG
Ë=
TIM_FLAG_Triggî
) || \

964 ((
FLAG
Ë=
TIM_FLAG_Bªak
) || \

965 ((
FLAG
Ë=
TIM_FLAG_CC1OF
) || \

966 ((
FLAG
Ë=
TIM_FLAG_CC2OF
) || \

967 ((
FLAG
Ë=
TIM_FLAG_CC3OF
) || \

968 ((
FLAG
Ë=
TIM_FLAG_CC4OF
))

978 
	#IS_TIM_IC_FILTER
(
ICFILTER
Ë((ICFILTERË<0xF)

	)

987 
	#IS_TIM_EXT_FILTER
(
EXTFILTER
Ë((EXTFILTERË<0xF)

	)

996 
	#TIM_DMABur°Lígth_1Byã
 
TIM_DMABur°Lígth_1Tøns„r


	)

997 
	#TIM_DMABur°Lígth_2Byãs
 
TIM_DMABur°Lígth_2Tøns„rs


	)

998 
	#TIM_DMABur°Lígth_3Byãs
 
TIM_DMABur°Lígth_3Tøns„rs


	)

999 
	#TIM_DMABur°Lígth_4Byãs
 
TIM_DMABur°Lígth_4Tøns„rs


	)

1000 
	#TIM_DMABur°Lígth_5Byãs
 
TIM_DMABur°Lígth_5Tøns„rs


	)

1001 
	#TIM_DMABur°Lígth_6Byãs
 
TIM_DMABur°Lígth_6Tøns„rs


	)

1002 
	#TIM_DMABur°Lígth_7Byãs
 
TIM_DMABur°Lígth_7Tøns„rs


	)

1003 
	#TIM_DMABur°Lígth_8Byãs
 
TIM_DMABur°Lígth_8Tøns„rs


	)

1004 
	#TIM_DMABur°Lígth_9Byãs
 
TIM_DMABur°Lígth_9Tøns„rs


	)

1005 
	#TIM_DMABur°Lígth_10Byãs
 
TIM_DMABur°Lígth_10Tøns„rs


	)

1006 
	#TIM_DMABur°Lígth_11Byãs
 
TIM_DMABur°Lígth_11Tøns„rs


	)

1007 
	#TIM_DMABur°Lígth_12Byãs
 
TIM_DMABur°Lígth_12Tøns„rs


	)

1008 
	#TIM_DMABur°Lígth_13Byãs
 
TIM_DMABur°Lígth_13Tøns„rs


	)

1009 
	#TIM_DMABur°Lígth_14Byãs
 
TIM_DMABur°Lígth_14Tøns„rs


	)

1010 
	#TIM_DMABur°Lígth_15Byãs
 
TIM_DMABur°Lígth_15Tøns„rs


	)

1011 
	#TIM_DMABur°Lígth_16Byãs
 
TIM_DMABur°Lígth_16Tøns„rs


	)

1012 
	#TIM_DMABur°Lígth_17Byãs
 
TIM_DMABur°Lígth_17Tøns„rs


	)

1013 
	#TIM_DMABur°Lígth_18Byãs
 
TIM_DMABur°Lígth_18Tøns„rs


	)

1026 
TIM_DeInô
(
TIM_Ty≥Def
* 
TIMx
);

1027 
TIM_TimeBa£Inô
(
TIM_Ty≥Def
* 
TIMx
, 
TIM_TimeBa£InôTy≥Def
* 
TIM_TimeBa£InôSåu˘
);

1028 
TIM_TimeBa£Såu˘Inô
(
TIM_TimeBa£InôTy≥Def
* 
TIM_TimeBa£InôSåu˘
);

1029 
TIM_PªsˇÀrC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
PªsˇÀr
, uöt16_à
TIM_PSCRñﬂdMode
);

1030 
TIM_Cou¡îModeC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_Cou¡îMode
);

1031 
TIM_SëCou¡î
(
TIM_Ty≥Def
* 
TIMx
, 
uöt32_t
 
Cou¡î
);

1032 
TIM_SëAut‹ñﬂd
(
TIM_Ty≥Def
* 
TIMx
, 
uöt32_t
 
Aut‹ñﬂd
);

1033 
uöt32_t
 
TIM_GëCou¡î
(
TIM_Ty≥Def
* 
TIMx
);

1034 
uöt16_t
 
TIM_GëPªsˇÀr
(
TIM_Ty≥Def
* 
TIMx
);

1035 
TIM_Upd©eDißbÀC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1036 
TIM_Upd©eReque°C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_Upd©eSour˚
);

1037 
TIM_ARRPªlﬂdC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1038 
TIM_Sñe˘O√Pul£Mode
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OPMode
);

1039 
TIM_SëClockDivisi⁄
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_CKD
);

1040 
TIM_Cmd
(
TIM_Ty≥Def
* 
TIMx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1043 
TIM_OC1Inô
(
TIM_Ty≥Def
* 
TIMx
, 
TIM_OCInôTy≥Def
* 
TIM_OCInôSåu˘
);

1044 
TIM_OC2Inô
(
TIM_Ty≥Def
* 
TIMx
, 
TIM_OCInôTy≥Def
* 
TIM_OCInôSåu˘
);

1045 
TIM_OC3Inô
(
TIM_Ty≥Def
* 
TIMx
, 
TIM_OCInôTy≥Def
* 
TIM_OCInôSåu˘
);

1046 
TIM_OC4Inô
(
TIM_Ty≥Def
* 
TIMx
, 
TIM_OCInôTy≥Def
* 
TIM_OCInôSåu˘
);

1047 
TIM_OCSåu˘Inô
(
TIM_OCInôTy≥Def
* 
TIM_OCInôSåu˘
);

1048 
TIM_Sñe˘OCxM
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_Ch™√l
, uöt16_à
TIM_OCMode
);

1049 
TIM_SëCom∑ª1
(
TIM_Ty≥Def
* 
TIMx
, 
uöt32_t
 
Com∑ª1
);

1050 
TIM_SëCom∑ª2
(
TIM_Ty≥Def
* 
TIMx
, 
uöt32_t
 
Com∑ª2
);

1051 
TIM_SëCom∑ª3
(
TIM_Ty≥Def
* 
TIMx
, 
uöt32_t
 
Com∑ª3
);

1052 
TIM_SëCom∑ª4
(
TIM_Ty≥Def
* 
TIMx
, 
uöt32_t
 
Com∑ª4
);

1053 
TIM_F‹˚dOC1C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_F‹˚dA˘i⁄
);

1054 
TIM_F‹˚dOC2C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_F‹˚dA˘i⁄
);

1055 
TIM_F‹˚dOC3C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_F‹˚dA˘i⁄
);

1056 
TIM_F‹˚dOC4C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_F‹˚dA˘i⁄
);

1057 
TIM_OC1PªlﬂdC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCPªlﬂd
);

1058 
TIM_OC2PªlﬂdC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCPªlﬂd
);

1059 
TIM_OC3PªlﬂdC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCPªlﬂd
);

1060 
TIM_OC4PªlﬂdC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCPªlﬂd
);

1061 
TIM_OC1Fa°C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCFa°
);

1062 
TIM_OC2Fa°C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCFa°
);

1063 
TIM_OC3Fa°C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCFa°
);

1064 
TIM_OC4Fa°C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCFa°
);

1065 
TIM_CÀ¨OC1Ref
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCCÀ¨
);

1066 
TIM_CÀ¨OC2Ref
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCCÀ¨
);

1067 
TIM_CÀ¨OC3Ref
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCCÀ¨
);

1068 
TIM_CÀ¨OC4Ref
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCCÀ¨
);

1069 
TIM_OC1Pﬁ¨ôyC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCPﬁ¨ôy
);

1070 
TIM_OC1NPﬁ¨ôyC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCNPﬁ¨ôy
);

1071 
TIM_OC2Pﬁ¨ôyC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCPﬁ¨ôy
);

1072 
TIM_OC2NPﬁ¨ôyC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCNPﬁ¨ôy
);

1073 
TIM_OC3Pﬁ¨ôyC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCPﬁ¨ôy
);

1074 
TIM_OC3NPﬁ¨ôyC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCNPﬁ¨ôy
);

1075 
TIM_OC4Pﬁ¨ôyC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_OCPﬁ¨ôy
);

1076 
TIM_CCxCmd
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_Ch™√l
, uöt16_à
TIM_CCx
);

1077 
TIM_CCxNCmd
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_Ch™√l
, uöt16_à
TIM_CCxN
);

1080 
TIM_ICInô
(
TIM_Ty≥Def
* 
TIMx
, 
TIM_ICInôTy≥Def
* 
TIM_ICInôSåu˘
);

1081 
TIM_ICSåu˘Inô
(
TIM_ICInôTy≥Def
* 
TIM_ICInôSåu˘
);

1082 
TIM_PWMIC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
TIM_ICInôTy≥Def
* 
TIM_ICInôSåu˘
);

1083 
uöt32_t
 
TIM_GëC≠tuª1
(
TIM_Ty≥Def
* 
TIMx
);

1084 
uöt32_t
 
TIM_GëC≠tuª2
(
TIM_Ty≥Def
* 
TIMx
);

1085 
uöt32_t
 
TIM_GëC≠tuª3
(
TIM_Ty≥Def
* 
TIMx
);

1086 
uöt32_t
 
TIM_GëC≠tuª4
(
TIM_Ty≥Def
* 
TIMx
);

1087 
TIM_SëIC1PªsˇÀr
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_ICPSC
);

1088 
TIM_SëIC2PªsˇÀr
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_ICPSC
);

1089 
TIM_SëIC3PªsˇÀr
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_ICPSC
);

1090 
TIM_SëIC4PªsˇÀr
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_ICPSC
);

1093 
TIM_BDTRC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
TIM_BDTRInôTy≥Def
 *
TIM_BDTRInôSåu˘
);

1094 
TIM_BDTRSåu˘Inô
(
TIM_BDTRInôTy≥Def
* 
TIM_BDTRInôSåu˘
);

1095 
TIM_CålPWMOuçuts
(
TIM_Ty≥Def
* 
TIMx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1096 
TIM_Sñe˘COM
(
TIM_Ty≥Def
* 
TIMx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1097 
TIM_CCPªlﬂdC⁄åﬁ
(
TIM_Ty≥Def
* 
TIMx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1100 
TIM_ITC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1101 
TIM_Gíî©eEvít
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_EvítSour˚
);

1102 
FœgSètus
 
TIM_GëFœgSètus
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_FLAG
);

1103 
TIM_CÀ¨Fœg
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_FLAG
);

1104 
ITSètus
 
TIM_GëITSètus
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_IT
);

1105 
TIM_CÀ¨ITPídögBô
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_IT
);

1106 
TIM_DMAC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_DMABa£
, uöt16_à
TIM_DMABur°Lígth
);

1107 
TIM_DMACmd
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_DMASour˚
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1108 
TIM_Sñe˘CCDMA
(
TIM_Ty≥Def
* 
TIMx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1111 
TIM_I¡î«lClockC⁄fig
(
TIM_Ty≥Def
* 
TIMx
);

1112 
TIM_ITRxExã∫ÆClockC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_I≈utTriggîSour˚
);

1113 
TIM_TIxExã∫ÆClockC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_TIxExã∫ÆCLKSour˚
,

1114 
uöt16_t
 
TIM_ICPﬁ¨ôy
, uöt16_à
ICFûãr
);

1115 
TIM_ETRClockMode1C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_ExtTRGPªsˇÀr
, uöt16_à
TIM_ExtTRGPﬁ¨ôy
,

1116 
uöt16_t
 
ExtTRGFûãr
);

1117 
TIM_ETRClockMode2C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_ExtTRGPªsˇÀr
,

1118 
uöt16_t
 
TIM_ExtTRGPﬁ¨ôy
, uöt16_à
ExtTRGFûãr
);

1121 
TIM_Sñe˘I≈utTriggî
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_I≈utTriggîSour˚
);

1122 
TIM_Sñe˘OuçutTriggî
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_TRGOSour˚
);

1123 
TIM_Sñe˘SœveMode
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_SœveMode
);

1124 
TIM_Sñe˘Ma°îSœveMode
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_Ma°îSœveMode
);

1125 
TIM_ETRC⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_ExtTRGPªsˇÀr
, uöt16_à
TIM_ExtTRGPﬁ¨ôy
,

1126 
uöt16_t
 
ExtTRGFûãr
);

1129 
TIM_EncodîI¡îÁ˚C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_EncodîMode
,

1130 
uöt16_t
 
TIM_IC1Pﬁ¨ôy
, uöt16_à
TIM_IC2Pﬁ¨ôy
);

1131 
TIM_Sñe˘HÆlSís‹
(
TIM_Ty≥Def
* 
TIMx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

1134 
TIM_Rem≠C⁄fig
(
TIM_Ty≥Def
* 
TIMx
, 
uöt16_t
 
TIM_Rem≠
);

1136 #ifde‡
__˝lu•lus


	@stm32f4xx_usart.h

30 #i‚de‡
__STM32F4xx_USART_H


31 
	#__STM32F4xx_USART_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

56 
uöt32_t
 
USART_BaudR©e
;

62 
uöt16_t
 
USART_W‹dLígth
;

65 
uöt16_t
 
USART_St›Bôs
;

68 
uöt16_t
 
USART_P¨ôy
;

75 
uöt16_t
 
USART_Mode
;

78 
uöt16_t
 
USART_H¨dw¨eFlowC⁄åﬁ
;

81 } 
	tUSART_InôTy≥Def
;

90 
uöt16_t
 
USART_Clock
;

93 
uöt16_t
 
USART_CPOL
;

96 
uöt16_t
 
USART_CPHA
;

99 
uöt16_t
 
USART_La°Bô
;

102 } 
	tUSART_ClockInôTy≥Def
;

110 
	#IS_USART_ALL_PERIPH
(
PERIPH
Ë(((PERIPHË=
USART1
Ë|| \

	)

111 ((
PERIPH
Ë=
USART2
) || \

112 ((
PERIPH
Ë=
USART3
) || \

113 ((
PERIPH
Ë=
UART4
) || \

114 ((
PERIPH
Ë=
UART5
) || \

115 ((
PERIPH
Ë=
USART6
) || \

116 ((
PERIPH
Ë=
UART7
) || \

117 ((
PERIPH
Ë=
UART8
))

119 
	#IS_USART_1236_PERIPH
(
PERIPH
Ë(((PERIPHË=
USART1
Ë|| \

	)

120 ((
PERIPH
Ë=
USART2
) || \

121 ((
PERIPH
Ë=
USART3
) || \

122 ((
PERIPH
Ë=
USART6
))

128 
	#USART_W‹dLígth_8b
 ((
uöt16_t
)0x0000)

	)

129 
	#USART_W‹dLígth_9b
 ((
uöt16_t
)0x1000)

	)

131 
	#IS_USART_WORD_LENGTH
(
LENGTH
Ë(((LENGTHË=
USART_W‹dLígth_8b
Ë|| \

	)

132 ((
LENGTH
Ë=
USART_W‹dLígth_9b
))

141 
	#USART_St›Bôs_1
 ((
uöt16_t
)0x0000)

	)

142 
	#USART_St›Bôs_0_5
 ((
uöt16_t
)0x1000)

	)

143 
	#USART_St›Bôs_2
 ((
uöt16_t
)0x2000)

	)

144 
	#USART_St›Bôs_1_5
 ((
uöt16_t
)0x3000)

	)

145 
	#IS_USART_STOPBITS
(
STOPBITS
Ë(((STOPBITSË=
USART_St›Bôs_1
Ë|| \

	)

146 ((
STOPBITS
Ë=
USART_St›Bôs_0_5
) || \

147 ((
STOPBITS
Ë=
USART_St›Bôs_2
) || \

148 ((
STOPBITS
Ë=
USART_St›Bôs_1_5
))

157 
	#USART_P¨ôy_No
 ((
uöt16_t
)0x0000)

	)

158 
	#USART_P¨ôy_Eví
 ((
uöt16_t
)0x0400)

	)

159 
	#USART_P¨ôy_Odd
 ((
uöt16_t
)0x0600)

	)

160 
	#IS_USART_PARITY
(
PARITY
Ë(((PARITYË=
USART_P¨ôy_No
Ë|| \

	)

161 ((
PARITY
Ë=
USART_P¨ôy_Eví
) || \

162 ((
PARITY
Ë=
USART_P¨ôy_Odd
))

171 
	#USART_Mode_Rx
 ((
uöt16_t
)0x0004)

	)

172 
	#USART_Mode_Tx
 ((
uöt16_t
)0x0008)

	)

173 
	#IS_USART_MODE
(
MODE
Ë((((MODEË& (
uöt16_t
)0xFFF3Ë=0x00Ë&& ((MODEË!(uöt16_t)0x00))

	)

181 
	#USART_H¨dw¨eFlowC⁄åﬁ_N⁄e
 ((
uöt16_t
)0x0000)

	)

182 
	#USART_H¨dw¨eFlowC⁄åﬁ_RTS
 ((
uöt16_t
)0x0100)

	)

183 
	#USART_H¨dw¨eFlowC⁄åﬁ_CTS
 ((
uöt16_t
)0x0200)

	)

184 
	#USART_H¨dw¨eFlowC⁄åﬁ_RTS_CTS
 ((
uöt16_t
)0x0300)

	)

185 
	#IS_USART_HARDWARE_FLOW_CONTROL
(
CONTROL
)\

	)

186 (((
CONTROL
Ë=
USART_H¨dw¨eFlowC⁄åﬁ_N⁄e
) || \

187 ((
CONTROL
Ë=
USART_H¨dw¨eFlowC⁄åﬁ_RTS
) || \

188 ((
CONTROL
Ë=
USART_H¨dw¨eFlowC⁄åﬁ_CTS
) || \

189 ((
CONTROL
Ë=
USART_H¨dw¨eFlowC⁄åﬁ_RTS_CTS
))

197 
	#USART_Clock_DißbÀ
 ((
uöt16_t
)0x0000)

	)

198 
	#USART_Clock_E«bÀ
 ((
uöt16_t
)0x0800)

	)

199 
	#IS_USART_CLOCK
(
CLOCK
Ë(((CLOCKË=
USART_Clock_DißbÀ
Ë|| \

	)

200 ((
CLOCK
Ë=
USART_Clock_E«bÀ
))

209 
	#USART_CPOL_Low
 ((
uöt16_t
)0x0000)

	)

210 
	#USART_CPOL_High
 ((
uöt16_t
)0x0400)

	)

211 
	#IS_USART_CPOL
(
CPOL
Ë(((CPOLË=
USART_CPOL_Low
Ë|| ((CPOLË=
USART_CPOL_High
))

	)

221 
	#USART_CPHA_1Edge
 ((
uöt16_t
)0x0000)

	)

222 
	#USART_CPHA_2Edge
 ((
uöt16_t
)0x0200)

	)

223 
	#IS_USART_CPHA
(
CPHA
Ë(((CPHAË=
USART_CPHA_1Edge
Ë|| ((CPHAË=
USART_CPHA_2Edge
))

	)

233 
	#USART_La°Bô_DißbÀ
 ((
uöt16_t
)0x0000)

	)

234 
	#USART_La°Bô_E«bÀ
 ((
uöt16_t
)0x0100)

	)

235 
	#IS_USART_LASTBIT
(
LASTBIT
Ë(((LASTBITË=
USART_La°Bô_DißbÀ
Ë|| \

	)

236 ((
LASTBIT
Ë=
USART_La°Bô_E«bÀ
))

245 
	#USART_IT_PE
 ((
uöt16_t
)0x0028)

	)

246 
	#USART_IT_TXE
 ((
uöt16_t
)0x0727)

	)

247 
	#USART_IT_TC
 ((
uöt16_t
)0x0626)

	)

248 
	#USART_IT_RXNE
 ((
uöt16_t
)0x0525)

	)

249 
	#USART_IT_ORE_RX
 ((
uöt16_t
)0x0325Ë

	)

250 
	#USART_IT_IDLE
 ((
uöt16_t
)0x0424)

	)

251 
	#USART_IT_LBD
 ((
uöt16_t
)0x0846)

	)

252 
	#USART_IT_CTS
 ((
uöt16_t
)0x096A)

	)

253 
	#USART_IT_ERR
 ((
uöt16_t
)0x0060)

	)

254 
	#USART_IT_ORE_ER
 ((
uöt16_t
)0x0360Ë

	)

255 
	#USART_IT_NE
 ((
uöt16_t
)0x0260)

	)

256 
	#USART_IT_FE
 ((
uöt16_t
)0x0160)

	)

261 
	#USART_IT_ORE
 
USART_IT_ORE_ER


	)

266 
	#IS_USART_CONFIG_IT
(
IT
Ë(((ITË=
USART_IT_PE
Ë|| ((ITË=
USART_IT_TXE
Ë|| \

	)

267 ((
IT
Ë=
USART_IT_TC
Ë|| ((ITË=
USART_IT_RXNE
) || \

268 ((
IT
Ë=
USART_IT_IDLE
Ë|| ((ITË=
USART_IT_LBD
) || \

269 ((
IT
Ë=
USART_IT_CTS
Ë|| ((ITË=
USART_IT_ERR
))

270 
	#IS_USART_GET_IT
(
IT
Ë(((ITË=
USART_IT_PE
Ë|| ((ITË=
USART_IT_TXE
Ë|| \

	)

271 ((
IT
Ë=
USART_IT_TC
Ë|| ((ITË=
USART_IT_RXNE
) || \

272 ((
IT
Ë=
USART_IT_IDLE
Ë|| ((ITË=
USART_IT_LBD
) || \

273 ((
IT
Ë=
USART_IT_CTS
Ë|| ((ITË=
USART_IT_ORE
) || \

274 ((
IT
Ë=
USART_IT_ORE_RX
Ë|| ((ITË=
USART_IT_ORE_ER
) || \

275 ((
IT
Ë=
USART_IT_NE
Ë|| ((ITË=
USART_IT_FE
))

276 
	#IS_USART_CLEAR_IT
(
IT
Ë(((ITË=
USART_IT_TC
Ë|| ((ITË=
USART_IT_RXNE
Ë|| \

	)

277 ((
IT
Ë=
USART_IT_LBD
Ë|| ((ITË=
USART_IT_CTS
))

286 
	#USART_DMAReq_Tx
 ((
uöt16_t
)0x0080)

	)

287 
	#USART_DMAReq_Rx
 ((
uöt16_t
)0x0040)

	)

288 
	#IS_USART_DMAREQ
(
DMAREQ
Ë((((DMAREQË& (
uöt16_t
)0xFF3FË=0x00Ë&& ((DMAREQË!(uöt16_t)0x00))

	)

298 
	#USART_WakeUp_IdÀLöe
 ((
uöt16_t
)0x0000)

	)

299 
	#USART_WakeUp_AddªssM¨k
 ((
uöt16_t
)0x0800)

	)

300 
	#IS_USART_WAKEUP
(
WAKEUP
Ë(((WAKEUPË=
USART_WakeUp_IdÀLöe
Ë|| \

	)

301 ((
WAKEUP
Ë=
USART_WakeUp_AddªssM¨k
))

310 
	#USART_LINBªakDëe˘Lígth_10b
 ((
uöt16_t
)0x0000)

	)

311 
	#USART_LINBªakDëe˘Lígth_11b
 ((
uöt16_t
)0x0020)

	)

312 
	#IS_USART_LIN_BREAK_DETECT_LENGTH
(
LENGTH
Ë\

	)

313 (((
LENGTH
Ë=
USART_LINBªakDëe˘Lígth_10b
) || \

314 ((
LENGTH
Ë=
USART_LINBªakDëe˘Lígth_11b
))

323 
	#USART_IrDAMode_LowPowî
 ((
uöt16_t
)0x0004)

	)

324 
	#USART_IrDAMode_N‹mÆ
 ((
uöt16_t
)0x0000)

	)

325 
	#IS_USART_IRDA_MODE
(
MODE
Ë(((MODEË=
USART_IrDAMode_LowPowî
Ë|| \

	)

326 ((
MODE
Ë=
USART_IrDAMode_N‹mÆ
))

335 
	#USART_FLAG_CTS
 ((
uöt16_t
)0x0200)

	)

336 
	#USART_FLAG_LBD
 ((
uöt16_t
)0x0100)

	)

337 
	#USART_FLAG_TXE
 ((
uöt16_t
)0x0080)

	)

338 
	#USART_FLAG_TC
 ((
uöt16_t
)0x0040)

	)

339 
	#USART_FLAG_RXNE
 ((
uöt16_t
)0x0020)

	)

340 
	#USART_FLAG_IDLE
 ((
uöt16_t
)0x0010)

	)

341 
	#USART_FLAG_ORE
 ((
uöt16_t
)0x0008)

	)

342 
	#USART_FLAG_NE
 ((
uöt16_t
)0x0004)

	)

343 
	#USART_FLAG_FE
 ((
uöt16_t
)0x0002)

	)

344 
	#USART_FLAG_PE
 ((
uöt16_t
)0x0001)

	)

345 
	#IS_USART_FLAG
(
FLAG
Ë(((FLAGË=
USART_FLAG_PE
Ë|| ((FLAGË=
USART_FLAG_TXE
Ë|| \

	)

346 ((
FLAG
Ë=
USART_FLAG_TC
Ë|| ((FLAGË=
USART_FLAG_RXNE
) || \

347 ((
FLAG
Ë=
USART_FLAG_IDLE
Ë|| ((FLAGË=
USART_FLAG_LBD
) || \

348 ((
FLAG
Ë=
USART_FLAG_CTS
Ë|| ((FLAGË=
USART_FLAG_ORE
) || \

349 ((
FLAG
Ë=
USART_FLAG_NE
Ë|| ((FLAGË=
USART_FLAG_FE
))

351 
	#IS_USART_CLEAR_FLAG
(
FLAG
Ë((((FLAGË& (
uöt16_t
)0xFC9FË=0x00Ë&& ((FLAGË!(uöt16_t)0x00))

	)

353 
	#IS_USART_BAUDRATE
(
BAUDRATE
Ë(((BAUDRATEË> 0Ë&& ((BAUDRATEË< 7500001))

	)

354 
	#IS_USART_ADDRESS
(
ADDRESS
Ë((ADDRESSË<0xF)

	)

355 
	#IS_USART_DATA
(
DATA
Ë((DATAË<0x1FF)

	)

369 
USART_DeInô
(
USART_Ty≥Def
* 
USARTx
);

372 
USART_Inô
(
USART_Ty≥Def
* 
USARTx
, 
USART_InôTy≥Def
* 
USART_InôSåu˘
);

373 
USART_Såu˘Inô
(
USART_InôTy≥Def
* 
USART_InôSåu˘
);

374 
USART_ClockInô
(
USART_Ty≥Def
* 
USARTx
, 
USART_ClockInôTy≥Def
* 
USART_ClockInôSåu˘
);

375 
USART_ClockSåu˘Inô
(
USART_ClockInôTy≥Def
* 
USART_ClockInôSåu˘
);

376 
USART_Cmd
(
USART_Ty≥Def
* 
USARTx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

377 
USART_SëPªsˇÀr
(
USART_Ty≥Def
* 
USARTx
, 
uöt8_t
 
USART_PªsˇÀr
);

378 
USART_OvîSam∂ög8Cmd
(
USART_Ty≥Def
* 
USARTx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

379 
USART_O√BôMëhodCmd
(
USART_Ty≥Def
* 
USARTx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

382 
USART_SídD©a
(
USART_Ty≥Def
* 
USARTx
, 
uöt16_t
 
D©a
);

383 
uöt16_t
 
USART_Re˚iveD©a
(
USART_Ty≥Def
* 
USARTx
);

386 
USART_SëAddªss
(
USART_Ty≥Def
* 
USARTx
, 
uöt8_t
 
USART_Addªss
);

387 
USART_WakeUpC⁄fig
(
USART_Ty≥Def
* 
USARTx
, 
uöt16_t
 
USART_WakeUp
);

388 
USART_Re˚ivîWakeUpCmd
(
USART_Ty≥Def
* 
USARTx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

391 
USART_LINBªakDëe˘LígthC⁄fig
(
USART_Ty≥Def
* 
USARTx
, 
uöt16_t
 
USART_LINBªakDëe˘Lígth
);

392 
USART_LINCmd
(
USART_Ty≥Def
* 
USARTx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

393 
USART_SídBªak
(
USART_Ty≥Def
* 
USARTx
);

396 
USART_HÆfDu∂exCmd
(
USART_Ty≥Def
* 
USARTx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

399 
USART_Sm¨tC¨dCmd
(
USART_Ty≥Def
* 
USARTx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

400 
USART_Sm¨tC¨dNACKCmd
(
USART_Ty≥Def
* 
USARTx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

401 
USART_SëGu¨dTime
(
USART_Ty≥Def
* 
USARTx
, 
uöt8_t
 
USART_Gu¨dTime
);

404 
USART_IrDAC⁄fig
(
USART_Ty≥Def
* 
USARTx
, 
uöt16_t
 
USART_IrDAMode
);

405 
USART_IrDACmd
(
USART_Ty≥Def
* 
USARTx
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

408 
USART_DMACmd
(
USART_Ty≥Def
* 
USARTx
, 
uöt16_t
 
USART_DMAReq
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

411 
USART_ITC⁄fig
(
USART_Ty≥Def
* 
USARTx
, 
uöt16_t
 
USART_IT
, 
Fun˘i⁄ÆSèã
 
NewSèã
);

412 
FœgSètus
 
USART_GëFœgSètus
(
USART_Ty≥Def
* 
USARTx
, 
uöt16_t
 
USART_FLAG
);

413 
USART_CÀ¨Fœg
(
USART_Ty≥Def
* 
USARTx
, 
uöt16_t
 
USART_FLAG
);

414 
ITSètus
 
USART_GëITSètus
(
USART_Ty≥Def
* 
USARTx
, 
uöt16_t
 
USART_IT
);

415 
USART_CÀ¨ITPídögBô
(
USART_Ty≥Def
* 
USARTx
, 
uöt16_t
 
USART_IT
);

417 #ifde‡
__˝lu•lus


	@stm32f4xx_wwdg.h

30 #i‚de‡
__STM32F4xx_WWDG_H


31 
	#__STM32F4xx_WWDG_H


	)

33 #ifde‡
__˝lu•lus


38 
	~"°m32f4xx.h
"

59 
	#WWDG_PªsˇÀr_1
 ((
uöt32_t
)0x00000000)

	)

60 
	#WWDG_PªsˇÀr_2
 ((
uöt32_t
)0x00000080)

	)

61 
	#WWDG_PªsˇÀr_4
 ((
uöt32_t
)0x00000100)

	)

62 
	#WWDG_PªsˇÀr_8
 ((
uöt32_t
)0x00000180)

	)

63 
	#IS_WWDG_PRESCALER
(
PRESCALER
Ë(((PRESCALERË=
WWDG_PªsˇÀr_1
Ë|| \

	)

64 ((
PRESCALER
Ë=
WWDG_PªsˇÀr_2
) || \

65 ((
PRESCALER
Ë=
WWDG_PªsˇÀr_4
) || \

66 ((
PRESCALER
Ë=
WWDG_PªsˇÀr_8
))

67 
	#IS_WWDG_WINDOW_VALUE
(
VALUE
Ë((VALUEË<0x7F)

	)

68 
	#IS_WWDG_COUNTER
(
COUNTER
Ë(((COUNTERË>0x40Ë&& ((COUNTERË<0x7F))

	)

82 
WWDG_DeInô
();

85 
WWDG_SëPªsˇÀr
(
uöt32_t
 
WWDG_PªsˇÀr
);

86 
WWDG_SëWödowVÆue
(
uöt8_t
 
WödowVÆue
);

87 
WWDG_E«bÀIT
();

88 
WWDG_SëCou¡î
(
uöt8_t
 
Cou¡î
);

91 
WWDG_E«bÀ
(
uöt8_t
 
Cou¡î
);

94 
FœgSètus
 
WWDG_GëFœgSètus
();

95 
WWDG_CÀ¨Fœg
();

97 #ifde‡
__˝lu•lus


	@
1
.
1
/usr/include
31
519
misc.h
stm32f4xx_adc.h
stm32f4xx_can.h
stm32f4xx_crc.h
stm32f4xx_cryp.h
stm32f4xx_dac.h
stm32f4xx_dbgmcu.h
stm32f4xx_dcmi.h
stm32f4xx_dma.h
stm32f4xx_dma2d.h
stm32f4xx_exti.h
stm32f4xx_flash.h
stm32f4xx_flash_ramfunc.h
stm32f4xx_fmc.h
stm32f4xx_fsmc.h
stm32f4xx_gpio.h
stm32f4xx_hash.h
stm32f4xx_i2c.h
stm32f4xx_iwdg.h
stm32f4xx_ltdc.h
stm32f4xx_pwr.h
stm32f4xx_rcc.h
stm32f4xx_rng.h
stm32f4xx_rtc.h
stm32f4xx_sai.h
stm32f4xx_sdio.h
stm32f4xx_spi.h
stm32f4xx_syscfg.h
stm32f4xx_tim.h
stm32f4xx_usart.h
stm32f4xx_wwdg.h
